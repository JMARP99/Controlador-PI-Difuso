

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Oct 23 00:16:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110   000000                     
   111                           ; Generated 06/04/2022 GMT
   112                           ; 
   113                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F45K50 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145   000000                     
   146 ;; Function _TP_salida_sNG_equal is unused but had its address taken
   147   000000                     
   148 ;; Function _TP_salida_sNM_equal is unused but had its address taken
   149   000000                     
   150 ;; Function _TP_salida_sNP_equal is unused but had its address taken
   151   000000                     
   152 ;; Function _TP_salida_sZ_equal is unused but had its address taken
   153   000000                     
   154 ;; Function _TP_salida_sPP_equal is unused but had its address taken
   155   000000                     
   156 ;; Function _TP_salida_sPM_equal is unused but had its address taken
   157   000000                     
   158 ;; Function _TP_salida_sPG_equal is unused but had its address taken
   159   000000                     
   160                           	psect	idataBANK0
   161   00624E                     __pidataBANK0:
   162                           	callstack 0
   163                           
   164                           ;initializer for _columna
   165   00624E  0B                 	db	11
   166                           
   167                           	psect	idataBANK1
   168   006156                     __pidataBANK1:
   169                           	callstack 0
   170                           
   171                           ;initializer for _Keypad4x4
   172   006156  31                 	db	49
   173   006157  32                 	db	50
   174   006158  33                 	db	51
   175   006159  41                 	db	65
   176   00615A  34                 	db	52
   177   00615B  35                 	db	53
   178   00615C  36                 	db	54
   179   00615D  42                 	db	66
   180   00615E  37                 	db	55
   181   00615F  38                 	db	56
   182   006160  39                 	db	57
   183   006161  43                 	db	67
   184   006162  2A                 	db	42
   185   006163  30                 	db	48
   186   006164  23                 	db	35
   187   006165  44                 	db	68
   188                           
   189                           ;initializer for _constante
   190   006166  0000               	dw	0
   191   006168  41BC               	dw	16828
   192   000000                     _PR2	set	4027
   193   000000                     _TMR2	set	4028
   194   000000                     _ANSELB	set	3932
   195   000000                     _TRISAbits	set	3986
   196   000000                     _RCREG1	set	4014
   197   000000                     _TXREG1	set	4013
   198   000000                     _SPBRG1	set	4015
   199   000000                     _BAUDCON1	set	4024
   200   000000                     _CCPR2L	set	3984
   201   000000                     _LATDbits	set	3980
   202   000000                     _TRISDbits	set	3989
   203   000000                     _RCSTA1bits	set	4011
   204   000000                     _TXSTA1bits	set	4012
   205   000000                     _ANSELAbits	set	3931
   206   000000                     _ANSELCbits	set	3933
   207   000000                     _PORTB	set	3969
   208   000000                     _LATB	set	3978
   209   000000                     _TRISB	set	3987
   210   000000                     _OSCCONbits	set	4051
   211   000000                     _T0CONbits	set	4053
   212   000000                     _CCP2CONbits	set	3991
   213   000000                     _TRISD	set	3989
   214   000000                     _PIE1bits	set	3997
   215   000000                     _PIR1bits	set	3998
   216   000000                     _RCSTA1	set	4011
   217   000000                     _TXSTA1	set	4012
   218   000000                     _TRISCbits	set	3988
   219   000000                     _LATD	set	3980
   220   000000                     _WPUBbits	set	3973
   221   000000                     _ANSELD	set	3934
   222   000000                     _TMR1	set	4046
   223   000000                     _T2CONbits	set	4026
   224   000000                     _T1CONbits	set	4045
   225   000000                     _SPBRGH1	set	4016
   226   000000                     _CCPR2	set	3984
   227   000000                     _TMR0	set	4054
   228   000000                     _INTCON2bits	set	4081
   229   000000                     _INTCONbits	set	4082
   230   000000                     _RCONbits	set	4048
   231                           
   232                           	psect	mediumconst
   233   007ED2                     __pmediumconst:
   234                           	callstack 0
   235   007ED2  00                 	db	0
   236   007ED3                     STR_17:
   237   007ED3  56                 	db	86	;'V'
   238   007ED4  65                 	db	101	;'e'
   239   007ED5  6C                 	db	108	;'l'
   240   007ED6  6F                 	db	111	;'o'
   241   007ED7  63                 	db	99	;'c'
   242   007ED8  69                 	db	105	;'i'
   243   007ED9  64                 	db	100	;'d'
   244   007EDA  61                 	db	97	;'a'
   245   007EDB  64                 	db	100	;'d'
   246   007EDC  20                 	db	32
   247   007EDD  20                 	db	32
   248   007EDE  3A                 	db	58	;':'
   249   007EDF  25                 	db	37
   250   007EE0  30                 	db	48	;'0'
   251   007EE1  33                 	db	51	;'3'
   252   007EE2  75                 	db	117	;'u'
   253   007EE3  20                 	db	32
   254   007EE4  20                 	db	32
   255   007EE5  20                 	db	32
   256   007EE6  00                 	db	0
   257   007EE7                     STR_8:
   258   007EE7  49                 	db	73	;'I'
   259   007EE8  6E                 	db	110	;'n'
   260   007EE9  69                 	db	105	;'i'
   261   007EEA  63                 	db	99	;'c'
   262   007EEB  69                 	db	105	;'i'
   263   007EEC  61                 	db	97	;'a'
   264   007EED  72                 	db	114	;'r'
   265   007EEE  20                 	db	32
   266   007EEF  63                 	db	99	;'c'
   267   007EF0  6F                 	db	111	;'o'
   268   007EF1  6E                 	db	110	;'n'
   269   007EF2  74                 	db	116	;'t'
   270   007EF3  72                 	db	114	;'r'
   271   007EF4  6F                 	db	111	;'o'
   272   007EF5  6C                 	db	108	;'l'
   273   007EF6  20                 	db	32
   274   007EF7  28                 	db	40
   275   007EF8  2A                 	db	42
   276   007EF9  29                 	db	41
   277   007EFA  00                 	db	0
   278   007EFB                     STR_10:
   279   007EFB  20                 	db	32
   280   007EFC  20                 	db	32
   281   007EFD  64                 	db	100	;'d'
   282   007EFE  65                 	db	101	;'e'
   283   007EFF  6C                 	db	108	;'l'
   284   007F00  20                 	db	32
   285   007F01  52                 	db	82	;'R'
   286   007F02  61                 	db	97	;'a'
   287   007F03  6E                 	db	110	;'n'
   288   007F04  67                 	db	103	;'g'
   289   007F05  6F                 	db	111	;'o'
   290   007F06  20                 	db	32
   291   007F07  5B                 	db	91	;'['
   292   007F08  30                 	db	48	;'0'
   293   007F09  2D                 	db	45
   294   007F0A  35                 	db	53	;'5'
   295   007F0B  30                 	db	48	;'0'
   296   007F0C  30                 	db	48	;'0'
   297   007F0D  5D                 	db	93	;']'
   298   007F0E  00                 	db	0
   299   007F0F                     STR_12:
   300   007F0F  20                 	db	32
   301   007F10  20                 	db	32
   302   007F11  45                 	db	69	;'E'
   303   007F12  6C                 	db	108	;'l'
   304   007F13  65                 	db	101	;'e'
   305   007F14  67                 	db	103	;'g'
   306   007F15  69                 	db	105	;'i'
   307   007F16  72                 	db	114	;'r'
   308   007F17  20                 	db	32
   309   007F18  52                 	db	82	;'R'
   310   007F19  65                 	db	101	;'e'
   311   007F1A  66                 	db	102	;'f'
   312   007F1B  65                 	db	101	;'e'
   313   007F1C  72                 	db	114	;'r'
   314   007F1D  65                 	db	101	;'e'
   315   007F1E  6E                 	db	110	;'n'
   316   007F1F  63                 	db	99	;'c'
   317   007F20  69                 	db	105	;'i'
   318   007F21  61                 	db	97	;'a'
   319   007F22  00                 	db	0
   320   007F23                     STR_16:
   321   007F23  53                 	db	83	;'S'
   322   007F24  65                 	db	101	;'e'
   323   007F25  74                 	db	116	;'t'
   324   007F26  50                 	db	80	;'P'
   325   007F27  6F                 	db	111	;'o'
   326   007F28  69                 	db	105	;'i'
   327   007F29  6E                 	db	110	;'n'
   328   007F2A  74                 	db	116	;'t'
   329   007F2B  20                 	db	32
   330   007F2C  20                 	db	32
   331   007F2D  20                 	db	32
   332   007F2E  3A                 	db	58	;':'
   333   007F2F  25                 	db	37
   334   007F30  30                 	db	48	;'0'
   335   007F31  33                 	db	51	;'3'
   336   007F32  2E                 	db	46
   337   007F33  30                 	db	48	;'0'
   338   007F34  32                 	db	50	;'2'
   339   007F35  66                 	db	102	;'f'
   340   007F36  00                 	db	0
   341   007F37                     STR_9:
   342   007F37  20                 	db	32
   343   007F38  20                 	db	32
   344   007F39  52                 	db	82	;'R'
   345   007F3A  65                 	db	101	;'e'
   346   007F3B  66                 	db	102	;'f'
   347   007F3C  65                 	db	101	;'e'
   348   007F3D  72                 	db	114	;'r'
   349   007F3E  65                 	db	101	;'e'
   350   007F3F  6E                 	db	110	;'n'
   351   007F40  63                 	db	99	;'c'
   352   007F41  69                 	db	105	;'i'
   353   007F42  61                 	db	97	;'a'
   354   007F43  20                 	db	32
   355   007F44  66                 	db	102	;'f'
   356   007F45  75                 	db	117	;'u'
   357   007F46  65                 	db	101	;'e'
   358   007F47  72                 	db	114	;'r'
   359   007F48  61                 	db	97	;'a'
   360   007F49  00                 	db	0
   361   007F4A                     STR_19:
   362   007F4A  43                 	db	67	;'C'
   363   007F4B  6F                 	db	111	;'o'
   364   007F4C  6E                 	db	110	;'n'
   365   007F4D  66                 	db	102	;'f'
   366   007F4E  69                 	db	105	;'i'
   367   007F4F  67                 	db	103	;'g'
   368   007F50  75                 	db	117	;'u'
   369   007F51  72                 	db	114	;'r'
   370   007F52  61                 	db	97	;'a'
   371   007F53  63                 	db	99	;'c'
   372   007F54  69                 	db	105	;'i'
   373   007F55  6F                 	db	111	;'o'
   374   007F56  6E                 	db	110	;'n'
   375   007F57  20                 	db	32
   376   007F58  28                 	db	40
   377   007F59  2A                 	db	42
   378   007F5A  29                 	db	41
   379   007F5B  00                 	db	0
   380   007F5C                     STR_5:
   381   007F5C  45                 	db	69	;'E'
   382   007F5D  6C                 	db	108	;'l'
   383   007F5E  65                 	db	101	;'e'
   384   007F5F  67                 	db	103	;'g'
   385   007F60  69                 	db	105	;'i'
   386   007F61  72                 	db	114	;'r'
   387   007F62  20                 	db	32
   388   007F63  72                 	db	114	;'r'
   389   007F64  65                 	db	101	;'e'
   390   007F65  66                 	db	102	;'f'
   391   007F66  65                 	db	101	;'e'
   392   007F67  72                 	db	114	;'r'
   393   007F68  65                 	db	101	;'e'
   394   007F69  6E                 	db	110	;'n'
   395   007F6A  63                 	db	99	;'c'
   396   007F6B  69                 	db	105	;'i'
   397   007F6C  61                 	db	97	;'a'
   398   007F6D  00                 	db	0
   399   007F6E                     STR_1:
   400   007F6E  49                 	db	73	;'I'
   401   007F6F  6E                 	db	110	;'n'
   402   007F70  69                 	db	105	;'i'
   403   007F71  63                 	db	99	;'c'
   404   007F72  69                 	db	105	;'i'
   405   007F73  61                 	db	97	;'a'
   406   007F74  6E                 	db	110	;'n'
   407   007F75  64                 	db	100	;'d'
   408   007F76  6F                 	db	111	;'o'
   409   007F77  20                 	db	32
   410   007F78  53                 	db	83	;'S'
   411   007F79  69                 	db	105	;'i'
   412   007F7A  73                 	db	115	;'s'
   413   007F7B  74                 	db	116	;'t'
   414   007F7C  65                 	db	101	;'e'
   415   007F7D  6D                 	db	109	;'m'
   416   007F7E  61                 	db	97	;'a'
   417   007F7F  00                 	db	0
   418   007F80                     STR_18:
   419   007F80  43                 	db	67	;'C'
   420   007F81  6F                 	db	111	;'o'
   421   007F82  6E                 	db	110	;'n'
   422   007F83  74                 	db	116	;'t'
   423   007F84  72                 	db	114	;'r'
   424   007F85  6F                 	db	111	;'o'
   425   007F86  6C                 	db	108	;'l'
   426   007F87  20                 	db	32
   427   007F88  50                 	db	80	;'P'
   428   007F89  49                 	db	73	;'I'
   429   007F8A  2D                 	db	45
   430   007F8B  44                 	db	68	;'D'
   431   007F8C  69                 	db	105	;'i'
   432   007F8D  66                 	db	102	;'f'
   433   007F8E  75                 	db	117	;'u'
   434   007F8F  73                 	db	115	;'s'
   435   007F90  6F                 	db	111	;'o'
   436   007F91  00                 	db	0
   437   007F92                     STR_3:
   438   007F92  45                 	db	69	;'E'
   439   007F93  73                 	db	115	;'s'
   440   007F94  70                 	db	112	;'p'
   441   007F95  65                 	db	101	;'e'
   442   007F96  72                 	db	114	;'r'
   443   007F97  65                 	db	101	;'e'
   444   007F98  20                 	db	32
   445   007F99  32                 	db	50	;'2'
   446   007F9A  20                 	db	32
   447   007F9B  73                 	db	115	;'s'
   448   007F9C  65                 	db	101	;'e'
   449   007F9D  67                 	db	103	;'g'
   450   007F9E  75                 	db	117	;'u'
   451   007F9F  6E                 	db	110	;'n'
   452   007FA0  64                 	db	100	;'d'
   453   007FA1  6F                 	db	111	;'o'
   454   007FA2  73                 	db	115	;'s'
   455   007FA3  00                 	db	0
   456   007FA4                     STR_2:
   457   007FA4  45                 	db	69	;'E'
   458   007FA5  73                 	db	115	;'s'
   459   007FA6  70                 	db	112	;'p'
   460   007FA7  65                 	db	101	;'e'
   461   007FA8  72                 	db	114	;'r'
   462   007FA9  65                 	db	101	;'e'
   463   007FAA  20                 	db	32
   464   007FAB  33                 	db	51	;'3'
   465   007FAC  20                 	db	32
   466   007FAD  73                 	db	115	;'s'
   467   007FAE  65                 	db	101	;'e'
   468   007FAF  67                 	db	103	;'g'
   469   007FB0  75                 	db	117	;'u'
   470   007FB1  6E                 	db	110	;'n'
   471   007FB2  64                 	db	100	;'d'
   472   007FB3  6F                 	db	111	;'o'
   473   007FB4  73                 	db	115	;'s'
   474   007FB5  00                 	db	0
   475   007FB6                     STR_4:
   476   007FB6  45                 	db	69	;'E'
   477   007FB7  73                 	db	115	;'s'
   478   007FB8  70                 	db	112	;'p'
   479   007FB9  65                 	db	101	;'e'
   480   007FBA  72                 	db	114	;'r'
   481   007FBB  65                 	db	101	;'e'
   482   007FBC  20                 	db	32
   483   007FBD  31                 	db	49	;'1'
   484   007FBE  20                 	db	32
   485   007FBF  73                 	db	115	;'s'
   486   007FC0  65                 	db	101	;'e'
   487   007FC1  67                 	db	103	;'g'
   488   007FC2  75                 	db	117	;'u'
   489   007FC3  6E                 	db	110	;'n'
   490   007FC4  64                 	db	100	;'d'
   491   007FC5  6F                 	db	111	;'o'
   492   007FC6  00                 	db	0
   493   007FC7                     STR_11:
   494   007FC7  20                 	db	32
   495   007FC8  20                 	db	32
   496   007FC9  20                 	db	32
   497   007FCA  20                 	db	32
   498   007FCB  20                 	db	32
   499   007FCC  20                 	db	32
   500   007FCD  56                 	db	86	;'V'
   501   007FCE  6F                 	db	111	;'o'
   502   007FCF  6C                 	db	108	;'l'
   503   007FD0  76                 	db	118	;'v'
   504   007FD1  65                 	db	101	;'e'
   505   007FD2  72                 	db	114	;'r'
   506   007FD3  20                 	db	32
   507   007FD4  61                 	db	97	;'a'
   508   007FD5  00                 	db	0
   509   007FD6                     STR_7:
   510   007FD6  53                 	db	83	;'S'
   511   007FD7  65                 	db	101	;'e'
   512   007FD8  74                 	db	116	;'t'
   513   007FD9  50                 	db	80	;'P'
   514   007FDA  6F                 	db	111	;'o'
   515   007FDB  69                 	db	105	;'i'
   516   007FDC  6E                 	db	110	;'n'
   517   007FDD  74                 	db	116	;'t'
   518   007FDE  3A                 	db	58	;':'
   519   007FDF  20                 	db	32
   520   007FE0  00                 	db	0
   521   007FE1                     STR_14:
   522   007FE1  25                 	db	37
   523   007FE2  30                 	db	48	;'0'
   524   007FE3  31                 	db	49	;'1'
   525   007FE4  2E                 	db	46
   526   007FE5  30                 	db	48	;'0'
   527   007FE6  32                 	db	50	;'2'
   528   007FE7  66                 	db	102	;'f'
   529   007FE8  2C                 	db	44
   530   007FE9  00                 	db	0
   531   007FEA                     STR_15:
   532   007FEA  25                 	db	37
   533   007FEB  30                 	db	48	;'0'
   534   007FEC  31                 	db	49	;'1'
   535   007FED  75                 	db	117	;'u'
   536   007FEE  0D                 	db	13
   537   007FEF  0A                 	db	10
   538   007FF0  00                 	db	0
   539   007FF1                     STR_13:
   540   007FF1  25                 	db	37
   541   007FF2  30                 	db	48	;'0'
   542   007FF3  31                 	db	49	;'1'
   543   007FF4  75                 	db	117	;'u'
   544   007FF5  2C                 	db	44
   545   007FF6  00                 	db	0
   546   007FF7                     STR_20:
   547   007FF7  69                 	db	105	;'i'
   548   007FF8  6E                 	db	110	;'n'
   549   007FF9  66                 	db	102	;'f'
   550   007FFA  00                 	db	0
   551   007FFB                     STR_23:
   552   007FFB  6E                 	db	110	;'n'
   553   007FFC  61                 	db	97	;'a'
   554   007FFD  6E                 	db	110	;'n'
   555   007FFE  00                 	db	0
   556   007FFF  00                 	db	0	; dummy byte at the end
   557   000000                     
   558                           ; #config settings
   559                           
   560                           	psect	cinit
   561   005B5A                     __pcinit:
   562                           	callstack 0
   563   005B5A                     start_initialization:
   564                           	callstack 0
   565   005B5A                     __initialization:
   566                           	callstack 0
   567                           
   568                           ; Initialize objects allocated to BANK1 (20 bytes)
   569                           ; load TBLPTR registers with __pidataBANK1
   570   005B5A  0E56               	movlw	low __pidataBANK1
   571   005B5C  6EF6               	movwf	tblptrl,c
   572   005B5E  0E61               	movlw	high __pidataBANK1
   573   005B60  6EF7               	movwf	tblptrh,c
   574   005B62  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   575   005B64  6EF8               	movwf	tblptru,c
   576   005B66  EE01  F0E4         	lfsr	0,__pdataBANK1
   577   005B6A  EE10 F014          	lfsr	1,20
   578   005B6E                     copy_data0:
   579   005B6E  0009               	tblrd		*+
   580   005B70  CFF5 FFEE          	movff	tablat,postinc0
   581   005B74  50E5               	movf	postdec1,w,c
   582   005B76  50E1               	movf	fsr1l,w,c
   583   005B78  E1FA               	bnz	copy_data0
   584                           
   585                           ; Initialize objects allocated to BANK0 (1 bytes)
   586                           ; load TBLPTR registers with __pidataBANK0
   587   005B7A  0E4E               	movlw	low __pidataBANK0
   588   005B7C  6EF6               	movwf	tblptrl,c
   589   005B7E  0E62               	movlw	high __pidataBANK0
   590   005B80  6EF7               	movwf	tblptrh,c
   591   005B82  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   592   005B84  6EF8               	movwf	tblptru,c
   593   005B86  0009               	tblrd		*+	;fetch initializer
   594   005B88  CFF5 F0FD          	movff	tablat,__pdataBANK0
   595                           
   596                           ; Clear objects allocated to BANK2 (160 bytes)
   597   005B8C  EE02  F000         	lfsr	0,__pbssBANK2
   598   005B90  0EA0               	movlw	160
   599   005B92                     clear_0:
   600   005B92  6AEE               	clrf	postinc0,c
   601   005B94  06E8               	decf	wreg,f,c
   602   005B96  E1FD               	bnz	clear_0
   603                           
   604                           ; Clear objects allocated to BANK1 (24 bytes)
   605   005B98  EE01  F0CC         	lfsr	0,__pbssBANK1
   606   005B9C  0E18               	movlw	24
   607   005B9E                     clear_1:
   608   005B9E  6AEE               	clrf	postinc0,c
   609   005BA0  06E8               	decf	wreg,f,c
   610   005BA2  E1FD               	bnz	clear_1
   611                           
   612                           ; Clear objects allocated to BANK0 (46 bytes)
   613   005BA4  EE00  F0CF         	lfsr	0,__pbssBANK0
   614   005BA8  0E2E               	movlw	46
   615   005BAA                     clear_2:
   616   005BAA  6AEE               	clrf	postinc0,c
   617   005BAC  06E8               	decf	wreg,f,c
   618   005BAE  E1FD               	bnz	clear_2
   619   005BB0                     end_of_initialization:
   620                           	callstack 0
   621   005BB0                     __end_of__initialization:
   622                           	callstack 0
   623   005BB0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   624   005BB2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   625   005BB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   626   005BB6  6EF8               	movwf	tblptru,c
   627   005BB8  0100               	movlb	0
   628   005BBA  EF35  F010         	goto	_main	;jump to C main() function
   629                           
   630                           	psect	bssBANK0
   631   0000CF                     __pbssBANK0:
   632                           	callstack 0
   633   0000CF                     ___fpclassifyf@F465:
   634                           	callstack 0
   635   0000CF                     	ds	4
   636   0000D3                     _salida_sistema:
   637                           	callstack 0
   638   0000D3                     	ds	4
   639   0000D7                     _Cambio_error:
   640                           	callstack 0
   641   0000D7                     	ds	4
   642   0000DB                     _salida_:
   643                           	callstack 0
   644   0000DB                     	ds	4
   645   0000DF                     _error_:
   646                           	callstack 0
   647   0000DF                     	ds	4
   648   0000E3                     _error:
   649                           	callstack 0
   650   0000E3                     	ds	4
   651   0000E7                     _setpoint:
   652                           	callstack 0
   653   0000E7                     	ds	4
   654   0000EB                     _width:
   655                           	callstack 0
   656   0000EB                     	ds	2
   657   0000ED                     _prec:
   658                           	callstack 0
   659   0000ED                     	ds	2
   660   0000EF                     _tiempo:
   661                           	callstack 0
   662   0000EF                     	ds	2
   663   0000F1                     _RPM:
   664                           	callstack 0
   665   0000F1                     	ds	2
   666   0000F3                     _flags:
   667                           	callstack 0
   668   0000F3                     	ds	1
   669   0000F4                     _indice:
   670                           	callstack 0
   671   0000F4                     	ds	1
   672   0000F5                     _tecla:
   673                           	callstack 0
   674   0000F5                     	ds	1
   675   0000F6                     _contador:
   676                           	callstack 0
   677   0000F6                     	ds	1
   678   0000F7                     _flagTimer0:
   679                           	callstack 0
   680   0000F7                     	ds	1
   681   0000F8                     _APPState:
   682                           	callstack 0
   683   0000F8                     	ds	1
   684   0000F9                     _salida:
   685                           	callstack 0
   686   0000F9                     	ds	4
   687                           
   688                           	psect	dataBANK0
   689   0000FD                     __pdataBANK0:
   690                           	callstack 0
   691   0000FD                     _columna:
   692                           	callstack 0
   693   0000FD                     	ds	1
   694                           
   695                           	psect	bssBANK1
   696   0001CC                     __pbssBANK1:
   697                           	callstack 0
   698   0001CC                     floorf@F526:
   699                           	callstack 0
   700   0001CC                     	ds	4
   701   0001D0                     _SP:
   702                           	callstack 0
   703   0001D0                     	ds	20
   704                           
   705                           	psect	dataBANK1
   706   0001E4                     __pdataBANK1:
   707                           	callstack 0
   708   0001E4                     _Keypad4x4:
   709                           	callstack 0
   710   0001E4                     	ds	16
   711   0001F4                     _constante:
   712                           	callstack 0
   713   0001F4                     	ds	4
   714                           
   715                           	psect	bssBANK2
   716   000200                     __pbssBANK2:
   717                           	callstack 0
   718   000200                     _dbuf:
   719                           	callstack 0
   720   000200                     	ds	80
   721   000250                     _strtiempo:
   722                           	callstack 0
   723   000250                     	ds	20
   724   000264                     _strpwm:
   725                           	callstack 0
   726   000264                     	ds	20
   727   000278                     _strRPM:
   728                           	callstack 0
   729   000278                     	ds	20
   730   00028C                     _strsetpoint:
   731                           	callstack 0
   732   00028C                     	ds	20
   733                           
   734                           	psect	cstackBANK1
   735   000100                     __pcstackBANK1:
   736                           	callstack 0
   737   000100                     RL_reglas_controlador@_Salida_degree:
   738                           	callstack 0
   739                           
   740                           ; 28 bytes @ 0x0
   741   000100                     	ds	28
   742   00011C                     _RL_reglas_controlador$2382:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x1C
   746   00011C                     	ds	4
   747   000120                     _RL_reglas_controlador$2383:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x20
   751   000120                     	ds	4
   752   000124                     _RL_reglas_controlador$2384:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x24
   756   000124                     	ds	4
   757   000128                     RL_reglas_controlador@_Salida_conc:
   758                           	callstack 0
   759                           
   760                           ; 56 bytes @ 0x28
   761   000128                     	ds	56
   762   000160                     _RL_reglas_controlador$2381:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x60
   766   000160                     	ds	4
   767   000164                     _RL_reglas_controlador$2380:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x64
   771   000164                     	ds	4
   772   000168                     RL_reglas_controlador@_Salida:
   773                           	callstack 0
   774                           
   775                           ; 26 bytes @ 0x68
   776   000168                     	ds	26
   777   000182                     RL_reglas_controlador@_rl:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x82
   781   000182                     	ds	4
   782   000186                     _RL_reglas_controlador$2377:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x86
   786   000186                     	ds	4
   787   00018A                     _RL_reglas_controlador$2378:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x8A
   791   00018A                     	ds	4
   792   00018E                     _RL_reglas_controlador$2379:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x8E
   796   00018E                     	ds	4
   797   000192                     RL_reglas_controlador@_error_eq:
   798                           	callstack 0
   799                           
   800                           ; 28 bytes @ 0x92
   801   000192                     	ds	28
   802   0001AE                     RL_reglas_controlador@_CambioError_eq:
   803                           	callstack 0
   804                           
   805                           ; 28 bytes @ 0xAE
   806   0001AE                     	ds	28
   807   0001CA                     RL_reglas_controlador@_Salida_i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0xCA
   811   0001CA                     	ds	2
   812                           
   813                           	psect	cstackBANK0
   814   000060                     __pcstackBANK0:
   815                           	callstack 0
   816   000060                     ?_MF_xfsg_triangle_equal:
   817                           	callstack 0
   818   000060                     ?_OP_operador_Defuz:
   819                           	callstack 0
   820   000060                     MF_xfsg_triangle_equal@x:
   821                           	callstack 0
   822   000060                     floorf@m:
   823                           	callstack 0
   824   000060                     OP_operador_Defuz@mf:
   825                           	callstack 0
   826                           
   827                           ; 26 bytes @ 0x0
   828   000060                     	ds	4
   829   000064                     floorf@e:
   830                           	callstack 0
   831   000064                     MF_xfsg_triangle_equal@min:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x4
   835   000064                     	ds	2
   836   000066                     floorf@u:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x6
   840   000066                     	ds	2
   841   000068                     MF_xfsg_triangle_equal@max:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x8
   845   000068                     	ds	2
   846   00006A                     efgtoa@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0xA
   850   00006A                     	ds	2
   851   00006C                     MF_xfsg_triangle_equal@step:
   852                           	callstack 0
   853   00006C                     efgtoa@f:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0xC
   857   00006C                     	ds	4
   858   000070                     efgtoa@c:
   859                           	callstack 0
   860   000070                     MF_xfsg_triangle_equal@a:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x10
   864   000070                     	ds	1
   865   000071                     efgtoa@ne:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x11
   869   000071                     	ds	2
   870   000073                     efgtoa@p:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x13
   874   000073                     	ds	1
   875   000074                     MF_xfsg_triangle_equal@b:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x14
   879   000074                     	ds	1
   880   000075                     efgtoa@t:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x15
   884   000075                     	ds	2
   885   000077                     _efgtoa$1928:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x17
   889   000077                     	ds	1
   890   000078                     MF_xfsg_triangle_equal@c:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x18
   894   000078                     	ds	1
   895   000079                     efgtoa@pp:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x19
   899   000079                     	ds	1
   900   00007A                     efgtoa@mode:
   901                           	callstack 0
   902   00007A                     OP_operador_Defuz@min:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x1A
   906   00007A                     	ds	1
   907   00007B                     efgtoa@nmode:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x1B
   911   00007B                     	ds	1
   912   00007C                     ?_TP_error_eNG_equal:
   913                           	callstack 0
   914   00007C                     ?_TP_error_eNM_equal:
   915                           	callstack 0
   916   00007C                     ?_TP_error_eNP_equal:
   917                           	callstack 0
   918   00007C                     ?_TP_error_eZ_equal:
   919                           	callstack 0
   920   00007C                     ?_TP_error_ePP_equal:
   921                           	callstack 0
   922   00007C                     ?_TP_error_ePM_equal:
   923                           	callstack 0
   924   00007C                     ?_TP_error_ePG_equal:
   925                           	callstack 0
   926   00007C                     ?_TP_CambioError_ceNG_equal:
   927                           	callstack 0
   928   00007C                     ?_TP_CambioError_ceNM_equal:
   929                           	callstack 0
   930   00007C                     ?_TP_CambioError_ceNP_equal:
   931                           	callstack 0
   932   00007C                     ?_TP_CambioError_ceZ_equal:
   933                           	callstack 0
   934   00007C                     ?_TP_CambioError_cePP_equal:
   935                           	callstack 0
   936   00007C                     ?_TP_CambioError_cePM_equal:
   937                           	callstack 0
   938   00007C                     ?_TP_CambioError_cePG_equal:
   939                           	callstack 0
   940   00007C                     efgtoa@d:
   941                           	callstack 0
   942   00007C                     TP_error_eNG_equal@x:
   943                           	callstack 0
   944   00007C                     TP_error_eNM_equal@x:
   945                           	callstack 0
   946   00007C                     TP_error_eNP_equal@x:
   947                           	callstack 0
   948   00007C                     TP_error_eZ_equal@x:
   949                           	callstack 0
   950   00007C                     TP_error_ePP_equal@x:
   951                           	callstack 0
   952   00007C                     TP_error_ePM_equal@x:
   953                           	callstack 0
   954   00007C                     TP_error_ePG_equal@x:
   955                           	callstack 0
   956   00007C                     TP_CambioError_ceNG_equal@x:
   957                           	callstack 0
   958   00007C                     TP_CambioError_ceNM_equal@x:
   959                           	callstack 0
   960   00007C                     TP_CambioError_ceNP_equal@x:
   961                           	callstack 0
   962   00007C                     TP_CambioError_ceZ_equal@x:
   963                           	callstack 0
   964   00007C                     TP_CambioError_cePP_equal@x:
   965                           	callstack 0
   966   00007C                     TP_CambioError_cePM_equal@x:
   967                           	callstack 0
   968   00007C                     TP_CambioError_cePG_equal@x:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x1C
   972   00007C                     	ds	2
   973   00007E                     efgtoa@m:
   974                           	callstack 0
   975   00007E                     OP_operador_Defuz@max:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x1E
   979   00007E                     	ds	2
   980   000080                     efgtoa@e:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x20
   984   000080                     	ds	2
   985   000082                     efgtoa@w:
   986                           	callstack 0
   987   000082                     OP_operador_Defuz@num:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x22
   991   000082                     	ds	2
   992   000084                     efgtoa@ou:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x24
   996   000084                     	ds	2
   997   000086                     OP_operador_Defuz@denom:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x26
  1001   000086                     	ds	2
  1002   000088                     efgtoa@h:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x28
  1006   000088                     	ds	2
  1007   00008A                     OP_operador_Defuz@i:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2A
  1011   00008A                     	ds	2
  1012   00008C                     RL_reglas_controlador@error:
  1013                           	callstack 0
  1014   00008C                     efgtoa@l:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x2C
  1018   00008C                     	ds	4
  1019   000090                     efgtoa@i:
  1020                           	callstack 0
  1021   000090                     RL_reglas_controlador@CambioError:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x30
  1025   000090                     	ds	2
  1026   000092                     efgtoa@sign:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x32
  1030   000092                     	ds	1
  1031   000093                     efgtoa@g:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x33
  1035   000093                     	ds	1
  1036   000094                     RL_reglas_controlador@Salida:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x34
  1040   000094                     	ds	2
  1041   000096                     Control_velocidad_difusoInferenceEngine@error:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x36
  1045   000096                     	ds	1
  1046   000097                     efgtoa@n:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x37
  1050   000097                     	ds	2
  1051   000099                     efgtoa@u:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x39
  1055   000099                     	ds	1
  1056   00009A                     Control_velocidad_difusoInferenceEngine@CambioError:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x3A
  1060   00009A                     	ds	3
  1061   00009D                     vfpfcnvrt@fp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x3D
  1065   00009D                     	ds	1
  1066   00009E                     Control_velocidad_difusoInferenceEngine@_d_Salida:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x3E
  1070   00009E                     	ds	1
  1071   00009F                     vfpfcnvrt@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x3F
  1075   00009F                     	ds	2
  1076   0000A1                     vfpfcnvrt@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x41
  1080   0000A1                     	ds	2
  1081   0000A3                     vfpfcnvrt@done:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x43
  1085   0000A3                     	ds	2
  1086   0000A5                     vfpfcnvrt@convarg:
  1087                           	callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x45
  1090   0000A5                     	ds	8
  1091   0000AD                     vfpfcnvrt@c:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x4D
  1095   0000AD                     	ds	1
  1096   0000AE                     vfpfcnvrt@cp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x4E
  1100   0000AE                     	ds	2
  1101   0000B0                     ?_vfprintf:
  1102                           	callstack 0
  1103   0000B0                     vfprintf@fp:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x50
  1107   0000B0                     	ds	2
  1108   0000B2                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x52
  1112   0000B2                     	ds	2
  1113   0000B4                     vfprintf@ap:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x54
  1117   0000B4                     	ds	2
  1118   0000B6                     vfprintf@cfmt:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x56
  1122   0000B6                     	ds	2
  1123   0000B8                     ?_sprintf:
  1124                           	callstack 0
  1125   0000B8                     sprintf@s:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x58
  1129   0000B8                     	ds	2
  1130   0000BA                     sprintf@fmt:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x5A
  1134   0000BA                     	ds	6
  1135   0000C0                     sprintf@ap:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x60
  1139   0000C0                     	ds	2
  1140   0000C2                     sprintf@f:
  1141                           	callstack 0
  1142                           
  1143                           ; 11 bytes @ 0x62
  1144   0000C2                     	ds	11
  1145   0000CD                     ??_main:
  1146                           
  1147                           ; 1 bytes @ 0x6D
  1148   0000CD                     	ds	2
  1149                           
  1150                           	psect	cstackCOMRAM
  1151   000001                     __pcstackCOMRAM:
  1152                           	callstack 0
  1153   000001                     ??_Key_Enable_Filas:
  1154   000001                     ??_Key_Scan_Columnas:
  1155   000001                     ?_isspace:
  1156                           	callstack 0
  1157   000001                     ?_isdigit:
  1158                           	callstack 0
  1159   000001                     ?___fpclassifyf:
  1160                           	callstack 0
  1161   000001                     ?___wmul:
  1162                           	callstack 0
  1163   000001                     ?_labs:
  1164                           	callstack 0
  1165   000001                     ?_TP_salida_sNG_center:
  1166                           	callstack 0
  1167   000001                     ?_TP_salida_sNM_center:
  1168                           	callstack 0
  1169   000001                     ?_TP_salida_sNP_center:
  1170                           	callstack 0
  1171   000001                     ?_TP_salida_sZ_center:
  1172                           	callstack 0
  1173   000001                     ?_TP_salida_sPP_center:
  1174                           	callstack 0
  1175   000001                     ?_TP_salida_sPM_center:
  1176                           	callstack 0
  1177   000001                     ?_TP_salida_sPG_center:
  1178                           	callstack 0
  1179   000001                     ?___lmul:
  1180                           	callstack 0
  1181   000001                     ?___lldiv:
  1182                           	callstack 0
  1183   000001                     ?___flneg:
  1184                           	callstack 0
  1185   000001                     ?___fltol:
  1186                           	callstack 0
  1187   000001                     ?___lodiv:
  1188                           	callstack 0
  1189   000001                     ?___lomod:
  1190                           	callstack 0
  1191   000001                     EUSART_WriteChar@data:
  1192                           	callstack 0
  1193   000001                     putch@c:
  1194                           	callstack 0
  1195   000001                     Lcd_Port@a:
  1196                           	callstack 0
  1197   000001                     ___wmul@multiplier:
  1198                           	callstack 0
  1199   000001                     isdigit@c:
  1200                           	callstack 0
  1201   000001                     isspace@c:
  1202                           	callstack 0
  1203   000001                     memcpy@d1:
  1204                           	callstack 0
  1205   000001                     strcpy@dest:
  1206                           	callstack 0
  1207   000001                     ___lmul@multiplier:
  1208                           	callstack 0
  1209   000001                     ___lldiv@dividend:
  1210                           	callstack 0
  1211   000001                     ___fleq@ff1:
  1212                           	callstack 0
  1213   000001                     ___flneg@f1:
  1214                           	callstack 0
  1215   000001                     ___fltol@f1:
  1216                           	callstack 0
  1217   000001                     ___fpclassifyf@x:
  1218                           	callstack 0
  1219   000001                     labs@a:
  1220                           	callstack 0
  1221   000001                     ___lodiv@dividend:
  1222                           	callstack 0
  1223   000001                     ___lomod@dividend:
  1224                           	callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x0
  1227   000001                     	ds	1
  1228   000002                     ??_Lcd_Cmd:
  1229   000002                     Lcd_Write_Char@temp:
  1230                           	callstack 0
  1231   000002                     EUSART_WriteString@ptrString:
  1232                           	callstack 0
  1233   000002                     fputc@c:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x1
  1237   000002                     	ds	1
  1238   000003                     ??_isspace:
  1239   000003                     ??_isdigit:
  1240   000003                     Key_Enable_Filas@fila:
  1241                           	callstack 0
  1242   000003                     Lcd_Cmd@a:
  1243                           	callstack 0
  1244   000003                     Lcd_Write_Char@y:
  1245                           	callstack 0
  1246   000003                     ___wmul@multiplicand:
  1247                           	callstack 0
  1248   000003                     memcpy@s1:
  1249                           	callstack 0
  1250   000003                     strcpy@src:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x2
  1254   000003                     	ds	1
  1255   000004                     ??_Key_Read:
  1256   000004                     ??_Lcd_Init:
  1257   000004                     Lcd_Set_Cursor@b:
  1258                           	callstack 0
  1259   000004                     Lcd_Write_Char@a:
  1260                           	callstack 0
  1261   000004                     fputc@fp:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x3
  1265   000004                     	ds	1
  1266   000005                     ??___fpclassifyf:
  1267   000005                     ??_labs:
  1268   000005                     ??___fltol:
  1269   000005                     ?___flmul:
  1270                           	callstack 0
  1271   000005                     Lcd_Set_Cursor@a:
  1272                           	callstack 0
  1273   000005                     _isspace$1790:
  1274                           	callstack 0
  1275   000005                     Lcd_Write_String@a:
  1276                           	callstack 0
  1277   000005                     ___wmul@product:
  1278                           	callstack 0
  1279   000005                     memcpy@n:
  1280                           	callstack 0
  1281   000005                     strcpy@s:
  1282                           	callstack 0
  1283   000005                     ___lmul@multiplicand:
  1284                           	callstack 0
  1285   000005                     ___lldiv@divisor:
  1286                           	callstack 0
  1287   000005                     ___fleq@ff2:
  1288                           	callstack 0
  1289   000005                     ___flmul@b:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x4
  1293   000005                     	ds	1
  1294   000006                     ??_fputc:
  1295   000006                     Key_Read@key:
  1296                           	callstack 0
  1297   000006                     Lcd_Set_Cursor@z:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x5
  1301   000006                     	ds	1
  1302   000007                     ??_Lcd_Write_String:
  1303   000007                     ?_atoi:
  1304                           	callstack 0
  1305   000007                     Key_Read@value_column:
  1306                           	callstack 0
  1307   000007                     Lcd_Set_Cursor@y:
  1308                           	callstack 0
  1309   000007                     atoi@s:
  1310                           	callstack 0
  1311   000007                     memcpy@d:
  1312                           	callstack 0
  1313   000007                     strcpy@d:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x6
  1317   000007                     	ds	1
  1318   000008                     Lcd_Set_Cursor@temp:
  1319                           	callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x7
  1322   000008                     	ds	1
  1323   000009                     ??_atoi:
  1324   000009                     ??___fleq:
  1325   000009                     ___fltol@sign1:
  1326                           	callstack 0
  1327   000009                     Lcd_Write_String@i:
  1328                           	callstack 0
  1329   000009                     ___fpclassifyf@e:
  1330                           	callstack 0
  1331   000009                     memcpy@s:
  1332                           	callstack 0
  1333   000009                     ___lmul@product:
  1334                           	callstack 0
  1335   000009                     ___lldiv@quotient:
  1336                           	callstack 0
  1337   000009                     ___flmul@a:
  1338                           	callstack 0
  1339   000009                     ___lodiv@divisor:
  1340                           	callstack 0
  1341   000009                     ___lomod@divisor:
  1342                           	callstack 0
  1343                           
  1344                           ; 8 bytes @ 0x8
  1345   000009                     	ds	1
  1346   00000A                     ___fltol@exp1:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x9
  1350   00000A                     	ds	1
  1351   00000B                     memcpy@tmp:
  1352                           	callstack 0
  1353   00000B                     fputs@s:
  1354                           	callstack 0
  1355   00000B                     ___fpclassifyf@u:
  1356                           	callstack 0
  1357                           
  1358                           ; 4 bytes @ 0xA
  1359   00000B                     	ds	1
  1360   00000C                     atoi@neg:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0xB
  1364   00000C                     	ds	1
  1365   00000D                     ??___flmul:
  1366   00000D                     ?_atol:
  1367                           	callstack 0
  1368   00000D                     ___lldiv@counter:
  1369                           	callstack 0
  1370   00000D                     atol@s:
  1371                           	callstack 0
  1372   00000D                     fputs@fp:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0xC
  1376   00000D                     	ds	1
  1377   00000E                     atoi@n:
  1378                           	callstack 0
  1379   00000E                     EUSART_SerialBegin@baudios:
  1380                           	callstack 0
  1381                           
  1382                           ; 4 bytes @ 0xD
  1383   00000E                     	ds	1
  1384   00000F                     fputs@c:
  1385                           	callstack 0
  1386                           
  1387                           ; 1 bytes @ 0xE
  1388   00000F                     	ds	1
  1389   000010                     fputs@i:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0xF
  1393   000010                     	ds	1
  1394   000011                     ??_atol:
  1395   000011                     ___lomod@counter:
  1396                           	callstack 0
  1397   000011                     ___flmul@sign:
  1398                           	callstack 0
  1399   000011                     ___lodiv@quotient:
  1400                           	callstack 0
  1401                           
  1402                           ; 8 bytes @ 0x10
  1403   000011                     	ds	1
  1404   000012                     EUSART_SerialBegin@n:
  1405                           	callstack 0
  1406   000012                     pad@fp:
  1407                           	callstack 0
  1408   000012                     ___flmul@grs:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x11
  1412   000012                     	ds	2
  1413   000014                     pad@buf:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x13
  1417   000014                     	ds	2
  1418   000016                     ___flmul@aexp:
  1419                           	callstack 0
  1420   000016                     atol@neg:
  1421                           	callstack 0
  1422   000016                     pad@p:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x15
  1426   000016                     	ds	1
  1427   000017                     ___flmul@bexp:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x16
  1431   000017                     	ds	1
  1432   000018                     ??_pad:
  1433   000018                     ___flmul@prod:
  1434                           	callstack 0
  1435   000018                     atol@n:
  1436                           	callstack 0
  1437                           
  1438                           ; 4 bytes @ 0x17
  1439   000018                     	ds	1
  1440   000019                     ___lodiv@counter:
  1441                           	callstack 0
  1442   000019                     pad@i:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x18
  1446   000019                     	ds	2
  1447   00001B                     pad@w:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1A
  1451   00001B                     	ds	1
  1452   00001C                     ?___xxtofl:
  1453                           	callstack 0
  1454   00001C                     ___flmul@temp:
  1455                           	callstack 0
  1456   00001C                     ___xxtofl@val:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x1B
  1460   00001C                     	ds	1
  1461   00001D                     utoa@fp:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x1C
  1465   00001D                     	ds	1
  1466   00001E                     ?___fladd:
  1467                           	callstack 0
  1468   00001E                     ___flge@ff1:
  1469                           	callstack 0
  1470   00001E                     ___fladd@b:
  1471                           	callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x1D
  1474   00001E                     	ds	1
  1475   00001F                     utoa@d:
  1476                           	callstack 0
  1477                           
  1478                           ; 8 bytes @ 0x1E
  1479   00001F                     	ds	1
  1480   000020                     ??___xxtofl:
  1481                           
  1482                           ; 1 bytes @ 0x1F
  1483   000020                     	ds	2
  1484   000022                     ___flge@ff2:
  1485                           	callstack 0
  1486   000022                     ___fladd@a:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x21
  1490   000022                     	ds	2
  1491   000024                     ___xxtofl@sign:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x23
  1495   000024                     	ds	1
  1496   000025                     ___xxtofl@exp:
  1497                           	callstack 0
  1498                           
  1499                           ; 1 bytes @ 0x24
  1500   000025                     	ds	1
  1501   000026                     ??___fladd:
  1502   000026                     ??___flge:
  1503   000026                     ___xxtofl@arg:
  1504                           	callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x25
  1507   000026                     	ds	1
  1508   000027                     ??_utoa:
  1509                           
  1510                           ; 1 bytes @ 0x26
  1511   000027                     	ds	3
  1512   00002A                     ?_OP_operador_And:
  1513                           	callstack 0
  1514   00002A                     ___fladd@signs:
  1515                           	callstack 0
  1516   00002A                     OP_operador_And@a:
  1517                           	callstack 0
  1518                           
  1519                           ; 4 bytes @ 0x29
  1520   00002A                     	ds	1
  1521   00002B                     ___fladd@aexp:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x2A
  1525   00002B                     	ds	1
  1526   00002C                     ___fladd@bexp:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x2B
  1530   00002C                     	ds	1
  1531   00002D                     ___fladd@grs:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x2C
  1535   00002D                     	ds	1
  1536   00002E                     ?___flsub:
  1537                           	callstack 0
  1538   00002E                     OP_operador_And@b:
  1539                           	callstack 0
  1540   00002E                     ___flsub@b:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x2D
  1544   00002E                     	ds	1
  1545   00002F                     utoa@p:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x2E
  1549   00002F                     	ds	2
  1550   000031                     utoa@w:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x30
  1554   000031                     	ds	1
  1555   000032                     ?_OP_operador_Or:
  1556                           	callstack 0
  1557   000032                     OP_operador_Or@a:
  1558                           	callstack 0
  1559   000032                     ___flsub@a:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x31
  1563   000032                     	ds	1
  1564   000033                     utoa@n:
  1565                           	callstack 0
  1566                           
  1567                           ; 8 bytes @ 0x32
  1568   000033                     	ds	3
  1569   000036                     ?___fldiv:
  1570                           	callstack 0
  1571   000036                     OP_operador_Or@b:
  1572                           	callstack 0
  1573   000036                     ___fldiv@b:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0x35
  1577   000036                     	ds	4
  1578   00003A                     ___fldiv@a:
  1579                           	callstack 0
  1580                           
  1581                           ; 4 bytes @ 0x39
  1582   00003A                     	ds	1
  1583   00003B                     utoa@i:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x3A
  1587   00003B                     	ds	3
  1588   00003E                     ??___fldiv:
  1589                           
  1590                           ; 1 bytes @ 0x3D
  1591   00003E                     	ds	4
  1592   000042                     ___fldiv@rem:
  1593                           	callstack 0
  1594                           
  1595                           ; 4 bytes @ 0x41
  1596   000042                     	ds	4
  1597   000046                     ___fldiv@sign:
  1598                           	callstack 0
  1599                           
  1600                           ; 1 bytes @ 0x45
  1601   000046                     	ds	1
  1602   000047                     ___fldiv@new_exp:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x46
  1606   000047                     	ds	2
  1607   000049                     ___fldiv@grs:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x48
  1611   000049                     	ds	4
  1612   00004D                     ___fldiv@bexp:
  1613                           	callstack 0
  1614                           
  1615                           ; 1 bytes @ 0x4C
  1616   00004D                     	ds	1
  1617   00004E                     ___fldiv@aexp:
  1618                           	callstack 0
  1619                           
  1620                           ; 1 bytes @ 0x4D
  1621   00004E                     	ds	1
  1622   00004F                     ??_OP_operador_Defuz:
  1623   00004F                     ?_floorf:
  1624                           	callstack 0
  1625   00004F                     _MF_xfsg_triangle_equal$496:
  1626                           	callstack 0
  1627   00004F                     floorf@x:
  1628                           	callstack 0
  1629                           
  1630                           ; 4 bytes @ 0x4E
  1631   00004F                     	ds	4
  1632   000053                     ??_floorf:
  1633   000053                     ??_RL_reglas_controlador:
  1634                           
  1635                           ; 1 bytes @ 0x52
  1636   000053                     	ds	2
  1637   000055                     Control_velocidad_difusoInferenceEngine@Salida:
  1638                           	callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x54
  1641   000055                     	ds	4
  1642   000059                     ??_efgtoa:
  1643                           
  1644                           ; 1 bytes @ 0x58
  1645   000059                     	ds	2
  1646   00005B                     ??_vfpfcnvrt:
  1647                           
  1648                           ; 1 bytes @ 0x5A
  1649   00005B                     	ds	4
  1650   00005F                     
  1651                           ; 1 bytes @ 0x5E
  1652 ;;
  1653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1654 ;;
  1655 ;; *************** function _main *****************
  1656 ;; Defined at:
  1657 ;;		line 57 in file "mainEncoder.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2  440[None  ] int 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1674 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels required when called: 11
  1677 ;; This function calls:
  1678 ;;		_Control_velocidad_difusoInferenceEngine
  1679 ;;		_EUSART_WriteString
  1680 ;;		_Hardware_Init
  1681 ;;		_Key_Read
  1682 ;;		_LCD_imprimir_Datos
  1683 ;;		_Lcd_Clear
  1684 ;;		_Lcd_Set_Cursor
  1685 ;;		_Lcd_Write_Char
  1686 ;;		_Lcd_Write_String
  1687 ;;		___fladd
  1688 ;;		___flge
  1689 ;;		___flmul
  1690 ;;		___flsub
  1691 ;;		___fltol
  1692 ;;		___xxtofl
  1693 ;;		_atol
  1694 ;;		_sprintf
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text0
  1701   00206A                     __ptext0:
  1702                           	callstack 0
  1703   00206A                     _main:
  1704                           	callstack 20
  1705   00206A                     
  1706                           ;mainEncoder.c: 60:     Hardware_Init();
  1707   00206A  ECBA  F02F         	call	_Hardware_Init	;wreg free
  1708   00206E                     
  1709                           ;mainEncoder.c: 63:     LCD_imprimir_Datos();
  1710   00206E  EC8E  F028         	call	_LCD_imprimir_Datos	;wreg free
  1711   002072                     
  1712                           ;mainEncoder.c: 66:     APPState = 0;
  1713   002072  0E00               	movlw	0
  1714   002074  0100               	movlb	0	; () banked
  1715   002076  6FF8               	movwf	_APPState& (0+255),b
  1716   002078  EF8A  F013         	goto	l6306
  1717   00207C                     l6134:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;mainEncoder.c: 75:                 Lcd_Clear();
  1721   00207C  EC06  F031         	call	_Lcd_Clear	;wreg free
  1722                           
  1723                           ;mainEncoder.c: 78:                 Lcd_Set_Cursor(1,1);
  1724   002080  0E01               	movlw	1
  1725   002082  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1726   002084  0E01               	movlw	1
  1727   002086  ECF8  F025         	call	_Lcd_Set_Cursor
  1728   00208A                     
  1729                           ;mainEncoder.c: 79:                 Lcd_Write_String("Iniciando Sistema");
  1730   00208A  0E6E               	movlw	low STR_1
  1731   00208C  6E05               	movwf	Lcd_Write_String@a^0,c
  1732   00208E  0E7F               	movlw	high STR_1
  1733   002090  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1734   002092  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1735   002096                     
  1736                           ;mainEncoder.c: 81:                 Lcd_Set_Cursor(2,1);
  1737   002096  0E01               	movlw	1
  1738   002098  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1739   00209A  0E02               	movlw	2
  1740   00209C  ECF8  F025         	call	_Lcd_Set_Cursor
  1741                           
  1742                           ;mainEncoder.c: 82:                 Lcd_Write_String("Espere 3 segundos");
  1743   0020A0  0EA4               	movlw	low STR_2
  1744   0020A2  6E05               	movwf	Lcd_Write_String@a^0,c
  1745   0020A4  0E7F               	movlw	high STR_2
  1746   0020A6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1747   0020A8  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1748   0020AC                     
  1749                           ;mainEncoder.c: 83:                 _delay((unsigned long)((1000)*(16000000UL/4000.0)));
  1750   0020AC  0E15               	movlw	21
  1751   0020AE  0100               	movlb	0	; () banked
  1752   0020B0  6FCE               	movwf	(??_main+1)& (0+255),b
  1753   0020B2  0E4B               	movlw	75
  1754   0020B4  6FCD               	movwf	??_main& (0+255),b
  1755   0020B6  0EBE               	movlw	190
  1756   0020B8                     u5387:
  1757   0020B8  2EE8               	decfsz	wreg,f,c
  1758   0020BA  D7FE               	bra	u5387
  1759   0020BC  2FCD               	decfsz	??_main& (0+255),f,b
  1760   0020BE  D7FC               	bra	u5387
  1761   0020C0  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1762   0020C2  D7FA               	bra	u5387
  1763   0020C4  F000               	nop	
  1764   0020C6                     
  1765                           ;mainEncoder.c: 85:                 Lcd_Set_Cursor(2,1);
  1766   0020C6  0E01               	movlw	1
  1767   0020C8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1768   0020CA  0E02               	movlw	2
  1769   0020CC  ECF8  F025         	call	_Lcd_Set_Cursor
  1770   0020D0                     
  1771                           ;mainEncoder.c: 86:                 Lcd_Write_String("Espere 2 segundos");
  1772   0020D0  0E92               	movlw	low STR_3
  1773   0020D2  6E05               	movwf	Lcd_Write_String@a^0,c
  1774   0020D4  0E7F               	movlw	high STR_3
  1775   0020D6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1776   0020D8  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1777   0020DC                     
  1778                           ;mainEncoder.c: 87:                 _delay((unsigned long)((1000)*(16000000UL/4000.0)));
  1779   0020DC  0E15               	movlw	21
  1780   0020DE  0100               	movlb	0	; () banked
  1781   0020E0  6FCE               	movwf	(??_main+1)& (0+255),b
  1782   0020E2  0E4B               	movlw	75
  1783   0020E4  6FCD               	movwf	??_main& (0+255),b
  1784   0020E6  0EBE               	movlw	190
  1785   0020E8                     u5397:
  1786   0020E8  2EE8               	decfsz	wreg,f,c
  1787   0020EA  D7FE               	bra	u5397
  1788   0020EC  2FCD               	decfsz	??_main& (0+255),f,b
  1789   0020EE  D7FC               	bra	u5397
  1790   0020F0  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1791   0020F2  D7FA               	bra	u5397
  1792   0020F4  F000               	nop	
  1793                           
  1794                           ;mainEncoder.c: 89:                 Lcd_Set_Cursor(2,1);
  1795   0020F6  0E01               	movlw	1
  1796   0020F8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1797   0020FA  0E02               	movlw	2
  1798   0020FC  ECF8  F025         	call	_Lcd_Set_Cursor
  1799   002100                     
  1800                           ;mainEncoder.c: 90:                 Lcd_Write_String("Espere 1 segundo");
  1801   002100  0EB6               	movlw	low STR_4
  1802   002102  6E05               	movwf	Lcd_Write_String@a^0,c
  1803   002104  0E7F               	movlw	high STR_4
  1804   002106  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1805   002108  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1806   00210C                     
  1807                           ;mainEncoder.c: 91:                 _delay((unsigned long)((1000)*(16000000UL/4000.0)));
  1808   00210C  0E15               	movlw	21
  1809   00210E  0100               	movlb	0	; () banked
  1810   002110  6FCE               	movwf	(??_main+1)& (0+255),b
  1811   002112  0E4B               	movlw	75
  1812   002114  6FCD               	movwf	??_main& (0+255),b
  1813   002116  0EBE               	movlw	190
  1814   002118                     u5407:
  1815   002118  2EE8               	decfsz	wreg,f,c
  1816   00211A  D7FE               	bra	u5407
  1817   00211C  2FCD               	decfsz	??_main& (0+255),f,b
  1818   00211E  D7FC               	bra	u5407
  1819   002120  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1820   002122  D7FA               	bra	u5407
  1821   002124  F000               	nop	
  1822   002126                     l6152:
  1823                           
  1824                           ;mainEncoder.c: 94:                 Lcd_Clear();
  1825   002126  EC06  F031         	call	_Lcd_Clear	;wreg free
  1826   00212A                     
  1827                           ;mainEncoder.c: 97:                 APPState = 1;
  1828   00212A  0E01               	movlw	1
  1829   00212C  0100               	movlb	0	; () banked
  1830   00212E  6FF8               	movwf	_APPState& (0+255),b
  1831                           
  1832                           ;mainEncoder.c: 99:             break;
  1833   002130  EF8A  F013         	goto	l6306
  1834   002134                     l445:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;mainEncoder.c: 104:                 T0CONbits.TMR0ON = 0;
  1838   002134  9ED5               	bcf	213,7,c	;volatile
  1839   002136                     
  1840                           ; BSR set to: 0
  1841                           ;mainEncoder.c: 107:                 TMR0 = 0;
  1842   002136  0E00               	movlw	0
  1843   002138  6ED7               	movwf	215,c	;volatile
  1844   00213A  0E00               	movlw	0
  1845   00213C  6ED6               	movwf	214,c	;volatile
  1846                           
  1847                           ;mainEncoder.c: 110:                 tiempo = 0;
  1848   00213E  0E00               	movlw	0
  1849   002140  6FF0               	movwf	(_tiempo+1)& (0+255),b	;volatile
  1850   002142  0E00               	movlw	0
  1851   002144  6FEF               	movwf	_tiempo& (0+255),b	;volatile
  1852                           
  1853                           ;mainEncoder.c: 113:                 APPState = 2;
  1854   002146  0E02               	movlw	2
  1855   002148  6FF8               	movwf	_APPState& (0+255),b
  1856                           
  1857                           ;mainEncoder.c: 115:             break;
  1858   00214A  EF8A  F013         	goto	l6306
  1859   00214E                     l6158:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;mainEncoder.c: 120:                 Lcd_Set_Cursor(1,1);
  1863   00214E  0E01               	movlw	1
  1864   002150  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1865   002152  0E01               	movlw	1
  1866   002154  ECF8  F025         	call	_Lcd_Set_Cursor
  1867   002158                     
  1868                           ;mainEncoder.c: 121:                 Lcd_Write_String("Elegir referencia");
  1869   002158  0E5C               	movlw	low STR_5
  1870   00215A  6E05               	movwf	Lcd_Write_String@a^0,c
  1871   00215C  0E7F               	movlw	high STR_5
  1872   00215E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1873   002160  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1874   002164                     
  1875                           ;mainEncoder.c: 123:                 Lcd_Set_Cursor(2,1);
  1876   002164  0E01               	movlw	1
  1877   002166  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1878   002168  0E02               	movlw	2
  1879   00216A  ECF8  F025         	call	_Lcd_Set_Cursor
  1880                           
  1881                           ;mainEncoder.c: 124:                 Lcd_Write_String("Rango [0-500]");
  1882   00216E  0E01               	movlw	low (STR_10+6)
  1883   002170  6E05               	movwf	Lcd_Write_String@a^0,c
  1884   002172  0E7F               	movlw	high (STR_10+6)
  1885   002174  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1886   002176  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1887   00217A                     
  1888                           ;mainEncoder.c: 126:                 Lcd_Set_Cursor(3,1);
  1889   00217A  0E01               	movlw	1
  1890   00217C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1891   00217E  0E03               	movlw	3
  1892   002180  ECF8  F025         	call	_Lcd_Set_Cursor
  1893   002184                     
  1894                           ;mainEncoder.c: 127:                 Lcd_Write_String("SetPoint: ");
  1895   002184  0ED6               	movlw	low STR_7
  1896   002186  6E05               	movwf	Lcd_Write_String@a^0,c
  1897   002188  0E7F               	movlw	high STR_7
  1898   00218A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1899   00218C  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1900                           
  1901                           ;mainEncoder.c: 129:                 Lcd_Set_Cursor(4,1);
  1902   002190  0E01               	movlw	1
  1903   002192  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1904   002194  0E04               	movlw	4
  1905   002196  ECF8  F025         	call	_Lcd_Set_Cursor
  1906   00219A                     
  1907                           ;mainEncoder.c: 130:                 Lcd_Write_String("Iniciar control (*)");
  1908   00219A  0EE7               	movlw	low STR_8
  1909   00219C  6E05               	movwf	Lcd_Write_String@a^0,c
  1910   00219E  0E7E               	movlw	high STR_8
  1911   0021A0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1912   0021A2  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  1913   0021A6                     
  1914                           ;mainEncoder.c: 132:                 tecla = Key_Read();
  1915   0021A6  ECC7  F01F         	call	_Key_Read	;wreg free
  1916   0021AA  0100               	movlb	0	; () banked
  1917   0021AC  6FF5               	movwf	_tecla& (0+255),b
  1918   0021AE                     
  1919                           ; BSR set to: 0
  1920                           ;mainEncoder.c: 134:                 if(tecla != '\0')
  1921   0021AE  51F5               	movf	_tecla& (0+255),w,b
  1922   0021B0  B4D8               	btfsc	status,2,c
  1923   0021B2  EFDD  F010         	goto	u5211
  1924   0021B6  EFDF  F010         	goto	u5210
  1925   0021BA                     u5211:
  1926   0021BA  EF8A  F013         	goto	l6306
  1927   0021BE                     u5210:
  1928   0021BE                     
  1929                           ; BSR set to: 0
  1930                           ;mainEncoder.c: 135:                 {;mainEncoder.c: 136:                     if (tecla
      +                           != '*')
  1931   0021BE  0E2A               	movlw	42
  1932   0021C0  19F5               	xorwf	_tecla& (0+255),w,b
  1933   0021C2  B4D8               	btfsc	status,2,c
  1934   0021C4  EFE6  F010         	goto	u5221
  1935   0021C8  EFE8  F010         	goto	u5220
  1936   0021CC                     u5221:
  1937   0021CC  EF12  F011         	goto	l6192
  1938   0021D0                     u5220:
  1939   0021D0                     
  1940                           ; BSR set to: 0
  1941                           ;mainEncoder.c: 137:                     {;mainEncoder.c: 139:                         L
      +                          cd_Set_Cursor(3,columna);
  1942   0021D0  C0FD  F004         	movff	_columna,Lcd_Set_Cursor@b
  1943   0021D4  0E03               	movlw	3
  1944   0021D6  ECF8  F025         	call	_Lcd_Set_Cursor
  1945                           
  1946                           ;mainEncoder.c: 140:                         Lcd_Write_Char(tecla);
  1947   0021DA  0100               	movlb	0	; () banked
  1948   0021DC  51F5               	movf	_tecla& (0+255),w,b
  1949   0021DE  ECF5  F02F         	call	_Lcd_Write_Char
  1950   0021E2                     
  1951                           ;mainEncoder.c: 141:                         SP[indice] = tecla;
  1952   0021E2  0ED0               	movlw	low _SP
  1953   0021E4  0100               	movlb	0	; () banked
  1954   0021E6  25F4               	addwf	_indice& (0+255),w,b
  1955   0021E8  6ED9               	movwf	fsr2l,c
  1956   0021EA  6ADA               	clrf	fsr2h,c
  1957   0021EC  0E01               	movlw	high _SP
  1958   0021EE  22DA               	addwfc	fsr2h,f,c
  1959   0021F0  C0F5  FFDF         	movff	_tecla,indf2
  1960   0021F4                     
  1961                           ; BSR set to: 0
  1962                           ;mainEncoder.c: 142:                         indice++;
  1963   0021F4  2BF4               	incf	_indice& (0+255),f,b
  1964   0021F6                     
  1965                           ; BSR set to: 0
  1966                           ;mainEncoder.c: 143:                         columna ++;
  1967   0021F6  2BFD               	incf	_columna& (0+255),f,b
  1968   0021F8                     
  1969                           ; BSR set to: 0
  1970                           ;mainEncoder.c: 148:                         if (columna>13)
  1971   0021F8  0E0D               	movlw	13
  1972   0021FA  65FD               	cpfsgt	_columna& (0+255),b
  1973   0021FC  EF02  F011         	goto	u5231
  1974   002200  EF04  F011         	goto	u5230
  1975   002204                     u5231:
  1976   002204  EF8A  F013         	goto	l6306
  1977   002208                     u5230:
  1978   002208                     
  1979                           ; BSR set to: 0
  1980                           ;mainEncoder.c: 149:                         {;mainEncoder.c: 150:                      
      +                                 SP[indice] = '\0';
  1981   002208  0ED0               	movlw	low _SP
  1982   00220A  25F4               	addwf	_indice& (0+255),w,b
  1983   00220C  6ED9               	movwf	fsr2l,c
  1984   00220E  6ADA               	clrf	fsr2h,c
  1985   002210  0E01               	movlw	high _SP
  1986   002212  22DA               	addwfc	fsr2h,f,c
  1987   002214  0E00               	movlw	0
  1988   002216  6EDF               	movwf	indf2,c
  1989   002218                     
  1990                           ; BSR set to: 0
  1991                           ;mainEncoder.c: 153:                             indice = 0;
  1992   002218  0E00               	movlw	0
  1993   00221A  6FF4               	movwf	_indice& (0+255),b
  1994   00221C                     
  1995                           ; BSR set to: 0
  1996                           ;mainEncoder.c: 154:                             columna = 11;
  1997   00221C  0E0B               	movlw	11
  1998   00221E  6FFD               	movwf	_columna& (0+255),b
  1999   002220  EF8A  F013         	goto	l6306
  2000   002224                     l6192:
  2001                           
  2002                           ; BSR set to: 0
  2003   002224  0E2A               	movlw	42
  2004   002226  19F5               	xorwf	_tecla& (0+255),w,b
  2005   002228  A4D8               	btfss	status,2,c
  2006   00222A  EF19  F011         	goto	u5241
  2007   00222E  EF1B  F011         	goto	u5240
  2008   002232                     u5241:
  2009   002232  EF8A  F013         	goto	l442
  2010   002236                     u5240:
  2011   002236                     
  2012                           ; BSR set to: 0
  2013                           ;mainEncoder.c: 158:                     {;mainEncoder.c: 162:                         i
      +                          ndice = 0;
  2014   002236  0E00               	movlw	0
  2015   002238  6FF4               	movwf	_indice& (0+255),b
  2016                           
  2017                           ;mainEncoder.c: 163:                         columna = 11;
  2018   00223A  0E0B               	movlw	11
  2019   00223C  6FFD               	movwf	_columna& (0+255),b
  2020   00223E                     
  2021                           ; BSR set to: 0
  2022                           ;mainEncoder.c: 166:                         Lcd_Clear();
  2023   00223E  EC06  F031         	call	_Lcd_Clear	;wreg free
  2024   002242                     
  2025                           ;mainEncoder.c: 170:                         setpoint = (atol(SP));
  2026   002242  0ED0               	movlw	low _SP
  2027   002244  6E0D               	movwf	atol@s^0,c
  2028   002246  0E01               	movlw	high _SP
  2029   002248  6E0E               	movwf	(atol@s+1)^0,c
  2030   00224A  EC8E  F022         	call	_atol	;wreg free
  2031   00224E  C00D  F01C         	movff	?_atol,___xxtofl@val
  2032   002252  C00E  F01D         	movff	?_atol+1,___xxtofl@val+1
  2033   002256  C00F  F01E         	movff	?_atol+2,___xxtofl@val+2
  2034   00225A  C010  F01F         	movff	?_atol+3,___xxtofl@val+3
  2035   00225E  0E01               	movlw	1
  2036   002260  ECB4  F021         	call	___xxtofl
  2037   002264  C01C  F0E7         	movff	?___xxtofl,_setpoint
  2038   002268  C01D  F0E8         	movff	?___xxtofl+1,_setpoint+1
  2039   00226C  C01E  F0E9         	movff	?___xxtofl+2,_setpoint+2
  2040   002270  C01F  F0EA         	movff	?___xxtofl+3,_setpoint+3
  2041   002274                     
  2042                           ;mainEncoder.c: 173:                             SP[0] = '\0';
  2043   002274  0E00               	movlw	0
  2044   002276  0101               	movlb	1	; () banked
  2045   002278  6FD0               	movwf	_SP& (0+255),b
  2046   00227A                     
  2047                           ; BSR set to: 1
  2048                           ;mainEncoder.c: 174:                             SP[1] = '\0';
  2049   00227A  0E00               	movlw	0
  2050   00227C  6FD1               	movwf	(_SP+1)& (0+255),b
  2051   00227E                     
  2052                           ; BSR set to: 1
  2053                           ;mainEncoder.c: 175:                             SP[2] = '\0';
  2054   00227E  0E00               	movlw	0
  2055   002280  6FD2               	movwf	(_SP+2)& (0+255),b
  2056   002282                     
  2057                           ; BSR set to: 1
  2058                           ;mainEncoder.c: 177:                         if(setpoint > 500)
  2059   002282  0E00               	movlw	0
  2060   002284  6E1E               	movwf	___flge@ff1^0,c
  2061   002286  0E00               	movlw	0
  2062   002288  6E1F               	movwf	(___flge@ff1+1)^0,c
  2063   00228A  0EFA               	movlw	250
  2064   00228C  6E20               	movwf	(___flge@ff1+2)^0,c
  2065   00228E  0E43               	movlw	67
  2066   002290  6E21               	movwf	(___flge@ff1+3)^0,c
  2067   002292  C0E7  F022         	movff	_setpoint,___flge@ff2
  2068   002296  C0E8  F023         	movff	_setpoint+1,___flge@ff2+1
  2069   00229A  C0E9  F024         	movff	_setpoint+2,___flge@ff2+2
  2070   00229E  C0EA  F025         	movff	_setpoint+3,___flge@ff2+3
  2071   0022A2  EC7F  F024         	call	___flge	;wreg free
  2072   0022A6  B0D8               	btfsc	status,0,c
  2073   0022A8  EF58  F011         	goto	u5251
  2074   0022AC  EF5A  F011         	goto	u5250
  2075   0022B0                     u5251:
  2076   0022B0  EF9C  F011         	goto	l6226
  2077   0022B4                     u5250:
  2078   0022B4                     
  2079                           ;mainEncoder.c: 178:                         {;mainEncoder.c: 180:                      
      +                                 Lcd_Clear();
  2080   0022B4  EC06  F031         	call	_Lcd_Clear	;wreg free
  2081                           
  2082                           ;mainEncoder.c: 183:                             Lcd_Set_Cursor(1,1);
  2083   0022B8  0E01               	movlw	1
  2084   0022BA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2085   0022BC  0E01               	movlw	1
  2086   0022BE  ECF8  F025         	call	_Lcd_Set_Cursor
  2087   0022C2                     
  2088                           ;mainEncoder.c: 184:                             Lcd_Write_String("  Referencia fuera");
  2089   0022C2  0E37               	movlw	low STR_9
  2090   0022C4  6E05               	movwf	Lcd_Write_String@a^0,c
  2091   0022C6  0E7F               	movlw	high STR_9
  2092   0022C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2093   0022CA  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  2094   0022CE                     
  2095                           ;mainEncoder.c: 186:                             Lcd_Set_Cursor(2,1);
  2096   0022CE  0E01               	movlw	1
  2097   0022D0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2098   0022D2  0E02               	movlw	2
  2099   0022D4  ECF8  F025         	call	_Lcd_Set_Cursor
  2100                           
  2101                           ;mainEncoder.c: 187:                             Lcd_Write_String("  del Rango [0-500]")
      +                          ;
  2102   0022D8  0EFB               	movlw	low STR_10
  2103   0022DA  6E05               	movwf	Lcd_Write_String@a^0,c
  2104   0022DC  0E7E               	movlw	high STR_10
  2105   0022DE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2106   0022E0  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  2107   0022E4                     
  2108                           ;mainEncoder.c: 189:                             Lcd_Set_Cursor(3,1);
  2109   0022E4  0E01               	movlw	1
  2110   0022E6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2111   0022E8  0E03               	movlw	3
  2112   0022EA  ECF8  F025         	call	_Lcd_Set_Cursor
  2113   0022EE                     
  2114                           ;mainEncoder.c: 190:                             Lcd_Write_String("      Volver a");
  2115   0022EE  0EC7               	movlw	low STR_11
  2116   0022F0  6E05               	movwf	Lcd_Write_String@a^0,c
  2117   0022F2  0E7F               	movlw	high STR_11
  2118   0022F4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2119   0022F6  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  2120                           
  2121                           ;mainEncoder.c: 192:                             Lcd_Set_Cursor(4,1);
  2122   0022FA  0E01               	movlw	1
  2123   0022FC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2124   0022FE  0E04               	movlw	4
  2125   002300  ECF8  F025         	call	_Lcd_Set_Cursor
  2126   002304                     
  2127                           ;mainEncoder.c: 193:                             Lcd_Write_String("  Elegir Referencia")
      +                          ;
  2128   002304  0E0F               	movlw	low STR_12
  2129   002306  6E05               	movwf	Lcd_Write_String@a^0,c
  2130   002308  0E7F               	movlw	high STR_12
  2131   00230A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2132   00230C  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  2133   002310                     
  2134                           ;mainEncoder.c: 196:                             _delay((unsigned long)((3000)*(16000000
      +                          UL/4000.0)));
  2135   002310  0E3D               	movlw	61
  2136   002312  0100               	movlb	0	; () banked
  2137   002314  6FCE               	movwf	(??_main+1)& (0+255),b
  2138   002316  0EE1               	movlw	225
  2139   002318  6FCD               	movwf	??_main& (0+255),b
  2140   00231A  0E3F               	movlw	63
  2141   00231C                     u5417:
  2142   00231C  2EE8               	decfsz	wreg,f,c
  2143   00231E  D7FE               	bra	u5417
  2144   002320  2FCD               	decfsz	??_main& (0+255),f,b
  2145   002322  D7FC               	bra	u5417
  2146   002324  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  2147   002326  D7FA               	bra	u5417
  2148   002328  D000               	nop2	
  2149   00232A                     
  2150                           ;mainEncoder.c: 199:                             Lcd_Clear();
  2151   00232A  EC06  F031         	call	_Lcd_Clear	;wreg free
  2152   00232E                     
  2153                           ;mainEncoder.c: 202:                             APPState = 2;
  2154   00232E  0E02               	movlw	2
  2155   002330  0100               	movlb	0	; () banked
  2156   002332  6FF8               	movwf	_APPState& (0+255),b
  2157                           
  2158                           ;mainEncoder.c: 203:                         }
  2159   002334  EF8A  F013         	goto	l6306
  2160   002338                     l6226:
  2161                           
  2162                           ;mainEncoder.c: 205:                         {;mainEncoder.c: 207:                      
      +                                 Lcd_Clear();
  2163   002338  EC06  F031         	call	_Lcd_Clear	;wreg free
  2164   00233C                     
  2165                           ;mainEncoder.c: 209:                             T0CONbits.TMR0ON = 1;
  2166   00233C  8ED5               	bsf	213,7,c	;volatile
  2167   00233E                     l6230:
  2168                           
  2169                           ;mainEncoder.c: 212:                             APPState = 3;
  2170   00233E  0E03               	movlw	3
  2171   002340  0100               	movlb	0	; () banked
  2172   002342  6FF8               	movwf	_APPState& (0+255),b
  2173   002344  EF8A  F013         	goto	l6306
  2174   002348                     l6232:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;mainEncoder.c: 223:                 if(flagTimer0 == 1)
  2178   002348  05F7               	decf	_flagTimer0& (0+255),w,b	;volatile
  2179   00234A  A4D8               	btfss	status,2,c
  2180   00234C  EFAA  F011         	goto	u5261
  2181   002350  EFAC  F011         	goto	u5260
  2182   002354                     u5261:
  2183   002354  EFB2  F011         	goto	l6236
  2184   002358                     u5260:
  2185   002358                     
  2186                           ; BSR set to: 0
  2187                           ;mainEncoder.c: 224:                 {;mainEncoder.c: 225:                     flagTimer
      +                          0 = 0;
  2188   002358  0E00               	movlw	0
  2189   00235A  6FF7               	movwf	_flagTimer0& (0+255),b	;volatile
  2190                           
  2191                           ;mainEncoder.c: 228:                     APPState = 4;
  2192   00235C  0E04               	movlw	4
  2193   00235E  6FF8               	movwf	_APPState& (0+255),b
  2194                           
  2195                           ;mainEncoder.c: 229:                 }
  2196   002360  EF8A  F013         	goto	l6306
  2197   002364                     l6236:
  2198                           
  2199                           ; BSR set to: 0
  2200   002364  51F7               	movf	_flagTimer0& (0+255),w,b	;volatile
  2201   002366  A4D8               	btfss	status,2,c
  2202   002368  EFB8  F011         	goto	u5271
  2203   00236C  EFBA  F011         	goto	u5270
  2204   002370                     u5271:
  2205   002370  EF8A  F013         	goto	l442
  2206   002374                     u5270:
  2207   002374                     
  2208                           ; BSR set to: 0
  2209                           ;mainEncoder.c: 231:                 {;mainEncoder.c: 233:                     APPState 
      +                          = 5;
  2210   002374  0E05               	movlw	5
  2211   002376  6FF8               	movwf	_APPState& (0+255),b
  2212   002378  EF8A  F013         	goto	l6306
  2213   00237C                     l6240:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;mainEncoder.c: 247:                 error = setpoint - RPM;
  2217   00237C  C0E7  F02E         	movff	_setpoint,___flsub@b
  2218   002380  C0E8  F02F         	movff	_setpoint+1,___flsub@b+1
  2219   002384  C0E9  F030         	movff	_setpoint+2,___flsub@b+2
  2220   002388  C0EA  F031         	movff	_setpoint+3,___flsub@b+3
  2221   00238C  C0F1  F01C         	movff	_RPM,___xxtofl@val	;volatile
  2222   002390  C0F2  F01D         	movff	_RPM+1,___xxtofl@val+1	;volatile
  2223   002394  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2224   002396  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2225   002398  0E00               	movlw	0
  2226   00239A  ECB4  F021         	call	___xxtofl
  2227   00239E  C01C  F032         	movff	?___xxtofl,___flsub@a
  2228   0023A2  C01D  F033         	movff	?___xxtofl+1,___flsub@a+1
  2229   0023A6  C01E  F034         	movff	?___xxtofl+2,___flsub@a+2
  2230   0023AA  C01F  F035         	movff	?___xxtofl+3,___flsub@a+3
  2231   0023AE  EC55  F02F         	call	___flsub	;wreg free
  2232   0023B2  C02E  F0E3         	movff	?___flsub,_error
  2233   0023B6  C02F  F0E4         	movff	?___flsub+1,_error+1
  2234   0023BA  C030  F0E5         	movff	?___flsub+2,_error+2
  2235   0023BE  C031  F0E6         	movff	?___flsub+3,_error+3
  2236                           
  2237                           ;mainEncoder.c: 250:                 if(error > 119.9)
  2238   0023C2  0ECD               	movlw	205
  2239   0023C4  6E1E               	movwf	___flge@ff1^0,c
  2240   0023C6  0ECC               	movlw	204
  2241   0023C8  6E1F               	movwf	(___flge@ff1+1)^0,c
  2242   0023CA  0EEF               	movlw	239
  2243   0023CC  6E20               	movwf	(___flge@ff1+2)^0,c
  2244   0023CE  0E42               	movlw	66
  2245   0023D0  6E21               	movwf	(___flge@ff1+3)^0,c
  2246   0023D2  C0E3  F022         	movff	_error,___flge@ff2
  2247   0023D6  C0E4  F023         	movff	_error+1,___flge@ff2+1
  2248   0023DA  C0E5  F024         	movff	_error+2,___flge@ff2+2
  2249   0023DE  C0E6  F025         	movff	_error+3,___flge@ff2+3
  2250   0023E2  EC7F  F024         	call	___flge	;wreg free
  2251   0023E6  B0D8               	btfsc	status,0,c
  2252   0023E8  EFF8  F011         	goto	u5281
  2253   0023EC  EFFA  F011         	goto	u5280
  2254   0023F0                     u5281:
  2255   0023F0  EF05  F012         	goto	l6244
  2256   0023F4                     u5280:
  2257   0023F4                     
  2258                           ;mainEncoder.c: 251:                 {;mainEncoder.c: 252:                     error = 1
      +                          19.9;
  2259   0023F4  0ECD               	movlw	205
  2260   0023F6  0100               	movlb	0	; () banked
  2261   0023F8  6FE3               	movwf	_error& (0+255),b
  2262   0023FA  0ECC               	movlw	204
  2263   0023FC  6FE4               	movwf	(_error+1)& (0+255),b
  2264   0023FE  0EEF               	movlw	239
  2265   002400  6FE5               	movwf	(_error+2)& (0+255),b
  2266   002402  0E42               	movlw	66
  2267   002404  6FE6               	movwf	(_error+3)& (0+255),b
  2268                           
  2269                           ;mainEncoder.c: 253:                 }
  2270   002406  EF27  F012         	goto	l6248
  2271   00240A                     l6244:
  2272   00240A  C0E3  F01E         	movff	_error,___flge@ff1
  2273   00240E  C0E4  F01F         	movff	_error+1,___flge@ff1+1
  2274   002412  C0E5  F020         	movff	_error+2,___flge@ff1+2
  2275   002416  C0E6  F021         	movff	_error+3,___flge@ff1+3
  2276   00241A  0ECD               	movlw	205
  2277   00241C  6E22               	movwf	___flge@ff2^0,c
  2278   00241E  0ECC               	movlw	204
  2279   002420  6E23               	movwf	(___flge@ff2+1)^0,c
  2280   002422  0EEF               	movlw	239
  2281   002424  6E24               	movwf	(___flge@ff2+2)^0,c
  2282   002426  0EC2               	movlw	194
  2283   002428  6E25               	movwf	(___flge@ff2+3)^0,c
  2284   00242A  EC7F  F024         	call	___flge	;wreg free
  2285   00242E  B0D8               	btfsc	status,0,c
  2286   002430  EF1C  F012         	goto	u5291
  2287   002434  EF1E  F012         	goto	u5290
  2288   002438                     u5291:
  2289   002438  EF27  F012         	goto	l6248
  2290   00243C                     u5290:
  2291   00243C                     
  2292                           ;mainEncoder.c: 255:                 {;mainEncoder.c: 256:                     error = -
      +                          119.9;
  2293   00243C  0ECD               	movlw	205
  2294   00243E  0100               	movlb	0	; () banked
  2295   002440  6FE3               	movwf	_error& (0+255),b
  2296   002442  0ECC               	movlw	204
  2297   002444  6FE4               	movwf	(_error+1)& (0+255),b
  2298   002446  0EEF               	movlw	239
  2299   002448  6FE5               	movwf	(_error+2)& (0+255),b
  2300   00244A  0EC2               	movlw	194
  2301   00244C  6FE6               	movwf	(_error+3)& (0+255),b
  2302   00244E                     l6248:
  2303                           
  2304                           ;mainEncoder.c: 261:                 Cambio_error = (error - error_);
  2305   00244E  C0E3  F02E         	movff	_error,___flsub@b
  2306   002452  C0E4  F02F         	movff	_error+1,___flsub@b+1
  2307   002456  C0E5  F030         	movff	_error+2,___flsub@b+2
  2308   00245A  C0E6  F031         	movff	_error+3,___flsub@b+3
  2309   00245E  C0DF  F032         	movff	_error_,___flsub@a
  2310   002462  C0E0  F033         	movff	_error_+1,___flsub@a+1
  2311   002466  C0E1  F034         	movff	_error_+2,___flsub@a+2
  2312   00246A  C0E2  F035         	movff	_error_+3,___flsub@a+3
  2313   00246E  EC55  F02F         	call	___flsub	;wreg free
  2314   002472  C02E  F0D7         	movff	?___flsub,_Cambio_error
  2315   002476  C02F  F0D8         	movff	?___flsub+1,_Cambio_error+1
  2316   00247A  C030  F0D9         	movff	?___flsub+2,_Cambio_error+2
  2317   00247E  C031  F0DA         	movff	?___flsub+3,_Cambio_error+3
  2318   002482                     
  2319                           ;mainEncoder.c: 264:                 if(Cambio_error > 7.999999)
  2320   002482  0EFE               	movlw	254
  2321   002484  6E1E               	movwf	___flge@ff1^0,c
  2322   002486  0EFF               	movlw	255
  2323   002488  6E1F               	movwf	(___flge@ff1+1)^0,c
  2324   00248A  0EFF               	movlw	255
  2325   00248C  6E20               	movwf	(___flge@ff1+2)^0,c
  2326   00248E  0E40               	movlw	64
  2327   002490  6E21               	movwf	(___flge@ff1+3)^0,c
  2328   002492  C0D7  F022         	movff	_Cambio_error,___flge@ff2
  2329   002496  C0D8  F023         	movff	_Cambio_error+1,___flge@ff2+1
  2330   00249A  C0D9  F024         	movff	_Cambio_error+2,___flge@ff2+2
  2331   00249E  C0DA  F025         	movff	_Cambio_error+3,___flge@ff2+3
  2332   0024A2  EC7F  F024         	call	___flge	;wreg free
  2333   0024A6  B0D8               	btfsc	status,0,c
  2334   0024A8  EF58  F012         	goto	u5301
  2335   0024AC  EF5A  F012         	goto	u5300
  2336   0024B0                     u5301:
  2337   0024B0  EF65  F012         	goto	l6254
  2338   0024B4                     u5300:
  2339   0024B4                     
  2340                           ;mainEncoder.c: 265:                 {;mainEncoder.c: 266:                     Cambio_er
      +                          ror = 7.999999;
  2341   0024B4  0EFE               	movlw	254
  2342   0024B6  0100               	movlb	0	; () banked
  2343   0024B8  6FD7               	movwf	_Cambio_error& (0+255),b
  2344   0024BA  0EFF               	movlw	255
  2345   0024BC  6FD8               	movwf	(_Cambio_error+1)& (0+255),b
  2346   0024BE  0EFF               	movlw	255
  2347   0024C0  6FD9               	movwf	(_Cambio_error+2)& (0+255),b
  2348   0024C2  0E40               	movlw	64
  2349   0024C4  6FDA               	movwf	(_Cambio_error+3)& (0+255),b
  2350                           
  2351                           ;mainEncoder.c: 267:                 }
  2352   0024C6  EF87  F012         	goto	l6258
  2353   0024CA                     l6254:
  2354   0024CA  C0D7  F01E         	movff	_Cambio_error,___flge@ff1
  2355   0024CE  C0D8  F01F         	movff	_Cambio_error+1,___flge@ff1+1
  2356   0024D2  C0D9  F020         	movff	_Cambio_error+2,___flge@ff1+2
  2357   0024D6  C0DA  F021         	movff	_Cambio_error+3,___flge@ff1+3
  2358   0024DA  0EFE               	movlw	254
  2359   0024DC  6E22               	movwf	___flge@ff2^0,c
  2360   0024DE  0EFF               	movlw	255
  2361   0024E0  6E23               	movwf	(___flge@ff2+1)^0,c
  2362   0024E2  0EFF               	movlw	255
  2363   0024E4  6E24               	movwf	(___flge@ff2+2)^0,c
  2364   0024E6  0EC0               	movlw	192
  2365   0024E8  6E25               	movwf	(___flge@ff2+3)^0,c
  2366   0024EA  EC7F  F024         	call	___flge	;wreg free
  2367   0024EE  B0D8               	btfsc	status,0,c
  2368   0024F0  EF7C  F012         	goto	u5311
  2369   0024F4  EF7E  F012         	goto	u5310
  2370   0024F8                     u5311:
  2371   0024F8  EF87  F012         	goto	l6258
  2372   0024FC                     u5310:
  2373   0024FC                     
  2374                           ;mainEncoder.c: 269:                 {;mainEncoder.c: 270:                     Cambio_er
      +                          ror = -7.999999;
  2375   0024FC  0EFE               	movlw	254
  2376   0024FE  0100               	movlb	0	; () banked
  2377   002500  6FD7               	movwf	_Cambio_error& (0+255),b
  2378   002502  0EFF               	movlw	255
  2379   002504  6FD8               	movwf	(_Cambio_error+1)& (0+255),b
  2380   002506  0EFF               	movlw	255
  2381   002508  6FD9               	movwf	(_Cambio_error+2)& (0+255),b
  2382   00250A  0EC0               	movlw	192
  2383   00250C  6FDA               	movwf	(_Cambio_error+3)& (0+255),b
  2384   00250E                     l6258:
  2385                           
  2386                           ;mainEncoder.c: 274:                 Control_velocidad_difusoInferenceEngine(error,Cambi
      +                          o_error,&salida);
  2387   00250E  C0E3  F096         	movff	_error,Control_velocidad_difusoInferenceEngine@error
  2388   002512  C0E4  F097         	movff	_error+1,Control_velocidad_difusoInferenceEngine@error+1
  2389   002516  C0E5  F098         	movff	_error+2,Control_velocidad_difusoInferenceEngine@error+2
  2390   00251A  C0E6  F099         	movff	_error+3,Control_velocidad_difusoInferenceEngine@error+3
  2391   00251E  C0D7  F09A         	movff	_Cambio_error,Control_velocidad_difusoInferenceEngine@CambioError
  2392   002522  C0D8  F09B         	movff	_Cambio_error+1,Control_velocidad_difusoInferenceEngine@CambioError+1
  2393   002526  C0D9  F09C         	movff	_Cambio_error+2,Control_velocidad_difusoInferenceEngine@CambioError+2
  2394   00252A  C0DA  F09D         	movff	_Cambio_error+3,Control_velocidad_difusoInferenceEngine@CambioError+3
  2395   00252E  0EF9               	movlw	low _salida
  2396   002530  0100               	movlb	0	; () banked
  2397   002532  6F9E               	movwf	Control_velocidad_difusoInferenceEngine@_d_Salida& (0+255),b
  2398   002534  0E00               	movlw	high _salida
  2399   002536  6F9F               	movwf	(Control_velocidad_difusoInferenceEngine@_d_Salida+1)& (0+255),b
  2400   002538  EC0E  F02F         	call	_Control_velocidad_difusoInferenceEngine	;wreg free
  2401   00253C                     
  2402                           ;mainEncoder.c: 277:                 salida_sistema = salida*constante + salida_;
  2403   00253C  0E00               	movlw	0
  2404   00253E  6E09               	movwf	___flmul@a^0,c
  2405   002540  0E00               	movlw	0
  2406   002542  6E0A               	movwf	(___flmul@a+1)^0,c
  2407   002544  0EBC               	movlw	188
  2408   002546  6E0B               	movwf	(___flmul@a+2)^0,c
  2409   002548  0E41               	movlw	65
  2410   00254A  6E0C               	movwf	(___flmul@a+3)^0,c
  2411   00254C  C0F9  F005         	movff	_salida,___flmul@b
  2412   002550  C0FA  F006         	movff	_salida+1,___flmul@b+1
  2413   002554  C0FB  F007         	movff	_salida+2,___flmul@b+2
  2414   002558  C0FC  F008         	movff	_salida+3,___flmul@b+3
  2415   00255C  ECBC  F018         	call	___flmul	;wreg free
  2416   002560  C005  F01E         	movff	?___flmul,___fladd@b
  2417   002564  C006  F01F         	movff	?___flmul+1,___fladd@b+1
  2418   002568  C007  F020         	movff	?___flmul+2,___fladd@b+2
  2419   00256C  C008  F021         	movff	?___flmul+3,___fladd@b+3
  2420   002570  C0DB  F022         	movff	_salida_,___fladd@a
  2421   002574  C0DC  F023         	movff	_salida_+1,___fladd@a+1
  2422   002578  C0DD  F024         	movff	_salida_+2,___fladd@a+2
  2423   00257C  C0DE  F025         	movff	_salida_+3,___fladd@a+3
  2424   002580  EC5C  F016         	call	___fladd	;wreg free
  2425   002584  C01E  F0D3         	movff	?___fladd,_salida_sistema
  2426   002588  C01F  F0D4         	movff	?___fladd+1,_salida_sistema+1
  2427   00258C  C020  F0D5         	movff	?___fladd+2,_salida_sistema+2
  2428   002590  C021  F0D6         	movff	?___fladd+3,_salida_sistema+3
  2429   002594                     
  2430                           ;mainEncoder.c: 280:                 if(salida_sistema > 249.0)
  2431   002594  0E00               	movlw	0
  2432   002596  6E1E               	movwf	___flge@ff1^0,c
  2433   002598  0E00               	movlw	0
  2434   00259A  6E1F               	movwf	(___flge@ff1+1)^0,c
  2435   00259C  0E79               	movlw	121
  2436   00259E  6E20               	movwf	(___flge@ff1+2)^0,c
  2437   0025A0  0E43               	movlw	67
  2438   0025A2  6E21               	movwf	(___flge@ff1+3)^0,c
  2439   0025A4  C0D3  F022         	movff	_salida_sistema,___flge@ff2
  2440   0025A8  C0D4  F023         	movff	_salida_sistema+1,___flge@ff2+1
  2441   0025AC  C0D5  F024         	movff	_salida_sistema+2,___flge@ff2+2
  2442   0025B0  C0D6  F025         	movff	_salida_sistema+3,___flge@ff2+3
  2443   0025B4  EC7F  F024         	call	___flge	;wreg free
  2444   0025B8  B0D8               	btfsc	status,0,c
  2445   0025BA  EFE1  F012         	goto	u5321
  2446   0025BE  EFE3  F012         	goto	u5320
  2447   0025C2                     u5321:
  2448   0025C2  EFEE  F012         	goto	l6266
  2449   0025C6                     u5320:
  2450   0025C6                     
  2451                           ;mainEncoder.c: 281:                 {;mainEncoder.c: 282:                     salida_si
      +                          stema = 249.0;
  2452   0025C6  0E00               	movlw	0
  2453   0025C8  0100               	movlb	0	; () banked
  2454   0025CA  6FD3               	movwf	_salida_sistema& (0+255),b
  2455   0025CC  0E00               	movlw	0
  2456   0025CE  6FD4               	movwf	(_salida_sistema+1)& (0+255),b
  2457   0025D0  0E79               	movlw	121
  2458   0025D2  6FD5               	movwf	(_salida_sistema+2)& (0+255),b
  2459   0025D4  0E43               	movlw	67
  2460   0025D6  6FD6               	movwf	(_salida_sistema+3)& (0+255),b
  2461                           
  2462                           ;mainEncoder.c: 283:                 }
  2463   0025D8  EFFE  F012         	goto	l6270
  2464   0025DC                     l6266:
  2465   0025DC  0100               	movlb	0	; () banked
  2466   0025DE  BFD6               	btfsc	(_salida_sistema+3)& (0+255),7,b
  2467   0025E0  EFF6  F012         	goto	u5330
  2468   0025E4  EFF4  F012         	goto	u5331
  2469   0025E8                     u5331:
  2470   0025E8  EFFE  F012         	goto	l6270
  2471   0025EC                     u5330:
  2472   0025EC                     
  2473                           ; BSR set to: 0
  2474                           ;mainEncoder.c: 285:                 {;mainEncoder.c: 286:                     salida_si
      +                          stema = 0.0;
  2475   0025EC  0E00               	movlw	0
  2476   0025EE  6FD3               	movwf	_salida_sistema& (0+255),b
  2477   0025F0  0E00               	movlw	0
  2478   0025F2  6FD4               	movwf	(_salida_sistema+1)& (0+255),b
  2479   0025F4  0E00               	movlw	0
  2480   0025F6  6FD5               	movwf	(_salida_sistema+2)& (0+255),b
  2481   0025F8  0E00               	movlw	0
  2482   0025FA  6FD6               	movwf	(_salida_sistema+3)& (0+255),b
  2483   0025FC                     l6270:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;mainEncoder.c: 290:                 CCPR2 = salida_sistema;
  2487   0025FC  C0D3  F001         	movff	_salida_sistema,___fltol@f1
  2488   002600  C0D4  F002         	movff	_salida_sistema+1,___fltol@f1+1
  2489   002604  C0D5  F003         	movff	_salida_sistema+2,___fltol@f1+2
  2490   002608  C0D6  F004         	movff	_salida_sistema+3,___fltol@f1+3
  2491   00260C  ECFC  F023         	call	___fltol	;wreg free
  2492   002610  C001  FF90         	movff	?___fltol,3984	;volatile
  2493   002614  C002  FF91         	movff	?___fltol+1,3985	;volatile
  2494   002618                     
  2495                           ;mainEncoder.c: 293:                 error_ = error;
  2496   002618  C0E3  F0DF         	movff	_error,_error_
  2497   00261C  C0E4  F0E0         	movff	_error+1,_error_+1
  2498   002620  C0E5  F0E1         	movff	_error+2,_error_+2
  2499   002624  C0E6  F0E2         	movff	_error+3,_error_+3
  2500   002628                     
  2501                           ;mainEncoder.c: 296:                 salida_ = salida_sistema;
  2502   002628  C0D3  F0DB         	movff	_salida_sistema,_salida_
  2503   00262C  C0D4  F0DC         	movff	_salida_sistema+1,_salida_+1
  2504   002630  C0D5  F0DD         	movff	_salida_sistema+2,_salida_+2
  2505   002634  C0D6  F0DE         	movff	_salida_sistema+3,_salida_+3
  2506   002638                     
  2507                           ;mainEncoder.c: 299:                 APPState = 6;
  2508   002638  0E06               	movlw	6
  2509   00263A  0100               	movlb	0	; () banked
  2510   00263C  6FF8               	movwf	_APPState& (0+255),b
  2511                           
  2512                           ;mainEncoder.c: 301:             break;
  2513   00263E  EF8A  F013         	goto	l6306
  2514   002642                     l6278:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;mainEncoder.c: 308:                 LCD_imprimir_Datos();
  2518   002642  EC8E  F028         	call	_LCD_imprimir_Datos	;wreg free
  2519   002646                     
  2520                           ;mainEncoder.c: 309:                 _delay((unsigned long)((100)*(16000000UL/4000.0)));
  2521   002646  0E03               	movlw	3
  2522   002648  0100               	movlb	0	; () banked
  2523   00264A  6FCE               	movwf	(??_main+1)& (0+255),b
  2524   00264C  0E08               	movlw	8
  2525   00264E  6FCD               	movwf	??_main& (0+255),b
  2526   002650  0E77               	movlw	119
  2527   002652                     u5427:
  2528   002652  2EE8               	decfsz	wreg,f,c
  2529   002654  D7FE               	bra	u5427
  2530   002656  2FCD               	decfsz	??_main& (0+255),f,b
  2531   002658  D7FC               	bra	u5427
  2532   00265A  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  2533   00265C  D7FA               	bra	u5427
  2534   00265E                     
  2535                           ;mainEncoder.c: 311:                 tecla = Key_Read();
  2536   00265E  ECC7  F01F         	call	_Key_Read	;wreg free
  2537   002662  0100               	movlb	0	; () banked
  2538   002664  6FF5               	movwf	_tecla& (0+255),b
  2539   002666                     
  2540                           ; BSR set to: 0
  2541                           ;mainEncoder.c: 313:                 if(tecla != '\0')
  2542   002666  51F5               	movf	_tecla& (0+255),w,b
  2543   002668  B4D8               	btfsc	status,2,c
  2544   00266A  EF39  F013         	goto	u5341
  2545   00266E  EF3B  F013         	goto	u5340
  2546   002672                     u5341:
  2547   002672  EF9F  F011         	goto	l6230
  2548   002676                     u5340:
  2549   002676                     
  2550                           ; BSR set to: 0
  2551                           ;mainEncoder.c: 314:                 {;mainEncoder.c: 315:                     if (tecla
      +                           == '*')
  2552   002676  0E2A               	movlw	42
  2553   002678  19F5               	xorwf	_tecla& (0+255),w,b
  2554   00267A  A4D8               	btfss	status,2,c
  2555   00267C  EF42  F013         	goto	u5351
  2556   002680  EF44  F013         	goto	u5350
  2557   002684                     u5351:
  2558   002684  EF8A  F013         	goto	l442
  2559   002688                     u5350:
  2560   002688  EF93  F010         	goto	l6152
  2561   00268C                     l6294:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;mainEncoder.c: 337:                 sprintf(strRPM, "%01u,",RPM);
  2565   00268C  0E78               	movlw	low _strRPM
  2566   00268E  6FB8               	movwf	sprintf@s& (0+255),b
  2567   002690  0E02               	movlw	high _strRPM
  2568   002692  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  2569   002694  0EF1               	movlw	low STR_13
  2570   002696  6FBA               	movwf	sprintf@fmt& (0+255),b
  2571   002698  0E7F               	movlw	high STR_13
  2572   00269A  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  2573   00269C  C0F1  F0BC         	movff	_RPM,?_sprintf+4	;volatile
  2574   0026A0  C0F2  F0BD         	movff	_RPM+1,?_sprintf+5	;volatile
  2575   0026A4  EC94  F02E         	call	_sprintf	;wreg free
  2576                           
  2577                           ;mainEncoder.c: 338:                 sprintf(strpwm, "%01.02f,",salida_sistema);
  2578   0026A8  0E64               	movlw	low _strpwm
  2579   0026AA  0100               	movlb	0	; () banked
  2580   0026AC  6FB8               	movwf	sprintf@s& (0+255),b
  2581   0026AE  0E02               	movlw	high _strpwm
  2582   0026B0  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  2583   0026B2  0EE1               	movlw	low STR_14
  2584   0026B4  6FBA               	movwf	sprintf@fmt& (0+255),b
  2585   0026B6  0E7F               	movlw	high STR_14
  2586   0026B8  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  2587   0026BA  C0D3  F0BC         	movff	_salida_sistema,?_sprintf+4
  2588   0026BE  C0D4  F0BD         	movff	_salida_sistema+1,?_sprintf+5
  2589   0026C2  C0D5  F0BE         	movff	_salida_sistema+2,?_sprintf+6
  2590   0026C6  C0D6  F0BF         	movff	_salida_sistema+3,?_sprintf+7
  2591   0026CA  EC94  F02E         	call	_sprintf	;wreg free
  2592                           
  2593                           ;mainEncoder.c: 339:                 sprintf(strtiempo,"%01u\r\n",tiempo);
  2594   0026CE  0E50               	movlw	low _strtiempo
  2595   0026D0  0100               	movlb	0	; () banked
  2596   0026D2  6FB8               	movwf	sprintf@s& (0+255),b
  2597   0026D4  0E02               	movlw	high _strtiempo
  2598   0026D6  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  2599   0026D8  0EEA               	movlw	low STR_15
  2600   0026DA  6FBA               	movwf	sprintf@fmt& (0+255),b
  2601   0026DC  0E7F               	movlw	high STR_15
  2602   0026DE  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  2603   0026E0  C0EF  F0BC         	movff	_tiempo,?_sprintf+4	;volatile
  2604   0026E4  C0F0  F0BD         	movff	_tiempo+1,?_sprintf+5	;volatile
  2605   0026E8  EC94  F02E         	call	_sprintf	;wreg free
  2606   0026EC                     
  2607                           ;mainEncoder.c: 341:                 EUSART_WriteString(strRPM);
  2608   0026EC  0E78               	movlw	low _strRPM
  2609   0026EE  6E02               	movwf	EUSART_WriteString@ptrString^0,c
  2610   0026F0  0E02               	movlw	high _strRPM
  2611   0026F2  6E03               	movwf	(EUSART_WriteString@ptrString+1)^0,c
  2612   0026F4  EC11  F030         	call	_EUSART_WriteString	;wreg free
  2613   0026F8                     
  2614                           ;mainEncoder.c: 342:                 EUSART_WriteString(strpwm);
  2615   0026F8  0E64               	movlw	low _strpwm
  2616   0026FA  6E02               	movwf	EUSART_WriteString@ptrString^0,c
  2617   0026FC  0E02               	movlw	high _strpwm
  2618   0026FE  6E03               	movwf	(EUSART_WriteString@ptrString+1)^0,c
  2619   002700  EC11  F030         	call	_EUSART_WriteString	;wreg free
  2620   002704                     
  2621                           ;mainEncoder.c: 343:                 EUSART_WriteString(strtiempo);
  2622   002704  0E50               	movlw	low _strtiempo
  2623   002706  6E02               	movwf	EUSART_WriteString@ptrString^0,c
  2624   002708  0E02               	movlw	high _strtiempo
  2625   00270A  6E03               	movwf	(EUSART_WriteString@ptrString+1)^0,c
  2626   00270C  EC11  F030         	call	_EUSART_WriteString	;wreg free
  2627   002710  EF9F  F011         	goto	l6230
  2628   002714                     l442:
  2629   002714                     l6306:
  2630                           
  2631                           ; BSR set to: 0
  2632   002714  51F8               	movf	_APPState& (0+255),w,b
  2633   002716  6FCD               	movwf	??_main& (0+255),b
  2634   002718  6BCE               	clrf	(??_main+1)& (0+255),b
  2635                           
  2636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2637                           ; Switch size 1, requested type "simple"
  2638                           ; Number of cases is 1, Range of values is 0 to 0
  2639                           ; switch strategies available:
  2640                           ; Name         Instructions Cycles
  2641                           ; simple_byte            4     3 (average)
  2642                           ;	Chosen strategy is simple_byte
  2643   00271A  51CE               	movf	(??_main+1)& (0+255),w,b
  2644   00271C  0A00               	xorlw	0	; case 0
  2645   00271E  B4D8               	btfsc	status,2,c
  2646   002720  EF94  F013         	goto	l6652
  2647   002724  EF8A  F013         	goto	l6306
  2648   002728                     l6652:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ; Switch size 1, requested type "simple"
  2652                           ; Number of cases is 7, Range of values is 0 to 6
  2653                           ; switch strategies available:
  2654                           ; Name         Instructions Cycles
  2655                           ; simple_byte           22    12 (average)
  2656                           ;	Chosen strategy is simple_byte
  2657   002728  51CD               	movf	??_main& (0+255),w,b
  2658   00272A  0A00               	xorlw	0	; case 0
  2659   00272C  B4D8               	btfsc	status,2,c
  2660   00272E  EF3E  F010         	goto	l6134
  2661   002732  0A01               	xorlw	1	; case 1
  2662   002734  B4D8               	btfsc	status,2,c
  2663   002736  EF9A  F010         	goto	l445
  2664   00273A  0A03               	xorlw	3	; case 2
  2665   00273C  B4D8               	btfsc	status,2,c
  2666   00273E  EFA7  F010         	goto	l6158
  2667   002742  0A01               	xorlw	1	; case 3
  2668   002744  B4D8               	btfsc	status,2,c
  2669   002746  EFA4  F011         	goto	l6232
  2670   00274A  0A07               	xorlw	7	; case 4
  2671   00274C  B4D8               	btfsc	status,2,c
  2672   00274E  EFBE  F011         	goto	l6240
  2673   002752  0A01               	xorlw	1	; case 5
  2674   002754  B4D8               	btfsc	status,2,c
  2675   002756  EF21  F013         	goto	l6278
  2676   00275A  0A03               	xorlw	3	; case 6
  2677   00275C  B4D8               	btfsc	status,2,c
  2678   00275E  EF46  F013         	goto	l6294
  2679   002762  EF8A  F013         	goto	l6306
  2680   002766  EF2C  F000         	goto	start
  2681   00276A                     __end_of_main:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _atol *****************
  2685 ;; Defined at:
  2686 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atol.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2689 ;;		 -> SP(20), 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  n               4   23[COMRAM] long 
  2692 ;;  neg             2   21[COMRAM] int 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  4   12[COMRAM] long 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2702 ;;      Params:         4       0       0       0       0       0       0       0       0
  2703 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2704 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2705 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2706 ;;Total ram usage:       15 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 3
  2709 ;; This function calls:
  2710 ;;		___lmul
  2711 ;;		_isdigit
  2712 ;;		_isspace
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text1
  2719   00451C                     __ptext1:
  2720                           	callstack 0
  2721   00451C                     _atol:
  2722                           	callstack 27
  2723   00451C  0E00               	movlw	0
  2724   00451E  6E18               	movwf	atol@n^0,c
  2725   004520  0E00               	movlw	0
  2726   004522  6E19               	movwf	(atol@n+1)^0,c
  2727   004524  0E00               	movlw	0
  2728   004526  6E1A               	movwf	(atol@n+2)^0,c
  2729   004528  0E00               	movlw	0
  2730   00452A  6E1B               	movwf	(atol@n+3)^0,c
  2731   00452C  0E00               	movlw	0
  2732   00452E  6E17               	movwf	(atol@neg+1)^0,c
  2733   004530  0E00               	movlw	0
  2734   004532  6E16               	movwf	atol@neg^0,c
  2735   004534  EF9E  F022         	goto	l6020
  2736   004538                     l6016:
  2737   004538  4A0D               	infsnz	atol@s^0,f,c
  2738   00453A  2A0E               	incf	(atol@s+1)^0,f,c
  2739   00453C                     l6020:
  2740   00453C  C00D  FFD9         	movff	atol@s,fsr2l
  2741   004540  C00E  FFDA         	movff	atol@s+1,fsr2h
  2742   004544  0E20               	movlw	32
  2743   004546  18DE               	xorwf	postinc2,w,c
  2744   004548  B4D8               	btfsc	status,2,c
  2745   00454A  EFA9  F022         	goto	u5071
  2746   00454E  EFAB  F022         	goto	u5070
  2747   004552                     u5071:
  2748   004552  EF9C  F022         	goto	l6016
  2749   004556                     u5070:
  2750   004556  C00D  FFD9         	movff	atol@s,fsr2l
  2751   00455A  C00E  FFDA         	movff	atol@s+1,fsr2h
  2752   00455E  50DF               	movf	indf2,w,c
  2753   004560  6E11               	movwf	??_atol^0,c
  2754   004562  0EF7               	movlw	247
  2755   004564  2411               	addwf	??_atol^0,w,c
  2756   004566  6E12               	movwf	(??_atol+1)^0,c
  2757   004568  6A13               	clrf	(??_atol+2)^0,c
  2758   00456A  0EFF               	movlw	255
  2759   00456C  2213               	addwfc	(??_atol+2)^0,f,c
  2760   00456E  5013               	movf	(??_atol+2)^0,w,c
  2761   004570  E109               	bnz	u5080
  2762   004572  0E05               	movlw	5
  2763   004574  5C12               	subwf	(??_atol+1)^0,w,c
  2764   004576  A0D8               	btfss	status,0,c
  2765   004578  EFC0  F022         	goto	u5081
  2766   00457C  EFC2  F022         	goto	u5080
  2767   004580                     u5081:
  2768   004580  EF9C  F022         	goto	l6016
  2769   004584                     u5080:
  2770   004584  EFCC  F022         	goto	l6028
  2771   004588                     l6024:
  2772   004588  0E00               	movlw	0
  2773   00458A  6E17               	movwf	(atol@neg+1)^0,c
  2774   00458C  0E01               	movlw	1
  2775   00458E  6E16               	movwf	atol@neg^0,c
  2776   004590                     l6026:
  2777   004590  4A0D               	infsnz	atol@s^0,f,c
  2778   004592  2A0E               	incf	(atol@s+1)^0,f,c
  2779   004594  EF13  F023         	goto	l6036
  2780   004598                     l6028:
  2781   004598  C00D  FFD9         	movff	atol@s,fsr2l
  2782   00459C  C00E  FFDA         	movff	atol@s+1,fsr2h
  2783   0045A0  50DF               	movf	indf2,w,c
  2784   0045A2  6E11               	movwf	??_atol^0,c
  2785   0045A4  6A12               	clrf	(??_atol+1)^0,c
  2786                           
  2787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 1, Range of values is 0 to 0
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            4     3 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794   0045A6  5012               	movf	(??_atol+1)^0,w,c
  2795   0045A8  0A00               	xorlw	0	; case 0
  2796   0045AA  B4D8               	btfsc	status,2,c
  2797   0045AC  EFDA  F022         	goto	l6654
  2798   0045B0  EF13  F023         	goto	l6036
  2799   0045B4                     l6654:
  2800                           
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 2, Range of values is 43 to 45
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte            7     4 (average)
  2806                           ;	Chosen strategy is simple_byte
  2807   0045B4  5011               	movf	??_atol^0,w,c
  2808   0045B6  0A2B               	xorlw	43	; case 43
  2809   0045B8  B4D8               	btfsc	status,2,c
  2810   0045BA  EFC8  F022         	goto	l6026
  2811   0045BE  0A06               	xorlw	6	; case 45
  2812   0045C0  B4D8               	btfsc	status,2,c
  2813   0045C2  EFC4  F022         	goto	l6024
  2814   0045C6  EF13  F023         	goto	l6036
  2815   0045CA                     l6030:
  2816   0045CA  C00D  FFD9         	movff	atol@s,fsr2l
  2817   0045CE  C00E  FFDA         	movff	atol@s+1,fsr2h
  2818   0045D2  50DF               	movf	indf2,w,c
  2819   0045D4  6E11               	movwf	??_atol^0,c
  2820   0045D6  0ED0               	movlw	208
  2821   0045D8  2411               	addwf	??_atol^0,w,c
  2822   0045DA  6E12               	movwf	(??_atol+1)^0,c
  2823   0045DC  6A13               	clrf	(??_atol+2)^0,c
  2824   0045DE  0EFF               	movlw	255
  2825   0045E0  2213               	addwfc	(??_atol+2)^0,f,c
  2826   0045E2  6A14               	clrf	(??_atol+3)^0,c
  2827   0045E4  6A15               	clrf	(??_atol+4)^0,c
  2828   0045E6  C018  F001         	movff	atol@n,___lmul@multiplier
  2829   0045EA  C019  F002         	movff	atol@n+1,___lmul@multiplier+1
  2830   0045EE  C01A  F003         	movff	atol@n+2,___lmul@multiplier+2
  2831   0045F2  C01B  F004         	movff	atol@n+3,___lmul@multiplier+3
  2832   0045F6  0E0A               	movlw	10
  2833   0045F8  6E05               	movwf	___lmul@multiplicand^0,c
  2834   0045FA  0E00               	movlw	0
  2835   0045FC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2836   0045FE  0E00               	movlw	0
  2837   004600  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2838   004602  0E00               	movlw	0
  2839   004604  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2840   004606  EC12  F02D         	call	___lmul	;wreg free
  2841   00460A  5012               	movf	(??_atol+1)^0,w,c
  2842   00460C  5C01               	subwf	?___lmul^0,w,c
  2843   00460E  6E18               	movwf	atol@n^0,c
  2844   004610  5013               	movf	(??_atol+2)^0,w,c
  2845   004612  5802               	subwfb	(?___lmul+1)^0,w,c
  2846   004614  6E19               	movwf	(atol@n+1)^0,c
  2847   004616  5014               	movf	(??_atol+3)^0,w,c
  2848   004618  5803               	subwfb	(?___lmul+2)^0,w,c
  2849   00461A  6E1A               	movwf	(atol@n+2)^0,c
  2850   00461C  5015               	movf	(??_atol+4)^0,w,c
  2851   00461E  5804               	subwfb	(?___lmul+3)^0,w,c
  2852   004620  6E1B               	movwf	(atol@n+3)^0,c
  2853   004622  EFC8  F022         	goto	l6026
  2854   004626                     l6036:
  2855   004626  C00D  FFD9         	movff	atol@s,fsr2l
  2856   00462A  C00E  FFDA         	movff	atol@s+1,fsr2h
  2857   00462E  50DF               	movf	indf2,w,c
  2858   004630  6E11               	movwf	??_atol^0,c
  2859   004632  0ED0               	movlw	208
  2860   004634  2411               	addwf	??_atol^0,w,c
  2861   004636  6E12               	movwf	(??_atol+1)^0,c
  2862   004638  6A13               	clrf	(??_atol+2)^0,c
  2863   00463A  0EFF               	movlw	255
  2864   00463C  2213               	addwfc	(??_atol+2)^0,f,c
  2865   00463E  5013               	movf	(??_atol+2)^0,w,c
  2866   004640  E109               	bnz	u5090
  2867   004642  0E0A               	movlw	10
  2868   004644  5C12               	subwf	(??_atol+1)^0,w,c
  2869   004646  A0D8               	btfss	status,0,c
  2870   004648  EF28  F023         	goto	u5091
  2871   00464C  EF2A  F023         	goto	u5090
  2872   004650                     u5091:
  2873   004650  EFE5  F022         	goto	l6030
  2874   004654                     u5090:
  2875   004654  5016               	movf	atol@neg^0,w,c
  2876   004656  1017               	iorwf	(atol@neg+1)^0,w,c
  2877   004658  A4D8               	btfss	status,2,c
  2878   00465A  EF31  F023         	goto	u5101
  2879   00465E  EF33  F023         	goto	u5100
  2880   004662                     u5101:
  2881   004662  EF4E  F023         	goto	l1210
  2882   004666                     u5100:
  2883   004666  C018  F011         	movff	atol@n,??_atol
  2884   00466A  C019  F012         	movff	atol@n+1,??_atol+1
  2885   00466E  C01A  F013         	movff	atol@n+2,??_atol+2
  2886   004672  C01B  F014         	movff	atol@n+3,??_atol+3
  2887   004676  1E11               	comf	??_atol^0,f,c
  2888   004678  1E12               	comf	(??_atol+1)^0,f,c
  2889   00467A  1E13               	comf	(??_atol+2)^0,f,c
  2890   00467C  1E14               	comf	(??_atol+3)^0,f,c
  2891   00467E  2A11               	incf	??_atol^0,f,c
  2892   004680  0E00               	movlw	0
  2893   004682  2212               	addwfc	(??_atol+1)^0,f,c
  2894   004684  2213               	addwfc	(??_atol+2)^0,f,c
  2895   004686  2214               	addwfc	(??_atol+3)^0,f,c
  2896   004688  C011  F00D         	movff	??_atol,?_atol
  2897   00468C  C012  F00E         	movff	??_atol+1,?_atol+1
  2898   004690  C013  F00F         	movff	??_atol+2,?_atol+2
  2899   004694  C014  F010         	movff	??_atol+3,?_atol+3
  2900   004698  EF56  F023         	goto	l1213
  2901   00469C                     l1210:
  2902   00469C  C018  F00D         	movff	atol@n,?_atol
  2903   0046A0  C019  F00E         	movff	atol@n+1,?_atol+1
  2904   0046A4  C01A  F00F         	movff	atol@n+2,?_atol+2
  2905   0046A8  C01B  F010         	movff	atol@n+3,?_atol+3
  2906   0046AC                     l1213:
  2907   0046AC  0012               	return		;funcret
  2908   0046AE                     __end_of_atol:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function ___lmul *****************
  2912 ;; Defined at:
  2913 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  multiplier      4    0[COMRAM] unsigned long 
  2916 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  product         4    8[COMRAM] unsigned long 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  4    0[COMRAM] unsigned long 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         8       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2931 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:       12 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_atol
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text2
  2943   005A24                     __ptext2:
  2944                           	callstack 0
  2945   005A24                     ___lmul:
  2946                           	callstack 27
  2947   005A24  0E00               	movlw	0
  2948   005A26  6E09               	movwf	___lmul@product^0,c
  2949   005A28  0E00               	movlw	0
  2950   005A2A  6E0A               	movwf	(___lmul@product+1)^0,c
  2951   005A2C  0E00               	movlw	0
  2952   005A2E  6E0B               	movwf	(___lmul@product+2)^0,c
  2953   005A30  0E00               	movlw	0
  2954   005A32  6E0C               	movwf	(___lmul@product+3)^0,c
  2955   005A34                     l5888:
  2956   005A34  A001               	btfss	___lmul@multiplier^0,0,c
  2957   005A36  EF1F  F02D         	goto	u5001
  2958   005A3A  EF21  F02D         	goto	u5000
  2959   005A3E                     u5001:
  2960   005A3E  EF29  F02D         	goto	l5892
  2961   005A42                     u5000:
  2962   005A42  5005               	movf	___lmul@multiplicand^0,w,c
  2963   005A44  2609               	addwf	___lmul@product^0,f,c
  2964   005A46  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2965   005A48  220A               	addwfc	(___lmul@product+1)^0,f,c
  2966   005A4A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2967   005A4C  220B               	addwfc	(___lmul@product+2)^0,f,c
  2968   005A4E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2969   005A50  220C               	addwfc	(___lmul@product+3)^0,f,c
  2970   005A52                     l5892:
  2971   005A52  90D8               	bcf	status,0,c
  2972   005A54  3605               	rlcf	___lmul@multiplicand^0,f,c
  2973   005A56  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2974   005A58  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2975   005A5A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2976   005A5C  90D8               	bcf	status,0,c
  2977   005A5E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2978   005A60  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2979   005A62  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2980   005A64  3201               	rrcf	___lmul@multiplier^0,f,c
  2981   005A66  5001               	movf	___lmul@multiplier^0,w,c
  2982   005A68  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2983   005A6A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2984   005A6C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2985   005A6E  A4D8               	btfss	status,2,c
  2986   005A70  EF3C  F02D         	goto	u5011
  2987   005A74  EF3E  F02D         	goto	u5010
  2988   005A78                     u5011:
  2989   005A78  EF1A  F02D         	goto	l5888
  2990   005A7C                     u5010:
  2991   005A7C  C009  F001         	movff	___lmul@product,?___lmul
  2992   005A80  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2993   005A84  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2994   005A88  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2995   005A8C  0012               	return		;funcret
  2996   005A8E                     __end_of___lmul:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function ___xxtofl *****************
  3000 ;; Defined at:
  3001 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  sign            1    wreg     unsigned char 
  3004 ;;  val             4   27[COMRAM] long 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  sign            1   35[COMRAM] unsigned char 
  3007 ;;  arg             4   37[COMRAM] unsigned long 
  3008 ;;  exp             1   36[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  4   27[COMRAM] unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3018 ;;      Params:         4       0       0       0       0       0       0       0       0
  3019 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3020 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3021 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3022 ;;Total ram usage:       14 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 2
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text3
  3033   004368                     __ptext3:
  3034                           	callstack 0
  3035   004368                     ___xxtofl:
  3036                           	callstack 28
  3037                           
  3038                           ;incstack = 0
  3039                           ;___xxtofl@sign stored from wreg
  3040   004368  6E24               	movwf	___xxtofl@sign^0,c
  3041   00436A  5024               	movf	___xxtofl@sign^0,w,c
  3042   00436C  B4D8               	btfsc	status,2,c
  3043   00436E  EFBB  F021         	goto	u5111
  3044   004372  EFBD  F021         	goto	u5110
  3045   004376                     u5111:
  3046   004376  EFDF  F021         	goto	l1172
  3047   00437A                     u5110:
  3048   00437A  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  3049   00437C  EFC4  F021         	goto	u5120
  3050   004380  EFC2  F021         	goto	u5121
  3051   004384                     u5121:
  3052   004384  EFDF  F021         	goto	l1172
  3053   004388                     u5120:
  3054   004388  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  3055   00438C  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  3056   004390  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  3057   004394  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  3058   004398  1E20               	comf	??___xxtofl^0,f,c
  3059   00439A  1E21               	comf	(??___xxtofl+1)^0,f,c
  3060   00439C  1E22               	comf	(??___xxtofl+2)^0,f,c
  3061   00439E  1E23               	comf	(??___xxtofl+3)^0,f,c
  3062   0043A0  2A20               	incf	??___xxtofl^0,f,c
  3063   0043A2  0E00               	movlw	0
  3064   0043A4  2221               	addwfc	(??___xxtofl+1)^0,f,c
  3065   0043A6  2222               	addwfc	(??___xxtofl+2)^0,f,c
  3066   0043A8  2223               	addwfc	(??___xxtofl+3)^0,f,c
  3067   0043AA  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  3068   0043AE  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  3069   0043B2  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  3070   0043B6  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  3071   0043BA  EFE7  F021         	goto	l6056
  3072   0043BE                     l1172:
  3073   0043BE  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  3074   0043C2  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3075   0043C6  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3076   0043CA  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3077   0043CE                     l6056:
  3078   0043CE  501C               	movf	___xxtofl@val^0,w,c
  3079   0043D0  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  3080   0043D2  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  3081   0043D4  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  3082   0043D6  A4D8               	btfss	status,2,c
  3083   0043D8  EFF0  F021         	goto	u5131
  3084   0043DC  EFF2  F021         	goto	u5130
  3085   0043E0                     u5131:
  3086   0043E0  EFFC  F021         	goto	l6062
  3087   0043E4                     u5130:
  3088   0043E4  0E00               	movlw	0
  3089   0043E6  6E1C               	movwf	?___xxtofl^0,c
  3090   0043E8  0E00               	movlw	0
  3091   0043EA  6E1D               	movwf	(?___xxtofl+1)^0,c
  3092   0043EC  0E00               	movlw	0
  3093   0043EE  6E1E               	movwf	(?___xxtofl+2)^0,c
  3094   0043F0  0E00               	movlw	0
  3095   0043F2  6E1F               	movwf	(?___xxtofl+3)^0,c
  3096   0043F4  EF8D  F022         	goto	l1175
  3097   0043F8                     l6062:
  3098   0043F8  0E96               	movlw	150
  3099   0043FA  6E25               	movwf	___xxtofl@exp^0,c
  3100   0043FC  EF06  F022         	goto	l6066
  3101   004400                     l6064:
  3102   004400  2A25               	incf	___xxtofl@exp^0,f,c
  3103   004402  90D8               	bcf	status,0,c
  3104   004404  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  3105   004406  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  3106   004408  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  3107   00440A  3226               	rrcf	___xxtofl@arg^0,f,c
  3108   00440C                     l6066:
  3109   00440C  0E00               	movlw	0
  3110   00440E  1426               	andwf	___xxtofl@arg^0,w,c
  3111   004410  6E20               	movwf	??___xxtofl^0,c
  3112   004412  0E00               	movlw	0
  3113   004414  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  3114   004416  6E21               	movwf	(??___xxtofl+1)^0,c
  3115   004418  0E00               	movlw	0
  3116   00441A  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  3117   00441C  6E22               	movwf	(??___xxtofl+2)^0,c
  3118   00441E  0EFE               	movlw	254
  3119   004420  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  3120   004422  6E23               	movwf	(??___xxtofl+3)^0,c
  3121   004424  5020               	movf	??___xxtofl^0,w,c
  3122   004426  1021               	iorwf	(??___xxtofl+1)^0,w,c
  3123   004428  1022               	iorwf	(??___xxtofl+2)^0,w,c
  3124   00442A  1023               	iorwf	(??___xxtofl+3)^0,w,c
  3125   00442C  A4D8               	btfss	status,2,c
  3126   00442E  EF1B  F022         	goto	u5141
  3127   004432  EF1D  F022         	goto	u5140
  3128   004436                     u5141:
  3129   004436  EF00  F022         	goto	l6064
  3130   00443A                     u5140:
  3131   00443A  EF2B  F022         	goto	l1179
  3132   00443E                     l6068:
  3133   00443E  2A25               	incf	___xxtofl@exp^0,f,c
  3134   004440  0E01               	movlw	1
  3135   004442  2626               	addwf	___xxtofl@arg^0,f,c
  3136   004444  0E00               	movlw	0
  3137   004446  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  3138   004448  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  3139   00444A  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  3140   00444C  90D8               	bcf	status,0,c
  3141   00444E  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  3142   004450  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  3143   004452  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  3144   004454  3226               	rrcf	___xxtofl@arg^0,f,c
  3145   004456                     l1179:
  3146   004456  0E00               	movlw	0
  3147   004458  1426               	andwf	___xxtofl@arg^0,w,c
  3148   00445A  6E20               	movwf	??___xxtofl^0,c
  3149   00445C  0E00               	movlw	0
  3150   00445E  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  3151   004460  6E21               	movwf	(??___xxtofl+1)^0,c
  3152   004462  0E00               	movlw	0
  3153   004464  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  3154   004466  6E22               	movwf	(??___xxtofl+2)^0,c
  3155   004468  0EFF               	movlw	255
  3156   00446A  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  3157   00446C  6E23               	movwf	(??___xxtofl+3)^0,c
  3158   00446E  5020               	movf	??___xxtofl^0,w,c
  3159   004470  1021               	iorwf	(??___xxtofl+1)^0,w,c
  3160   004472  1022               	iorwf	(??___xxtofl+2)^0,w,c
  3161   004474  1023               	iorwf	(??___xxtofl+3)^0,w,c
  3162   004476  A4D8               	btfss	status,2,c
  3163   004478  EF40  F022         	goto	u5151
  3164   00447C  EF42  F022         	goto	u5150
  3165   004480                     u5151:
  3166   004480  EF1F  F022         	goto	l6068
  3167   004484                     u5150:
  3168   004484  EF4A  F022         	goto	l6076
  3169   004488                     l6074:
  3170   004488  0625               	decf	___xxtofl@exp^0,f,c
  3171   00448A  90D8               	bcf	status,0,c
  3172   00448C  3626               	rlcf	___xxtofl@arg^0,f,c
  3173   00448E  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  3174   004490  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  3175   004492  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  3176   004494                     l6076:
  3177   004494  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  3178   004496  EF4F  F022         	goto	u5161
  3179   00449A  EF51  F022         	goto	u5160
  3180   00449E                     u5161:
  3181   00449E  EF59  F022         	goto	l1186
  3182   0044A2                     u5160:
  3183   0044A2  0E02               	movlw	2
  3184   0044A4  6025               	cpfslt	___xxtofl@exp^0,c
  3185   0044A6  EF57  F022         	goto	u5171
  3186   0044AA  EF59  F022         	goto	u5170
  3187   0044AE                     u5171:
  3188   0044AE  EF44  F022         	goto	l6074
  3189   0044B2                     u5170:
  3190   0044B2                     l1186:
  3191   0044B2  B025               	btfsc	___xxtofl@exp^0,0,c
  3192   0044B4  EF5E  F022         	goto	u5181
  3193   0044B8  EF60  F022         	goto	u5180
  3194   0044BC                     u5181:
  3195   0044BC  EF61  F022         	goto	l6082
  3196   0044C0                     u5180:
  3197   0044C0  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  3198   0044C2                     l6082:
  3199   0044C2  90D8               	bcf	status,0,c
  3200   0044C4  3225               	rrcf	___xxtofl@exp^0,f,c
  3201   0044C6  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  3202   0044CA  6A21               	clrf	(??___xxtofl+1)^0,c
  3203   0044CC  6A22               	clrf	(??___xxtofl+2)^0,c
  3204   0044CE  6A23               	clrf	(??___xxtofl+3)^0,c
  3205   0044D0  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  3206   0044D4  6A22               	clrf	(??___xxtofl+2)^0,c
  3207   0044D6  6A21               	clrf	(??___xxtofl+1)^0,c
  3208   0044D8  6A20               	clrf	??___xxtofl^0,c
  3209   0044DA  5020               	movf	??___xxtofl^0,w,c
  3210   0044DC  1226               	iorwf	___xxtofl@arg^0,f,c
  3211   0044DE  5021               	movf	(??___xxtofl+1)^0,w,c
  3212   0044E0  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  3213   0044E2  5022               	movf	(??___xxtofl+2)^0,w,c
  3214   0044E4  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  3215   0044E6  5023               	movf	(??___xxtofl+3)^0,w,c
  3216   0044E8  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  3217   0044EA  5024               	movf	___xxtofl@sign^0,w,c
  3218   0044EC  B4D8               	btfsc	status,2,c
  3219   0044EE  EF7B  F022         	goto	u5191
  3220   0044F2  EF7D  F022         	goto	u5190
  3221   0044F6                     u5191:
  3222   0044F6  EF85  F022         	goto	l6092
  3223   0044FA                     u5190:
  3224   0044FA  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  3225   0044FC  EF84  F022         	goto	u5200
  3226   004500  EF82  F022         	goto	u5201
  3227   004504                     u5201:
  3228   004504  EF85  F022         	goto	l6092
  3229   004508                     u5200:
  3230   004508  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  3231   00450A                     l6092:
  3232   00450A  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  3233   00450E  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3234   004512  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3235   004516  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3236   00451A                     l1175:
  3237   00451A  0012               	return		;funcret
  3238   00451C                     __end_of___xxtofl:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _Lcd_Clear *****************
  3242 ;; Defined at:
  3243 ;;		line 43 in file "lib_pic/lcd.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3260 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3261 ;;Total ram usage:        0 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 4
  3264 ;; This function calls:
  3265 ;;		_Lcd_Cmd
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text4
  3272   00620C                     __ptext4:
  3273                           	callstack 0
  3274   00620C                     _Lcd_Clear:
  3275                           	callstack 26
  3276   00620C                     
  3277                           ;lib_pic/lcd.c: 45:  Lcd_Cmd(0);
  3278   00620C  0E00               	movlw	0
  3279   00620E  EC85  F030         	call	_Lcd_Cmd
  3280                           
  3281                           ;lib_pic/lcd.c: 46:  Lcd_Cmd(1);
  3282   006212  0E01               	movlw	1
  3283   006214  EC85  F030         	call	_Lcd_Cmd
  3284   006218  0012               	return		;funcret
  3285   00621A                     __end_of_Lcd_Clear:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _LCD_imprimir_Datos *****************
  3289 ;; Defined at:
  3290 ;;		line 514 in file "mainEncoder.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 10
  3311 ;; This function calls:
  3312 ;;		_Lcd_Set_Cursor
  3313 ;;		_Lcd_Write_String
  3314 ;;		_sprintf
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text5
  3321   00511C                     __ptext5:
  3322                           	callstack 0
  3323   00511C                     _LCD_imprimir_Datos:
  3324                           	callstack 20
  3325   00511C                     
  3326                           ;mainEncoder.c: 516:     sprintf(strsetpoint, "SetPoint   :%03.02f",setpoint);
  3327   00511C  0E8C               	movlw	low _strsetpoint
  3328   00511E  0100               	movlb	0	; () banked
  3329   005120  6FB8               	movwf	sprintf@s& (0+255),b
  3330   005122  0E02               	movlw	high _strsetpoint
  3331   005124  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  3332   005126  0E23               	movlw	low STR_16
  3333   005128  6FBA               	movwf	sprintf@fmt& (0+255),b
  3334   00512A  0E7F               	movlw	high STR_16
  3335   00512C  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  3336   00512E  C0E7  F0BC         	movff	_setpoint,?_sprintf+4
  3337   005132  C0E8  F0BD         	movff	_setpoint+1,?_sprintf+5
  3338   005136  C0E9  F0BE         	movff	_setpoint+2,?_sprintf+6
  3339   00513A  C0EA  F0BF         	movff	_setpoint+3,?_sprintf+7
  3340   00513E  EC94  F02E         	call	_sprintf	;wreg free
  3341                           
  3342                           ;mainEncoder.c: 517:     sprintf(strRPM, "Velocidad  :%03u   ",RPM);
  3343   005142  0E78               	movlw	low _strRPM
  3344   005144  0100               	movlb	0	; () banked
  3345   005146  6FB8               	movwf	sprintf@s& (0+255),b
  3346   005148  0E02               	movlw	high _strRPM
  3347   00514A  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  3348   00514C  0ED3               	movlw	low STR_17
  3349   00514E  6FBA               	movwf	sprintf@fmt& (0+255),b
  3350   005150  0E7E               	movlw	high STR_17
  3351   005152  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  3352   005154  C0F1  F0BC         	movff	_RPM,?_sprintf+4	;volatile
  3353   005158  C0F2  F0BD         	movff	_RPM+1,?_sprintf+5	;volatile
  3354   00515C  EC94  F02E         	call	_sprintf	;wreg free
  3355   005160                     
  3356                           ;mainEncoder.c: 519:     Lcd_Set_Cursor(1,1);
  3357   005160  0E01               	movlw	1
  3358   005162  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3359   005164  0E01               	movlw	1
  3360   005166  ECF8  F025         	call	_Lcd_Set_Cursor
  3361   00516A                     
  3362                           ;mainEncoder.c: 520:     Lcd_Write_String("Control PI-Difuso");
  3363   00516A  0E80               	movlw	low STR_18
  3364   00516C  6E05               	movwf	Lcd_Write_String@a^0,c
  3365   00516E  0E7F               	movlw	high STR_18
  3366   005170  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3367   005172  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  3368   005176                     
  3369                           ;mainEncoder.c: 522:     Lcd_Set_Cursor(2,1);
  3370   005176  0E01               	movlw	1
  3371   005178  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3372   00517A  0E02               	movlw	2
  3373   00517C  ECF8  F025         	call	_Lcd_Set_Cursor
  3374   005180                     
  3375                           ;mainEncoder.c: 523:     Lcd_Write_String(strsetpoint);
  3376   005180  0E8C               	movlw	low _strsetpoint
  3377   005182  6E05               	movwf	Lcd_Write_String@a^0,c
  3378   005184  0E02               	movlw	high _strsetpoint
  3379   005186  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3380   005188  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  3381   00518C                     
  3382                           ;mainEncoder.c: 525:     Lcd_Set_Cursor(3, 1);
  3383   00518C  0E01               	movlw	1
  3384   00518E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3385   005190  0E03               	movlw	3
  3386   005192  ECF8  F025         	call	_Lcd_Set_Cursor
  3387   005196                     
  3388                           ;mainEncoder.c: 526:     Lcd_Write_String(strRPM);
  3389   005196  0E78               	movlw	low _strRPM
  3390   005198  6E05               	movwf	Lcd_Write_String@a^0,c
  3391   00519A  0E02               	movlw	high _strRPM
  3392   00519C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3393   00519E  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  3394   0051A2                     
  3395                           ;mainEncoder.c: 528:     Lcd_Set_Cursor(4, 1);
  3396   0051A2  0E01               	movlw	1
  3397   0051A4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3398   0051A6  0E04               	movlw	4
  3399   0051A8  ECF8  F025         	call	_Lcd_Set_Cursor
  3400   0051AC                     
  3401                           ;mainEncoder.c: 529:     Lcd_Write_String("Configuracion (*)");
  3402   0051AC  0E4A               	movlw	low STR_19
  3403   0051AE  6E05               	movwf	Lcd_Write_String@a^0,c
  3404   0051B0  0E7F               	movlw	high STR_19
  3405   0051B2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3406   0051B4  EC95  F02C         	call	_Lcd_Write_String	;wreg free
  3407   0051B8  0012               	return		;funcret
  3408   0051BA                     __end_of_LCD_imprimir_Datos:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _sprintf *****************
  3412 ;; Defined at:
  3413 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  s               2   88[BANK0 ] PTR unsigned char 
  3416 ;;		 -> strsetpoint(20), strtiempo(20), strpwm(20), strRPM(20), 
  3417 ;;  fmt             2   90[BANK0 ] PTR const unsigned char 
  3418 ;;		 -> STR_17(20), STR_16(20), STR_15(7), STR_14(9), 
  3419 ;;		 -> STR_13(6), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  f              11   98[BANK0 ] struct _IO_FILE
  3422 ;;  ap              2   96[BANK0 ] PTR void [1]
  3423 ;;		 -> ?_sprintf(2), 
  3424 ;;  ret             2    0        int 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2   88[BANK0 ] int 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3434 ;;      Params:         0       8       0       0       0       0       0       0       0
  3435 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3437 ;;      Totals:         0      21       0       0       0       0       0       0       0
  3438 ;;Total ram usage:       21 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 9
  3441 ;; This function calls:
  3442 ;;		_vfprintf
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;;		_LCD_imprimir_Datos
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text6
  3450   005D28                     __ptext6:
  3451                           	callstack 0
  3452   005D28                     _sprintf:
  3453                           	callstack 21
  3454   005D28  0EBC               	movlw	low (?_sprintf+4)
  3455   005D2A  0100               	movlb	0	; () banked
  3456   005D2C  6FC0               	movwf	sprintf@ap& (0+255),b
  3457   005D2E  0E00               	movlw	high (?_sprintf+4)
  3458   005D30  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  3459   005D32  C0B8  F0C2         	movff	sprintf@s,sprintf@f
  3460   005D36  C0B9  F0C3         	movff	sprintf@s+1,sprintf@f+1
  3461   005D3A                     
  3462                           ; BSR set to: 0
  3463   005D3A  0E00               	movlw	0
  3464   005D3C  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  3465   005D3E  0E00               	movlw	0
  3466   005D40  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  3467   005D42                     
  3468                           ; BSR set to: 0
  3469   005D42  0E00               	movlw	0
  3470   005D44  6FCC               	movwf	(sprintf@f+10)& (0+255),b
  3471   005D46  0E00               	movlw	0
  3472   005D48  6FCB               	movwf	(sprintf@f+9)& (0+255),b
  3473   005D4A                     
  3474                           ; BSR set to: 0
  3475   005D4A  0EC2               	movlw	low sprintf@f
  3476   005D4C  6FB0               	movwf	vfprintf@fp& (0+255),b
  3477   005D4E  0E00               	movlw	high sprintf@f
  3478   005D50  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  3479   005D52  C0BA  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  3480   005D56  C0BB  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3481   005D5A  0EC0               	movlw	low sprintf@ap
  3482   005D5C  6FB4               	movwf	vfprintf@ap& (0+255),b
  3483   005D5E  0E00               	movlw	high sprintf@ap
  3484   005D60  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  3485   005D62  ECBD  F02E         	call	_vfprintf	;wreg free
  3486   005D66  0100               	movlb	0	; () banked
  3487   005D68  51C5               	movf	(sprintf@f+3)& (0+255),w,b
  3488   005D6A  25B8               	addwf	sprintf@s& (0+255),w,b
  3489   005D6C  6ED9               	movwf	fsr2l,c
  3490   005D6E  51C6               	movf	(sprintf@f+4)& (0+255),w,b
  3491   005D70  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  3492   005D72  6EDA               	movwf	fsr2h,c
  3493   005D74  0E00               	movlw	0
  3494   005D76  6EDF               	movwf	indf2,c
  3495   005D78                     
  3496                           ; BSR set to: 0
  3497   005D78  0012               	return		;funcret
  3498   005D7A                     __end_of_sprintf:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _vfprintf *****************
  3502 ;; Defined at:
  3503 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  3506 ;;		 -> sprintf@f(11), 
  3507 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  3508 ;;		 -> STR_17(20), STR_16(20), STR_15(7), STR_14(9), 
  3509 ;;		 -> STR_13(6), 
  3510 ;;  ap              2   84[BANK0 ] PTR PTR void 
  3511 ;;		 -> sprintf@ap(2), 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  cfmt            2   86[BANK0 ] PTR unsigned char 
  3514 ;;		 -> STR_17(20), STR_16(20), STR_15(7), STR_14(9), 
  3515 ;;		 -> STR_13(6), 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2   80[BANK0 ] int 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         0       6       0       0       0       0       0       0       0
  3526 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        8 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 8
  3532 ;; This function calls:
  3533 ;;		_vfpfcnvrt
  3534 ;; This function is called by:
  3535 ;;		_sprintf
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text7
  3540   005D7A                     __ptext7:
  3541                           	callstack 0
  3542   005D7A                     _vfprintf:
  3543                           	callstack 21
  3544   005D7A                     
  3545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3546   005D7A  C0B2  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  3547   005D7E  C0B3  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3550   005D82  EFD2  F02E         	goto	l5498
  3551   005D86                     l5496:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3554   005D86  C0B0  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  3555   005D8A  C0B1  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3556   005D8E  0EB6               	movlw	low vfprintf@cfmt
  3557   005D90  0100               	movlb	0	; () banked
  3558   005D92  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  3559   005D94  0E00               	movlw	high vfprintf@cfmt
  3560   005D96  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3561   005D98  C0B4  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  3562   005D9C  C0B5  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3563   005DA0  ECB5  F013         	call	_vfpfcnvrt	;wreg free
  3564   005DA4                     l5498:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3567   005DA4  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  3568   005DA8  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3569   005DAC                     	if	0	;tblptru may be non-zero
  3570   005DAC                     	endif
  3571   005DAC                     	if	0	;tblptru may be non-zero
  3572   005DAC                     	endif
  3573   005DAC  0008               	tblrd		*
  3574   005DAE  50F5               	movf	tablat,w,c
  3575   005DB0  0900               	iorlw	0
  3576   005DB2  A4D8               	btfss	status,2,c
  3577   005DB4  EFDE  F02E         	goto	u4811
  3578   005DB8  EFE0  F02E         	goto	u4810
  3579   005DBC                     u4811:
  3580   005DBC  EFC3  F02E         	goto	l5496
  3581   005DC0                     u4810:
  3582   005DC0                     
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3584   005DC0  0E00               	movlw	0
  3585   005DC2  0100               	movlb	0	; () banked
  3586   005DC4  6FB1               	movwf	(?_vfprintf+1)& (0+255),b
  3587   005DC6  0E00               	movlw	0
  3588   005DC8  6FB0               	movwf	?_vfprintf& (0+255),b
  3589   005DCA                     
  3590                           ; BSR set to: 0
  3591   005DCA  0012               	return		;funcret
  3592   005DCC                     __end_of_vfprintf:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _vfpfcnvrt *****************
  3596 ;; Defined at:
  3597 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  3600 ;;		 -> sprintf@f(11), 
  3601 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  3602 ;;		 -> vfprintf@cfmt(2), 
  3603 ;;  ap              2   65[BANK0 ] PTR PTR void 
  3604 ;;		 -> sprintf@ap(2), 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  convarg         8   69[BANK0 ] struct .
  3607 ;;  cp              2   78[BANK0 ] PTR unsigned char 
  3608 ;;		 -> STR_17(20), STR_16(20), STR_15(7), STR_14(9), 
  3609 ;;		 -> STR_13(6), 
  3610 ;;  done            2   67[BANK0 ] int 
  3611 ;;  i               2    0        int 
  3612 ;;  c               1   77[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         0       6       0       0       0       0       0       0       0
  3623 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3624 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         4      19       0       0       0       0       0       0       0
  3626 ;;Total ram usage:       23 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 7
  3629 ;; This function calls:
  3630 ;;		_atoi
  3631 ;;		_efgtoa
  3632 ;;		_fputc
  3633 ;;		_isdigit
  3634 ;;		_utoa
  3635 ;; This function is called by:
  3636 ;;		_vfprintf
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text8
  3641   00276A                     __ptext8:
  3642                           	callstack 0
  3643   00276A                     _vfpfcnvrt:
  3644                           	callstack 21
  3645   00276A                     
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3647   00276A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3648   00276E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3649   002772  CFDE FFF6          	movff	postinc2,tblptrl
  3650   002776  CFDD FFF7          	movff	postdec2,tblptrh
  3651   00277A                     	if	0	;tblptru may be non-zero
  3652   00277A                     	endif
  3653   00277A                     	if	0	;tblptru may be non-zero
  3654   00277A                     	endif
  3655   00277A  0008               	tblrd		*
  3656   00277C  50F5               	movf	tablat,w,c
  3657   00277E  0A25               	xorlw	37
  3658   002780  A4D8               	btfss	status,2,c
  3659   002782  EFC5  F013         	goto	u4631
  3660   002786  EFC7  F013         	goto	u4630
  3661   00278A                     u4631:
  3662   00278A  EF47  F016         	goto	l5322
  3663   00278E                     u4630:
  3664   00278E                     
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3666   00278E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3667   002792  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3668   002796  2ADE               	incf	postinc2,f,c
  3669   002798  0E00               	movlw	0
  3670   00279A  22DD               	addwfc	postdec2,f,c
  3671   00279C                     
  3672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3673   00279C  0E00               	movlw	0
  3674   00279E  0100               	movlb	0	; () banked
  3675   0027A0  6FEC               	movwf	(_width+1)& (0+255),b
  3676   0027A2  0E00               	movlw	0
  3677   0027A4  6FEB               	movwf	_width& (0+255),b
  3678   0027A6  C0EB  F0F3         	movff	_width,_flags
  3679   0027AA                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3682   0027AA  69ED               	setf	_prec& (0+255),b
  3683   0027AC  69EE               	setf	(_prec+1)& (0+255),b
  3684   0027AE                     
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  3687   0027AE  0E00               	movlw	0
  3688   0027B0  6FA4               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3689   0027B2  0E00               	movlw	0
  3690   0027B4  6FA3               	movwf	vfpfcnvrt@done& (0+255),b
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3693   0027B6  EF07  F014         	goto	l5234
  3694   0027BA                     l5224:
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  3698   0027BA  83F3               	bsf	_flags& (0+255),1,b
  3699   0027BC                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  3702   0027BC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3703   0027C0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3704   0027C4  2ADE               	incf	postinc2,f,c
  3705   0027C6  0E00               	movlw	0
  3706   0027C8  22DD               	addwfc	postdec2,f,c
  3707                           
  3708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  3709   0027CA  EF07  F014         	goto	l5234
  3710   0027CE                     l5228:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  3714   0027CE  0E00               	movlw	0
  3715   0027D0  6FA4               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3716   0027D2  0E01               	movlw	1
  3717   0027D4  6FA3               	movwf	vfpfcnvrt@done& (0+255),b
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  3720   0027D6  EF07  F014         	goto	l5234
  3721   0027DA                     l5232:
  3722                           
  3723                           ; BSR set to: 0
  3724   0027DA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3725   0027DE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3726   0027E2  CFDE FFF6          	movff	postinc2,tblptrl
  3727   0027E6  CFDD FFF7          	movff	postdec2,tblptrh
  3728   0027EA                     	if	0	;tblptru may be non-zero
  3729   0027EA                     	endif
  3730   0027EA                     	if	0	;tblptru may be non-zero
  3731   0027EA                     	endif
  3732   0027EA  0008               	tblrd		*
  3733   0027EC  50F5               	movf	tablat,w,c
  3734   0027EE  6E5B               	movwf	??_vfpfcnvrt^0,c
  3735   0027F0  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  3736                           
  3737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3738                           ; Switch size 1, requested type "simple"
  3739                           ; Number of cases is 1, Range of values is 0 to 0
  3740                           ; switch strategies available:
  3741                           ; Name         Instructions Cycles
  3742                           ; simple_byte            4     3 (average)
  3743                           ;	Chosen strategy is simple_byte
  3744   0027F2  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  3745   0027F4  0A00               	xorlw	0	; case 0
  3746   0027F6  B4D8               	btfsc	status,2,c
  3747   0027F8  EF00  F014         	goto	l6656
  3748   0027FC  EFE7  F013         	goto	l5228
  3749   002800                     l6656:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ; Switch size 1, requested type "simple"
  3753                           ; Number of cases is 1, Range of values is 48 to 48
  3754                           ; switch strategies available:
  3755                           ; Name         Instructions Cycles
  3756                           ; simple_byte            4     3 (average)
  3757                           ;	Chosen strategy is simple_byte
  3758   002800  505B               	movf	??_vfpfcnvrt^0,w,c
  3759   002802  0A30               	xorlw	48	; case 48
  3760   002804  B4D8               	btfsc	status,2,c
  3761   002806  EFDD  F013         	goto	l5224
  3762   00280A  EFE7  F013         	goto	l5228
  3763   00280E                     l5234:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3767   00280E  51A3               	movf	vfpfcnvrt@done& (0+255),w,b
  3768   002810  11A4               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3769   002812  B4D8               	btfsc	status,2,c
  3770   002814  EF0E  F014         	goto	u4641
  3771   002818  EF10  F014         	goto	u4640
  3772   00281C                     u4641:
  3773   00281C  EFED  F013         	goto	l5232
  3774   002820                     u4640:
  3775   002820                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  3778   002820  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3779   002824  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3780   002828  CFDE FFF6          	movff	postinc2,tblptrl
  3781   00282C  CFDD FFF7          	movff	postdec2,tblptrh
  3782   002830                     	if	0	;tblptru may be non-zero
  3783   002830                     	endif
  3784   002830                     	if	0	;tblptru may be non-zero
  3785   002830                     	endif
  3786   002830  0008               	tblrd		*
  3787   002832  50F5               	movf	tablat,w,c
  3788   002834  0A2A               	xorlw	42
  3789   002836  A4D8               	btfss	status,2,c
  3790   002838  EF20  F014         	goto	u4651
  3791   00283C  EF22  F014         	goto	u4650
  3792   002840                     u4651:
  3793   002840  EF4B  F014         	goto	l5244
  3794   002844                     u4650:
  3795   002844                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  3798   002844  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3799   002848  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3800   00284C  2ADE               	incf	postinc2,f,c
  3801   00284E  0E00               	movlw	0
  3802   002850  22DD               	addwfc	postdec2,f,c
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3805   002852  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3806   002856  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3807   00285A  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3808   00285E  0E02               	movlw	2
  3809   002860  26DE               	addwf	postinc2,f,c
  3810   002862  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3811   002866  0E00               	movlw	0
  3812   002868  22DD               	addwfc	postdec2,f,c
  3813   00286A  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3814   00286E  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3815   002872  CFDE F0EB          	movff	postinc2,_width
  3816   002876  CFDD F0EC          	movff	postdec2,_width+1
  3817   00287A                     
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  3820   00287A  BFEC               	btfsc	(_width+1)& (0+255),7,b
  3821   00287C  EF44  F014         	goto	u4660
  3822   002880  EF42  F014         	goto	u4661
  3823   002884                     u4661:
  3824   002884  EF7E  F014         	goto	l5252
  3825   002888                     u4660:
  3826   002888                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  3829   002888  81F3               	bsf	_flags& (0+255),0,b
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  3832   00288A  6DEB               	negf	_width& (0+255),b
  3833   00288C  1FEC               	comf	(_width+1)& (0+255),f,b
  3834   00288E  B0D8               	btfsc	status,0,c
  3835   002890  2BEC               	incf	(_width+1)& (0+255),f,b
  3836   002892  EF7E  F014         	goto	l5252
  3837   002896                     l5244:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  3841   002896  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3842   00289A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3843   00289E  CFDE F007          	movff	postinc2,atoi@s
  3844   0028A2  CFDD F008          	movff	postdec2,atoi@s+1
  3845   0028A6  EC57  F023         	call	_atoi	;wreg free
  3846   0028AA  C007  F0EB         	movff	?_atoi,_width
  3847   0028AE  C008  F0EC         	movff	?_atoi+1,_width+1
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3850   0028B2  EF62  F014         	goto	l5250
  3851   0028B6                     l5246:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  3854   0028B6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3855   0028BA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3856   0028BE  2ADE               	incf	postinc2,f,c
  3857   0028C0  0E00               	movlw	0
  3858   0028C2  22DD               	addwfc	postdec2,f,c
  3859   0028C4                     l5250:
  3860   0028C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3861   0028C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3862   0028CC  CFDE FFF6          	movff	postinc2,tblptrl
  3863   0028D0  CFDD FFF7          	movff	postdec2,tblptrh
  3864   0028D4                     	if	0	;tblptru may be non-zero
  3865   0028D4                     	endif
  3866   0028D4                     	if	0	;tblptru may be non-zero
  3867   0028D4                     	endif
  3868   0028D4  0008               	tblrd		*
  3869   0028D6  CFF5 F05B          	movff	tablat,??_vfpfcnvrt
  3870   0028DA  0ED0               	movlw	208
  3871   0028DC  245B               	addwf	??_vfpfcnvrt^0,w,c
  3872   0028DE  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  3873   0028E0  6A5D               	clrf	(??_vfpfcnvrt+2)^0,c
  3874   0028E2  0EFF               	movlw	255
  3875   0028E4  225D               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  3876   0028E6  505D               	movf	(??_vfpfcnvrt+2)^0,w,c
  3877   0028E8  E109               	bnz	u4670
  3878   0028EA  0E0A               	movlw	10
  3879   0028EC  5C5C               	subwf	(??_vfpfcnvrt+1)^0,w,c
  3880   0028EE  A0D8               	btfss	status,0,c
  3881   0028F0  EF7C  F014         	goto	u4671
  3882   0028F4  EF7E  F014         	goto	u4670
  3883   0028F8                     u4671:
  3884   0028F8  EF5B  F014         	goto	l5246
  3885   0028FC                     u4670:
  3886   0028FC                     l5252:
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  3889   0028FC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890   002900  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891   002904  CFDE FFF6          	movff	postinc2,tblptrl
  3892   002908  CFDD FFF7          	movff	postdec2,tblptrh
  3893   00290C                     	if	0	;tblptru may be non-zero
  3894   00290C                     	endif
  3895   00290C                     	if	0	;tblptru may be non-zero
  3896   00290C                     	endif
  3897   00290C  0008               	tblrd		*
  3898   00290E  50F5               	movf	tablat,w,c
  3899   002910  0A2E               	xorlw	46
  3900   002912  A4D8               	btfss	status,2,c
  3901   002914  EF8E  F014         	goto	u4681
  3902   002918  EF90  F014         	goto	u4680
  3903   00291C                     u4681:
  3904   00291C  EFFE  F014         	goto	l5270
  3905   002920                     u4680:
  3906   002920                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  3908   002920  0E00               	movlw	0
  3909   002922  0100               	movlb	0	; () banked
  3910   002924  6FEE               	movwf	(_prec+1)& (0+255),b
  3911   002926  0E00               	movlw	0
  3912   002928  6FED               	movwf	_prec& (0+255),b
  3913   00292A                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  3916   00292A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3917   00292E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3918   002932  2ADE               	incf	postinc2,f,c
  3919   002934  0E00               	movlw	0
  3920   002936  22DD               	addwfc	postdec2,f,c
  3921   002938                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  3924   002938  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3925   00293C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3926   002940  CFDE FFF6          	movff	postinc2,tblptrl
  3927   002944  CFDD FFF7          	movff	postdec2,tblptrh
  3928   002948                     	if	0	;tblptru may be non-zero
  3929   002948                     	endif
  3930   002948                     	if	0	;tblptru may be non-zero
  3931   002948                     	endif
  3932   002948  0008               	tblrd		*
  3933   00294A  50F5               	movf	tablat,w,c
  3934   00294C  0A2A               	xorlw	42
  3935   00294E  A4D8               	btfss	status,2,c
  3936   002950  EFAC  F014         	goto	u4691
  3937   002954  EFAE  F014         	goto	u4690
  3938   002958                     u4691:
  3939   002958  EFCB  F014         	goto	l5262
  3940   00295C                     u4690:
  3941   00295C                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  3944   00295C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3945   002960  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3946   002964  2ADE               	incf	postinc2,f,c
  3947   002966  0E00               	movlw	0
  3948   002968  22DD               	addwfc	postdec2,f,c
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3951   00296A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3952   00296E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3953   002972  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  3954   002976  0E02               	movlw	2
  3955   002978  26DE               	addwf	postinc2,f,c
  3956   00297A  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  3957   00297E  0E00               	movlw	0
  3958   002980  22DD               	addwfc	postdec2,f,c
  3959   002982  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3960   002986  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3961   00298A  CFDE F0ED          	movff	postinc2,_prec
  3962   00298E  CFDD F0EE          	movff	postdec2,_prec+1
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  3965   002992  EFFE  F014         	goto	l5270
  3966   002996                     l5262:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  3970   002996  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971   00299A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972   00299E  CFDE F007          	movff	postinc2,atoi@s
  3973   0029A2  CFDD F008          	movff	postdec2,atoi@s+1
  3974   0029A6  EC57  F023         	call	_atoi	;wreg free
  3975   0029AA  C007  F0ED         	movff	?_atoi,_prec
  3976   0029AE  C008  F0EE         	movff	?_atoi+1,_prec+1
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3979   0029B2  EFE2  F014         	goto	l5268
  3980   0029B6                     l5264:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  3983   0029B6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3984   0029BA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3985   0029BE  2ADE               	incf	postinc2,f,c
  3986   0029C0  0E00               	movlw	0
  3987   0029C2  22DD               	addwfc	postdec2,f,c
  3988   0029C4                     l5268:
  3989   0029C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3990   0029C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3991   0029CC  CFDE FFF6          	movff	postinc2,tblptrl
  3992   0029D0  CFDD FFF7          	movff	postdec2,tblptrh
  3993   0029D4                     	if	0	;tblptru may be non-zero
  3994   0029D4                     	endif
  3995   0029D4                     	if	0	;tblptru may be non-zero
  3996   0029D4                     	endif
  3997   0029D4  0008               	tblrd		*
  3998   0029D6  CFF5 F05B          	movff	tablat,??_vfpfcnvrt
  3999   0029DA  0ED0               	movlw	208
  4000   0029DC  245B               	addwf	??_vfpfcnvrt^0,w,c
  4001   0029DE  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  4002   0029E0  6A5D               	clrf	(??_vfpfcnvrt+2)^0,c
  4003   0029E2  0EFF               	movlw	255
  4004   0029E4  225D               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  4005   0029E6  505D               	movf	(??_vfpfcnvrt+2)^0,w,c
  4006   0029E8  E109               	bnz	u4700
  4007   0029EA  0E0A               	movlw	10
  4008   0029EC  5C5C               	subwf	(??_vfpfcnvrt+1)^0,w,c
  4009   0029EE  A0D8               	btfss	status,0,c
  4010   0029F0  EFFC  F014         	goto	u4701
  4011   0029F4  EFFE  F014         	goto	u4700
  4012   0029F8                     u4701:
  4013   0029F8  EFDB  F014         	goto	l5264
  4014   0029FC                     u4700:
  4015   0029FC                     l5270:
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4018   0029FC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4019   002A00  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4020   002A04  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
  4021   002A08  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
  4022   002A0C  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4023   002A10  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4024   002A14                     	if	0	;tblptru may be non-zero
  4025   002A14                     	endif
  4026   002A14                     	if	0	;tblptru may be non-zero
  4027   002A14                     	endif
  4028   002A14  0008               	tblrd		*
  4029   002A16  50F5               	movf	tablat,w,c
  4030   002A18  0A75               	xorlw	117
  4031   002A1A  A4D8               	btfss	status,2,c
  4032   002A1C  EF12  F015         	goto	u4711
  4033   002A20  EF14  F015         	goto	u4710
  4034   002A24                     u4711:
  4035   002A24  EF71  F015         	goto	l5284
  4036   002A28                     u4710:
  4037   002A28                     
  4038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4039   002A28  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4040   002A2C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4041   002A30  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4042   002A34  0E02               	movlw	2
  4043   002A36  26DE               	addwf	postinc2,f,c
  4044   002A38  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4045   002A3C  0E00               	movlw	0
  4046   002A3E  22DD               	addwfc	postdec2,f,c
  4047   002A40  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4048   002A44  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4049   002A48  CFDE F05D          	movff	postinc2,??_vfpfcnvrt+2
  4050   002A4C  CFDD F05E          	movff	postdec2,??_vfpfcnvrt+3
  4051   002A50  C05D  F0A5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  4052   002A54  C05E  F0A6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  4053   002A58  0100               	movlb	0	; () banked
  4054   002A5A  6BA7               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  4055   002A5C  6BA8               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  4056   002A5E  6BA9               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  4057   002A60  6BAA               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  4058   002A62  6BAB               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  4059   002A64  6BAC               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  4062   002A66  0E01               	movlw	1
  4063   002A68  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4064   002A6A  6E5B               	movwf	??_vfpfcnvrt^0,c
  4065   002A6C  0E00               	movlw	0
  4066   002A6E  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4067   002A70  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  4068   002A72  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4069   002A76  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4070   002A7A  C05B  FFDE         	movff	??_vfpfcnvrt,postinc2
  4071   002A7E  C05C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  4074   002A82  EF5B  F015         	goto	l5282
  4075   002A86                     l5276:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  4079   002A86  C09D  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  4080   002A8A  C09E  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4081   002A8E  C0A5  F01F         	movff	vfpfcnvrt@convarg,utoa@d
  4082   002A92  C0A6  F020         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  4083   002A96  C0A7  F021         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  4084   002A9A  C0A8  F022         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  4085   002A9E  C0A9  F023         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  4086   002AA2  C0AA  F024         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  4087   002AA6  C0AB  F025         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  4088   002AAA  C0AC  F026         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  4089   002AAE  ECC9  F01E         	call	_utoa	;wreg free
  4090   002AB2  EF5B  F016         	goto	l1379
  4091   002AB6                     l5282:
  4092                           
  4093                           ; BSR set to: 0
  4094   002AB6  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4095   002ABA  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4096   002ABE                     	if	0	;tblptru may be non-zero
  4097   002ABE                     	endif
  4098   002ABE                     	if	0	;tblptru may be non-zero
  4099   002ABE                     	endif
  4100   002ABE  0008               	tblrd		*
  4101   002AC0  50F5               	movf	tablat,w,c
  4102   002AC2  6E5B               	movwf	??_vfpfcnvrt^0,c
  4103   002AC4  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  4104                           
  4105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4106                           ; Switch size 1, requested type "simple"
  4107                           ; Number of cases is 1, Range of values is 0 to 0
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte            4     3 (average)
  4111                           ;	Chosen strategy is simple_byte
  4112   002AC6  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4113   002AC8  0A00               	xorlw	0	; case 0
  4114   002ACA  B4D8               	btfsc	status,2,c
  4115   002ACC  EF6A  F015         	goto	l6658
  4116   002AD0  EF71  F015         	goto	l5284
  4117   002AD4                     l6658:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ; Switch size 1, requested type "simple"
  4121                           ; Number of cases is 1, Range of values is 117 to 117
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            4     3 (average)
  4125                           ;	Chosen strategy is simple_byte
  4126   002AD4  505B               	movf	??_vfpfcnvrt^0,w,c
  4127   002AD6  0A75               	xorlw	117	; case 117
  4128   002AD8  B4D8               	btfsc	status,2,c
  4129   002ADA  EF43  F015         	goto	l5276
  4130   002ADE  EF71  F015         	goto	l5284
  4131   002AE2                     l5284:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  4134   002AE2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4135   002AE6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4136   002AEA  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
  4137   002AEE  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
  4138   002AF2                     
  4139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  4140   002AF2  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4141   002AF6  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4142   002AFA                     	if	0	;tblptru may be non-zero
  4143   002AFA                     	endif
  4144   002AFA                     	if	0	;tblptru may be non-zero
  4145   002AFA                     	endif
  4146   002AFA  0008               	tblrd		*
  4147   002AFC  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  4150   002B00  EF8E  F015         	goto	l5296
  4151   002B04                     l5288:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  4155   002B04  4BAE               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  4156   002B06  2BAF               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  4159   002B08  EFA8  F015         	goto	l5298
  4160   002B0C                     l5290:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  4164   002B0C  0E6C               	movlw	108
  4165   002B0E  6FAD               	movwf	vfpfcnvrt@c& (0+255),b
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  4168   002B10  EFA8  F015         	goto	l5298
  4169   002B14                     l5292:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  4173   002B14  0E00               	movlw	0
  4174   002B16  6FAD               	movwf	vfpfcnvrt@c& (0+255),b
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  4177   002B18  EFA8  F015         	goto	l5298
  4178   002B1C                     l5296:
  4179   002B1C  0100               	movlb	0	; () banked
  4180   002B1E  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
  4181   002B20  6E5B               	movwf	??_vfpfcnvrt^0,c
  4182   002B22  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  4183                           
  4184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 1, Range of values is 0 to 0
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; simple_byte            4     3 (average)
  4190                           ;	Chosen strategy is simple_byte
  4191   002B24  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4192   002B26  0A00               	xorlw	0	; case 0
  4193   002B28  B4D8               	btfsc	status,2,c
  4194   002B2A  EF99  F015         	goto	l6660
  4195   002B2E  EF8A  F015         	goto	l5292
  4196   002B32                     l6660:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ; Switch size 1, requested type "simple"
  4200                           ; Number of cases is 3, Range of values is 76 to 108
  4201                           ; switch strategies available:
  4202                           ; Name         Instructions Cycles
  4203                           ; simple_byte           10     6 (average)
  4204                           ;	Chosen strategy is simple_byte
  4205   002B32  505B               	movf	??_vfpfcnvrt^0,w,c
  4206   002B34  0A4C               	xorlw	76	; case 76
  4207   002B36  B4D8               	btfsc	status,2,c
  4208   002B38  EF82  F015         	goto	l5288
  4209   002B3C  0A2A               	xorlw	42	; case 102
  4210   002B3E  B4D8               	btfsc	status,2,c
  4211   002B40  EF86  F015         	goto	l5290
  4212   002B44  0A0A               	xorlw	10	; case 108
  4213   002B46  B4D8               	btfsc	status,2,c
  4214   002B48  EF82  F015         	goto	l5288
  4215   002B4C  EF8A  F015         	goto	l5292
  4216   002B50                     l5298:
  4217                           
  4218                           ; BSR set to: 0
  4219   002B50  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4220   002B54  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4221   002B58                     	if	0	;tblptru may be non-zero
  4222   002B58                     	endif
  4223   002B58                     	if	0	;tblptru may be non-zero
  4224   002B58                     	endif
  4225   002B58  0008               	tblrd		*
  4226   002B5A  50F5               	movf	tablat,w,c
  4227   002B5C  0A66               	xorlw	102
  4228   002B5E  A4D8               	btfss	status,2,c
  4229   002B60  EFB4  F015         	goto	u4721
  4230   002B64  EFB6  F015         	goto	u4720
  4231   002B68                     u4721:
  4232   002B68  EF3E  F016         	goto	l5318
  4233   002B6C                     u4720:
  4234   002B6C  EFEC  F015         	goto	l5306
  4235   002B70                     l5300:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4239   002B70  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4240   002B74  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4241   002B78  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4242   002B7C  0E04               	movlw	4
  4243   002B7E  26DE               	addwf	postinc2,f,c
  4244   002B80  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4245   002B84  0E00               	movlw	0
  4246   002B86  22DD               	addwfc	postdec2,f,c
  4247   002B88  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4248   002B8C  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4249   002B90  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  4250   002B94  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+1
  4251   002B98  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg+2
  4252   002B9C  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+3
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  4255   002BA0  EF01  F016         	goto	l5308
  4256   002BA4                     l5302:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4260   002BA4  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4261   002BA8  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4262   002BAC  CFDF F05B          	movff	indf2,??_vfpfcnvrt
  4263   002BB0  0E04               	movlw	4
  4264   002BB2  26DE               	addwf	postinc2,f,c
  4265   002BB4  CFDF F05C          	movff	indf2,??_vfpfcnvrt+1
  4266   002BB8  0E00               	movlw	0
  4267   002BBA  22DD               	addwfc	postdec2,f,c
  4268   002BBC  C05B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4269   002BC0  C05C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4270   002BC4  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  4271   002BC8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+1
  4272   002BCC  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg+2
  4273   002BD0  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+3
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  4276   002BD4  EF01  F016         	goto	l5308
  4277   002BD8                     l5306:
  4278                           
  4279                           ; BSR set to: 0
  4280   002BD8  51AD               	movf	vfpfcnvrt@c& (0+255),w,b
  4281   002BDA  6E5B               	movwf	??_vfpfcnvrt^0,c
  4282   002BDC  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  4283                           
  4284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4285                           ; Switch size 1, requested type "simple"
  4286                           ; Number of cases is 1, Range of values is 0 to 0
  4287                           ; switch strategies available:
  4288                           ; Name         Instructions Cycles
  4289                           ; simple_byte            4     3 (average)
  4290                           ;	Chosen strategy is simple_byte
  4291   002BDE  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4292   002BE0  0A00               	xorlw	0	; case 0
  4293   002BE2  B4D8               	btfsc	status,2,c
  4294   002BE4  EFF6  F015         	goto	l6662
  4295   002BE8  EF01  F016         	goto	l5308
  4296   002BEC                     l6662:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ; Switch size 1, requested type "simple"
  4300                           ; Number of cases is 2, Range of values is 76 to 108
  4301                           ; switch strategies available:
  4302                           ; Name         Instructions Cycles
  4303                           ; simple_byte            7     4 (average)
  4304                           ;	Chosen strategy is simple_byte
  4305   002BEC  505B               	movf	??_vfpfcnvrt^0,w,c
  4306   002BEE  0A4C               	xorlw	76	; case 76
  4307   002BF0  B4D8               	btfsc	status,2,c
  4308   002BF2  EFD2  F015         	goto	l5302
  4309   002BF6  0A20               	xorlw	32	; case 108
  4310   002BF8  B4D8               	btfsc	status,2,c
  4311   002BFA  EFB8  F015         	goto	l5300
  4312   002BFE  EF01  F016         	goto	l5308
  4313   002C02                     l5308:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  4317   002C02  0E01               	movlw	1
  4318   002C04  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4319   002C06  6E5B               	movwf	??_vfpfcnvrt^0,c
  4320   002C08  0E00               	movlw	0
  4321   002C0A  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4322   002C0C  6E5C               	movwf	(??_vfpfcnvrt+1)^0,c
  4323   002C0E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4324   002C12  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4325   002C16  C05B  FFDE         	movff	??_vfpfcnvrt,postinc2
  4326   002C1A  C05C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  4329   002C1E  EF28  F016         	goto	l5316
  4330   002C22                     l5310:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4334   002C22  C09D  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  4335   002C26  C09E  F06B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4336   002C2A  C0A5  F06C         	movff	vfpfcnvrt@convarg,efgtoa@f
  4337   002C2E  C0A6  F06D         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  4338   002C32  C0A7  F06E         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  4339   002C36  C0A8  F06F         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  4340   002C3A  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4341   002C3E  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4342   002C42                     	if	0	;tblptru may be non-zero
  4343   002C42                     	endif
  4344   002C42                     	if	0	;tblptru may be non-zero
  4345   002C42                     	endif
  4346   002C42  0008               	tblrd		*
  4347   002C44  CFF5 F070          	movff	tablat,efgtoa@c
  4348   002C48  EC03  F00B         	call	_efgtoa	;wreg free
  4349   002C4C  EF5B  F016         	goto	l1379
  4350   002C50                     l5316:
  4351                           
  4352                           ; BSR set to: 0
  4353   002C50  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4354   002C54  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4355   002C58                     	if	0	;tblptru may be non-zero
  4356   002C58                     	endif
  4357   002C58                     	if	0	;tblptru may be non-zero
  4358   002C58                     	endif
  4359   002C58  0008               	tblrd		*
  4360   002C5A  50F5               	movf	tablat,w,c
  4361   002C5C  6E5B               	movwf	??_vfpfcnvrt^0,c
  4362   002C5E  6A5C               	clrf	(??_vfpfcnvrt+1)^0,c
  4363                           
  4364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4365                           ; Switch size 1, requested type "simple"
  4366                           ; Number of cases is 1, Range of values is 0 to 0
  4367                           ; switch strategies available:
  4368                           ; Name         Instructions Cycles
  4369                           ; simple_byte            4     3 (average)
  4370                           ;	Chosen strategy is simple_byte
  4371   002C60  505C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4372   002C62  0A00               	xorlw	0	; case 0
  4373   002C64  B4D8               	btfsc	status,2,c
  4374   002C66  EF37  F016         	goto	l6664
  4375   002C6A  EF3E  F016         	goto	l5318
  4376   002C6E                     l6664:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ; Switch size 1, requested type "simple"
  4380                           ; Number of cases is 1, Range of values is 102 to 102
  4381                           ; switch strategies available:
  4382                           ; Name         Instructions Cycles
  4383                           ; simple_byte            4     3 (average)
  4384                           ;	Chosen strategy is simple_byte
  4385   002C6E  505B               	movf	??_vfpfcnvrt^0,w,c
  4386   002C70  0A66               	xorlw	102	; case 102
  4387   002C72  B4D8               	btfsc	status,2,c
  4388   002C74  EF11  F016         	goto	l5310
  4389   002C78  EF3E  F016         	goto	l5318
  4390   002C7C                     l5318:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4393   002C7C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4394   002C80  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4395   002C84  2ADE               	incf	postinc2,f,c
  4396   002C86  0E00               	movlw	0
  4397   002C88  22DD               	addwfc	postdec2,f,c
  4398   002C8A  EF5B  F016         	goto	l1379
  4399   002C8E                     l5322:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4402   002C8E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4403   002C92  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4404   002C96  CFDE FFF6          	movff	postinc2,tblptrl
  4405   002C9A  CFDD FFF7          	movff	postdec2,tblptrh
  4406   002C9E                     	if	0	;tblptru may be non-zero
  4407   002C9E                     	endif
  4408   002C9E                     	if	0	;tblptru may be non-zero
  4409   002C9E                     	endif
  4410   002C9E  0008               	tblrd		*
  4411   002CA0  50F5               	movf	tablat,w,c
  4412   002CA2  6E02               	movwf	fputc@c^0,c
  4413   002CA4  6A03               	clrf	(fputc@c+1)^0,c
  4414   002CA6  C09D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  4415   002CAA  C09E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4416   002CAE  ECC9  F026         	call	_fputc	;wreg free
  4417   002CB2  EF3E  F016         	goto	l5318
  4418   002CB6                     l1379:
  4419   002CB6  0012               	return		;funcret
  4420   002CB8                     __end_of_vfpfcnvrt:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _utoa *****************
  4424 ;; Defined at:
  4425 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4428 ;;		 -> sprintf@f(11), 
  4429 ;;  d               8   30[COMRAM] unsigned long long 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  n               8   50[COMRAM] unsigned long long 
  4432 ;;  i               2   58[COMRAM] int 
  4433 ;;  w               2   48[COMRAM] int 
  4434 ;;  p               2   46[COMRAM] int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:        10       0       0       0       0       0       0       0       0
  4445 ;;      Locals:        14       0       0       0       0       0       0       0       0
  4446 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4447 ;;      Totals:        32       0       0       0       0       0       0       0       0
  4448 ;;Total ram usage:       32 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 6
  4451 ;; This function calls:
  4452 ;;		___lodiv
  4453 ;;		___lomod
  4454 ;;		_pad
  4455 ;; This function is called by:
  4456 ;;		_vfpfcnvrt
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text9
  4461   003D92                     __ptext9:
  4462                           	callstack 0
  4463   003D92                     _utoa:
  4464                           	callstack 21
  4465   003D92                     
  4466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  4467   003D92  0100               	movlb	0	; () banked
  4468   003D94  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4469   003D96  EFCF  F01E         	goto	u4441
  4470   003D9A  EFD1  F01E         	goto	u4440
  4471   003D9E                     u4441:
  4472   003D9E  EFD2  F01E         	goto	l5080
  4473   003DA2                     u4440:
  4474   003DA2                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  4477   003DA2  93F3               	bcf	_flags& (0+255),1,b
  4478   003DA4                     l5080:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  4482   003DA4  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4483   003DA6  EFDF  F01E         	goto	u4450
  4484   003DAA  51EE               	movf	(_prec+1)& (0+255),w,b
  4485   003DAC  E106               	bnz	u4451
  4486   003DAE  05ED               	decf	_prec& (0+255),w,b
  4487   003DB0  B0D8               	btfsc	status,0,c
  4488   003DB2  EFDD  F01E         	goto	u4451
  4489   003DB6  EFDF  F01E         	goto	u4450
  4490   003DBA                     u4451:
  4491   003DBA  EFE5  F01E         	goto	l1337
  4492   003DBE                     u4450:
  4493   003DBE                     
  4494                           ; BSR set to: 0
  4495   003DBE  0E00               	movlw	0
  4496   003DC0  6E30               	movwf	(utoa@p+1)^0,c
  4497   003DC2  0E01               	movlw	1
  4498   003DC4  6E2F               	movwf	utoa@p^0,c
  4499   003DC6  EFE9  F01E         	goto	l1339
  4500   003DCA                     l1337:
  4501                           
  4502                           ; BSR set to: 0
  4503   003DCA  C0ED  F02F         	movff	_prec,utoa@p
  4504   003DCE  C0EE  F030         	movff	_prec+1,utoa@p+1
  4505   003DD2                     l1339:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  4509   003DD2  C0EB  F031         	movff	_width,utoa@w
  4510   003DD6  C0EC  F032         	movff	_width+1,utoa@w+1
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  4513   003DDA  C01F  F033         	movff	utoa@d,utoa@n
  4514   003DDE  C020  F034         	movff	utoa@d+1,utoa@n+1
  4515   003DE2  C021  F035         	movff	utoa@d+2,utoa@n+2
  4516   003DE6  C022  F036         	movff	utoa@d+3,utoa@n+3
  4517   003DEA  C023  F037         	movff	utoa@d+4,utoa@n+4
  4518   003DEE  C024  F038         	movff	utoa@d+5,utoa@n+5
  4519   003DF2  C025  F039         	movff	utoa@d+6,utoa@n+6
  4520   003DF6  C026  F03A         	movff	utoa@d+7,utoa@n+7
  4521   003DFA                     
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  4524   003DFA  0E00               	movlw	0
  4525   003DFC  6E3C               	movwf	(utoa@i+1)^0,c
  4526   003DFE  0E4F               	movlw	79
  4527   003E00  6E3B               	movwf	utoa@i^0,c
  4528   003E02                     
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  4531   003E02  0E00               	movlw	0
  4532   003E04  0102               	movlb	2	; () banked
  4533   003E06  6F4F               	movwf	(_dbuf+79)& (0+255),b
  4534                           
  4535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  4536   003E08  EF7C  F01F         	goto	l5098
  4537   003E0C                     l5088:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  4540   003E0C  063B               	decf	utoa@i^0,f,c
  4541   003E0E  A0D8               	btfss	status,0,c
  4542   003E10  063C               	decf	(utoa@i+1)^0,f,c
  4543   003E12                     
  4544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  4545   003E12  0E00               	movlw	low _dbuf
  4546   003E14  243B               	addwf	utoa@i^0,w,c
  4547   003E16  6ED9               	movwf	fsr2l,c
  4548   003E18  0E02               	movlw	high _dbuf
  4549   003E1A  203C               	addwfc	(utoa@i+1)^0,w,c
  4550   003E1C  6EDA               	movwf	fsr2h,c
  4551   003E1E  C033  F001         	movff	utoa@n,___lomod@dividend
  4552   003E22  C034  F002         	movff	utoa@n+1,___lomod@dividend+1
  4553   003E26  C035  F003         	movff	utoa@n+2,___lomod@dividend+2
  4554   003E2A  C036  F004         	movff	utoa@n+3,___lomod@dividend+3
  4555   003E2E  C037  F005         	movff	utoa@n+4,___lomod@dividend+4
  4556   003E32  C038  F006         	movff	utoa@n+5,___lomod@dividend+5
  4557   003E36  C039  F007         	movff	utoa@n+6,___lomod@dividend+6
  4558   003E3A  C03A  F008         	movff	utoa@n+7,___lomod@dividend+7
  4559   003E3E  0E0A               	movlw	10
  4560   003E40  6E09               	movwf	___lomod@divisor^0,c
  4561   003E42  0E00               	movlw	0
  4562   003E44  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4563   003E46  0E00               	movlw	0
  4564   003E48  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4565   003E4A  0E00               	movlw	0
  4566   003E4C  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4567   003E4E  0E00               	movlw	0
  4568   003E50  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4569   003E52  0E00               	movlw	0
  4570   003E54  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4571   003E56  0E00               	movlw	0
  4572   003E58  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4573   003E5A  0E00               	movlw	0
  4574   003E5C  6E10               	movwf	(___lomod@divisor+7)^0,c
  4575   003E5E  EC61  F026         	call	___lomod	;wreg free
  4576   003E62  C001  F027         	movff	?___lomod,??_utoa
  4577   003E66  C002  F028         	movff	?___lomod+1,??_utoa+1
  4578   003E6A  C003  F029         	movff	?___lomod+2,??_utoa+2
  4579   003E6E  C004  F02A         	movff	?___lomod+3,??_utoa+3
  4580   003E72  C005  F02B         	movff	?___lomod+4,??_utoa+4
  4581   003E76  C006  F02C         	movff	?___lomod+5,??_utoa+5
  4582   003E7A  C007  F02D         	movff	?___lomod+6,??_utoa+6
  4583   003E7E  C008  F02E         	movff	?___lomod+7,??_utoa+7
  4584   003E82  5027               	movf	??_utoa^0,w,c
  4585   003E84  0F30               	addlw	48
  4586   003E86  6EDF               	movwf	indf2,c
  4587   003E88                     
  4588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  4589   003E88  062F               	decf	utoa@p^0,f,c
  4590   003E8A  A0D8               	btfss	status,0,c
  4591   003E8C  0630               	decf	(utoa@p+1)^0,f,c
  4592   003E8E                     
  4593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  4594   003E8E  0631               	decf	utoa@w^0,f,c
  4595   003E90  A0D8               	btfss	status,0,c
  4596   003E92  0632               	decf	(utoa@w+1)^0,f,c
  4597   003E94                     
  4598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  4599   003E94  C033  F001         	movff	utoa@n,___lodiv@dividend
  4600   003E98  C034  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4601   003E9C  C035  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4602   003EA0  C036  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4603   003EA4  C037  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4604   003EA8  C038  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4605   003EAC  C039  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4606   003EB0  C03A  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4607   003EB4  0E0A               	movlw	10
  4608   003EB6  6E09               	movwf	___lodiv@divisor^0,c
  4609   003EB8  0E00               	movlw	0
  4610   003EBA  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4611   003EBC  0E00               	movlw	0
  4612   003EBE  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4613   003EC0  0E00               	movlw	0
  4614   003EC2  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4615   003EC4  0E00               	movlw	0
  4616   003EC6  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4617   003EC8  0E00               	movlw	0
  4618   003ECA  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4619   003ECC  0E00               	movlw	0
  4620   003ECE  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4621   003ED0  0E00               	movlw	0
  4622   003ED2  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4623   003ED4  EC80  F025         	call	___lodiv	;wreg free
  4624   003ED8  C001  F033         	movff	?___lodiv,utoa@n
  4625   003EDC  C002  F034         	movff	?___lodiv+1,utoa@n+1
  4626   003EE0  C003  F035         	movff	?___lodiv+2,utoa@n+2
  4627   003EE4  C004  F036         	movff	?___lodiv+3,utoa@n+3
  4628   003EE8  C005  F037         	movff	?___lodiv+4,utoa@n+4
  4629   003EEC  C006  F038         	movff	?___lodiv+5,utoa@n+5
  4630   003EF0  C007  F039         	movff	?___lodiv+6,utoa@n+6
  4631   003EF4  C008  F03A         	movff	?___lodiv+7,utoa@n+7
  4632   003EF8                     l5098:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  4635   003EF8  503B               	movf	utoa@i^0,w,c
  4636   003EFA  103C               	iorwf	(utoa@i+1)^0,w,c
  4637   003EFC  B4D8               	btfsc	status,2,c
  4638   003EFE  EF83  F01F         	goto	u4461
  4639   003F02  EF85  F01F         	goto	u4460
  4640   003F06                     u4461:
  4641   003F06  EFB6  F01F         	goto	l5108
  4642   003F0A                     u4460:
  4643   003F0A  5033               	movf	utoa@n^0,w,c
  4644   003F0C  1034               	iorwf	(utoa@n+1)^0,w,c
  4645   003F0E  1035               	iorwf	(utoa@n+2)^0,w,c
  4646   003F10  1036               	iorwf	(utoa@n+3)^0,w,c
  4647   003F12  1037               	iorwf	(utoa@n+4)^0,w,c
  4648   003F14  1038               	iorwf	(utoa@n+5)^0,w,c
  4649   003F16  1039               	iorwf	(utoa@n+6)^0,w,c
  4650   003F18  103A               	iorwf	(utoa@n+7)^0,w,c
  4651   003F1A  A4D8               	btfss	status,2,c
  4652   003F1C  EF92  F01F         	goto	u4471
  4653   003F20  EF94  F01F         	goto	u4470
  4654   003F24                     u4471:
  4655   003F24  EF06  F01F         	goto	l5088
  4656   003F28                     u4470:
  4657   003F28  BE30               	btfsc	(utoa@p+1)^0,7,c
  4658   003F2A  EFA1  F01F         	goto	u4480
  4659   003F2E  5030               	movf	(utoa@p+1)^0,w,c
  4660   003F30  E106               	bnz	u4481
  4661   003F32  042F               	decf	utoa@p^0,w,c
  4662   003F34  B0D8               	btfsc	status,0,c
  4663   003F36  EF9F  F01F         	goto	u4481
  4664   003F3A  EFA1  F01F         	goto	u4480
  4665   003F3E                     u4481:
  4666   003F3E  EF06  F01F         	goto	l5088
  4667   003F42                     u4480:
  4668   003F42  BE32               	btfsc	(utoa@w+1)^0,7,c
  4669   003F44  EFAC  F01F         	goto	u4491
  4670   003F48  5032               	movf	(utoa@w+1)^0,w,c
  4671   003F4A  E108               	bnz	u4490
  4672   003F4C  0431               	decf	utoa@w^0,w,c
  4673   003F4E  A0D8               	btfss	status,0,c
  4674   003F50  EFAC  F01F         	goto	u4491
  4675   003F54  EFAE  F01F         	goto	u4490
  4676   003F58                     u4491:
  4677   003F58  EFB6  F01F         	goto	l5108
  4678   003F5C                     u4490:
  4679   003F5C  0100               	movlb	0	; () banked
  4680   003F5E  B3F3               	btfsc	_flags& (0+255),1,b
  4681   003F60  EFB4  F01F         	goto	u4501
  4682   003F64  EFB6  F01F         	goto	u4500
  4683   003F68                     u4501:
  4684   003F68  EF06  F01F         	goto	l5088
  4685   003F6C                     u4500:
  4686   003F6C                     l5108:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4689   003F6C  C01D  F012         	movff	utoa@fp,pad@fp
  4690   003F70  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  4691   003F74  0E00               	movlw	low _dbuf
  4692   003F76  243B               	addwf	utoa@i^0,w,c
  4693   003F78  6E14               	movwf	pad@buf^0,c
  4694   003F7A  0E02               	movlw	high _dbuf
  4695   003F7C  203C               	addwfc	(utoa@i+1)^0,w,c
  4696   003F7E  6E15               	movwf	(pad@buf+1)^0,c
  4697   003F80  C031  F016         	movff	utoa@w,pad@p
  4698   003F84  C032  F017         	movff	utoa@w+1,pad@p+1
  4699   003F88  EC90  F027         	call	_pad	;wreg free
  4700   003F8C  0012               	return		;funcret
  4701   003F8E                     __end_of_utoa:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function ___lomod *****************
  4705 ;; Defined at:
  4706 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  dividend        8    0[COMRAM] unsigned long long 
  4709 ;;  divisor         8    8[COMRAM] unsigned long long 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  counter         1   16[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  8    0[COMRAM] unsigned long long 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:        16       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4724 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:       17 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 2
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_utoa
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text10
  4736   004CC2                     __ptext10:
  4737                           	callstack 0
  4738   004CC2                     ___lomod:
  4739                           	callstack 24
  4740   004CC2  5009               	movf	___lomod@divisor^0,w,c
  4741   004CC4  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4742   004CC6  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4743   004CC8  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4744   004CCA  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4745   004CCC  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4746   004CCE  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4747   004CD0  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4748   004CD2  B4D8               	btfsc	status,2,c
  4749   004CD4  EF6E  F026         	goto	u3781
  4750   004CD8  EF70  F026         	goto	u3780
  4751   004CDC                     u3781:
  4752   004CDC  EFB8  F026         	goto	l965
  4753   004CE0                     u3780:
  4754   004CE0  0E01               	movlw	1
  4755   004CE2  6E11               	movwf	___lomod@counter^0,c
  4756   004CE4  EF7E  F026         	goto	l4728
  4757   004CE8                     l4726:
  4758   004CE8  90D8               	bcf	status,0,c
  4759   004CEA  3609               	rlcf	___lomod@divisor^0,f,c
  4760   004CEC  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4761   004CEE  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4762   004CF0  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4763   004CF2  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4764   004CF4  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4765   004CF6  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4766   004CF8  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4767   004CFA  2A11               	incf	___lomod@counter^0,f,c
  4768   004CFC                     l4728:
  4769   004CFC  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4770   004CFE  EF83  F026         	goto	u3791
  4771   004D02  EF85  F026         	goto	u3790
  4772   004D06                     u3791:
  4773   004D06  EF74  F026         	goto	l4726
  4774   004D0A                     u3790:
  4775   004D0A                     l4730:
  4776   004D0A  5009               	movf	___lomod@divisor^0,w,c
  4777   004D0C  5C01               	subwf	___lomod@dividend^0,w,c
  4778   004D0E  500A               	movf	(___lomod@divisor+1)^0,w,c
  4779   004D10  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4780   004D12  500B               	movf	(___lomod@divisor+2)^0,w,c
  4781   004D14  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4782   004D16  500C               	movf	(___lomod@divisor+3)^0,w,c
  4783   004D18  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4784   004D1A  500D               	movf	(___lomod@divisor+4)^0,w,c
  4785   004D1C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4786   004D1E  500E               	movf	(___lomod@divisor+5)^0,w,c
  4787   004D20  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4788   004D22  500F               	movf	(___lomod@divisor+6)^0,w,c
  4789   004D24  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4790   004D26  5010               	movf	(___lomod@divisor+7)^0,w,c
  4791   004D28  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4792   004D2A  A0D8               	btfss	status,0,c
  4793   004D2C  EF9A  F026         	goto	u3801
  4794   004D30  EF9C  F026         	goto	u3800
  4795   004D34                     u3801:
  4796   004D34  EFAC  F026         	goto	l4734
  4797   004D38                     u3800:
  4798   004D38  5009               	movf	___lomod@divisor^0,w,c
  4799   004D3A  5E01               	subwf	___lomod@dividend^0,f,c
  4800   004D3C  500A               	movf	(___lomod@divisor+1)^0,w,c
  4801   004D3E  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4802   004D40  500B               	movf	(___lomod@divisor+2)^0,w,c
  4803   004D42  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4804   004D44  500C               	movf	(___lomod@divisor+3)^0,w,c
  4805   004D46  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4806   004D48  500D               	movf	(___lomod@divisor+4)^0,w,c
  4807   004D4A  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4808   004D4C  500E               	movf	(___lomod@divisor+5)^0,w,c
  4809   004D4E  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4810   004D50  500F               	movf	(___lomod@divisor+6)^0,w,c
  4811   004D52  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4812   004D54  5010               	movf	(___lomod@divisor+7)^0,w,c
  4813   004D56  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4814   004D58                     l4734:
  4815   004D58  90D8               	bcf	status,0,c
  4816   004D5A  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4817   004D5C  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4818   004D5E  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4819   004D60  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4820   004D62  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4821   004D64  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4822   004D66  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4823   004D68  3209               	rrcf	___lomod@divisor^0,f,c
  4824   004D6A  2E11               	decfsz	___lomod@counter^0,f,c
  4825   004D6C  EF85  F026         	goto	l4730
  4826   004D70                     l965:
  4827   004D70  C001  F001         	movff	___lomod@dividend,?___lomod
  4828   004D74  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4829   004D78  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4830   004D7C  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4831   004D80  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4832   004D84  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4833   004D88  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4834   004D8C  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4835   004D90  0012               	return		;funcret
  4836   004D92                     __end_of___lomod:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function ___lodiv *****************
  4840 ;; Defined at:
  4841 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  dividend        8    0[COMRAM] unsigned long long 
  4844 ;;  divisor         8    8[COMRAM] unsigned long long 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  quotient        8   16[COMRAM] unsigned long long 
  4847 ;;  counter         1   24[COMRAM] unsigned char 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  8    0[COMRAM] unsigned long long 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4857 ;;      Params:        16       0       0       0       0       0       0       0       0
  4858 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4860 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4861 ;;Total ram usage:       25 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 2
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_utoa
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text11
  4872   004B00                     __ptext11:
  4873                           	callstack 0
  4874   004B00                     ___lodiv:
  4875                           	callstack 24
  4876   004B00  EE20  F011         	lfsr	2,___lodiv@quotient
  4877   004B04  0E07               	movlw	7
  4878   004B06                     u3741:
  4879   004B06  6ADE               	clrf	postinc2,c
  4880   004B08  06E8               	decf	wreg,f,c
  4881   004B0A  E2FD               	bc	u3741
  4882   004B0C  5009               	movf	___lodiv@divisor^0,w,c
  4883   004B0E  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4884   004B10  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4885   004B12  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4886   004B14  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4887   004B16  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4888   004B18  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4889   004B1A  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4890   004B1C  B4D8               	btfsc	status,2,c
  4891   004B1E  EF93  F025         	goto	u3751
  4892   004B22  EF95  F025         	goto	u3750
  4893   004B26                     u3751:
  4894   004B26  EFE7  F025         	goto	l955
  4895   004B2A                     u3750:
  4896   004B2A  0E01               	movlw	1
  4897   004B2C  6E19               	movwf	___lodiv@counter^0,c
  4898   004B2E  EFA3  F025         	goto	l4708
  4899   004B32                     l4706:
  4900   004B32  90D8               	bcf	status,0,c
  4901   004B34  3609               	rlcf	___lodiv@divisor^0,f,c
  4902   004B36  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4903   004B38  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4904   004B3A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4905   004B3C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4906   004B3E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4907   004B40  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4908   004B42  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4909   004B44  2A19               	incf	___lodiv@counter^0,f,c
  4910   004B46                     l4708:
  4911   004B46  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4912   004B48  EFA8  F025         	goto	u3761
  4913   004B4C  EFAA  F025         	goto	u3760
  4914   004B50                     u3761:
  4915   004B50  EF99  F025         	goto	l4706
  4916   004B54                     u3760:
  4917   004B54                     l4710:
  4918   004B54  90D8               	bcf	status,0,c
  4919   004B56  3611               	rlcf	___lodiv@quotient^0,f,c
  4920   004B58  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4921   004B5A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4922   004B5C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4923   004B5E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4924   004B60  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4925   004B62  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4926   004B64  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4927   004B66  5009               	movf	___lodiv@divisor^0,w,c
  4928   004B68  5C01               	subwf	___lodiv@dividend^0,w,c
  4929   004B6A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4930   004B6C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4931   004B6E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4932   004B70  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4933   004B72  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4934   004B74  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4935   004B76  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4936   004B78  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4937   004B7A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4938   004B7C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4939   004B7E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4940   004B80  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4941   004B82  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4942   004B84  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4943   004B86  A0D8               	btfss	status,0,c
  4944   004B88  EFC8  F025         	goto	u3771
  4945   004B8C  EFCA  F025         	goto	u3770
  4946   004B90                     u3771:
  4947   004B90  EFDB  F025         	goto	l4718
  4948   004B94                     u3770:
  4949   004B94  5009               	movf	___lodiv@divisor^0,w,c
  4950   004B96  5E01               	subwf	___lodiv@dividend^0,f,c
  4951   004B98  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4952   004B9A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4953   004B9C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4954   004B9E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4955   004BA0  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4956   004BA2  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4957   004BA4  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4958   004BA6  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4959   004BA8  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4960   004BAA  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4961   004BAC  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4962   004BAE  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4963   004BB0  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4964   004BB2  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4965   004BB4  8011               	bsf	___lodiv@quotient^0,0,c
  4966   004BB6                     l4718:
  4967   004BB6  90D8               	bcf	status,0,c
  4968   004BB8  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4969   004BBA  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4970   004BBC  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4971   004BBE  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4972   004BC0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4973   004BC2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4974   004BC4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4975   004BC6  3209               	rrcf	___lodiv@divisor^0,f,c
  4976   004BC8  2E19               	decfsz	___lodiv@counter^0,f,c
  4977   004BCA  EFAA  F025         	goto	l4710
  4978   004BCE                     l955:
  4979   004BCE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4980   004BD2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4981   004BD6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4982   004BDA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4983   004BDE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4984   004BE2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4985   004BE6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4986   004BEA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4987   004BEE  0012               	return		;funcret
  4988   004BF0                     __end_of___lodiv:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _efgtoa *****************
  4992 ;; Defined at:
  4993 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  4996 ;;		 -> sprintf@f(11), 
  4997 ;;  f               4   12[BANK0 ] PTR struct _IO_FILE
  4998 ;;  c               1   16[BANK0 ] unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  u               4   57[BANK0 ] struct flui
  5001 ;;  g               4   51[BANK0 ] struct flui
  5002 ;;  l               4   44[BANK0 ] struct flui
  5003 ;;  h               4   40[BANK0 ] struct flui
  5004 ;;  ou              4   36[BANK0 ] struct flui
  5005 ;;  n               2   55[BANK0 ] int 
  5006 ;;  i               2   48[BANK0 ] int 
  5007 ;;  w               2   34[BANK0 ] int 
  5008 ;;  e               2   32[BANK0 ] int 
  5009 ;;  m               2   30[BANK0 ] int 
  5010 ;;  d               2   28[BANK0 ] int 
  5011 ;;  t               2   21[BANK0 ] int 
  5012 ;;  p               2   19[BANK0 ] int 
  5013 ;;  ne              2   17[BANK0 ] int 
  5014 ;;  sign            1   50[BANK0 ] unsigned char 
  5015 ;;  nmode           1   27[BANK0 ] unsigned char 
  5016 ;;  mode            1   26[BANK0 ] unsigned char 
  5017 ;;  pp              1   25[BANK0 ] unsigned char 
  5018 ;;  esign           1    0        unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5028 ;;      Params:         0       7       0       0       0       0       0       0       0
  5029 ;;      Locals:         0      44       0       0       0       0       0       0       0
  5030 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5031 ;;      Totals:         2      51       0       0       0       0       0       0       0
  5032 ;;Total ram usage:       53 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 6
  5035 ;; This function calls:
  5036 ;;		___fladd
  5037 ;;		___fldiv
  5038 ;;		___fleq
  5039 ;;		___flge
  5040 ;;		___flmul
  5041 ;;		___flneg
  5042 ;;		___flsub
  5043 ;;		___fltol
  5044 ;;		___fpclassifyf
  5045 ;;		_floorf
  5046 ;;		_labs
  5047 ;;		_memcpy
  5048 ;;		_pad
  5049 ;;		_strcpy
  5050 ;; This function is called by:
  5051 ;;		_vfpfcnvrt
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text12
  5056   001606                     __ptext12:
  5057                           	callstack 0
  5058   001606                     _efgtoa:
  5059                           	callstack 21
  5060   001606                     
  5061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  5062   001606  0E00               	movlw	0
  5063   001608  0100               	movlb	0	; () banked
  5064   00160A  6F92               	movwf	efgtoa@sign& (0+255),b
  5065   00160C                     
  5066                           ; BSR set to: 0
  5067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  5068   00160C  C06C  F093         	movff	efgtoa@f,efgtoa@g
  5069   001610  C06D  F094         	movff	efgtoa@f+1,efgtoa@g+1
  5070   001614  C06E  F095         	movff	efgtoa@f+2,efgtoa@g+2
  5071   001618  C06F  F096         	movff	efgtoa@f+3,efgtoa@g+3
  5072   00161C                     
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  5075   00161C  BF96               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5076   00161E  EF15  F00B         	goto	u4090
  5077   001622  EF13  F00B         	goto	u4091
  5078   001626                     u4091:
  5079   001626  EF29  F00B         	goto	l4852
  5080   00162A                     u4090:
  5081   00162A                     
  5082                           ; BSR set to: 0
  5083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  5084   00162A  0E01               	movlw	1
  5085   00162C  6F92               	movwf	efgtoa@sign& (0+255),b
  5086   00162E                     
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  5089   00162E  C093  F001         	movff	efgtoa@g,___flneg@f1
  5090   001632  C094  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5091   001636  C095  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5092   00163A  C096  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5093   00163E  ECD9  F02F         	call	___flneg	;wreg free
  5094   001642  C001  F093         	movff	?___flneg,efgtoa@g
  5095   001646  C002  F094         	movff	?___flneg+1,efgtoa@g+1
  5096   00164A  C003  F095         	movff	?___flneg+2,efgtoa@g+2
  5097   00164E  C004  F096         	movff	?___flneg+3,efgtoa@g+3
  5098   001652                     l4852:
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  5101   001652  0E00               	movlw	0
  5102   001654  0100               	movlb	0	; () banked
  5103   001656  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  5104   001658  0E00               	movlw	0
  5105   00165A  6F97               	movwf	efgtoa@n& (0+255),b
  5106   00165C                     
  5107                           ; BSR set to: 0
  5108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  5109   00165C  C0EB  F082         	movff	_width,efgtoa@w
  5110   001660  C0EC  F083         	movff	_width+1,efgtoa@w+1
  5111   001664                     
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  5114   001664  5192               	movf	efgtoa@sign& (0+255),w,b
  5115   001666  B4D8               	btfsc	status,2,c
  5116   001668  EF38  F00B         	goto	u4101
  5117   00166C  EF3A  F00B         	goto	u4100
  5118   001670                     u4101:
  5119   001670  EF4E  F00B         	goto	l4866
  5120   001674                     u4100:
  5121   001674                     
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  5124   001674  5192               	movf	efgtoa@sign& (0+255),w,b
  5125   001676  A4D8               	btfss	status,2,c
  5126   001678  EF40  F00B         	goto	u4111
  5127   00167C  EF42  F00B         	goto	u4110
  5128   001680                     u4111:
  5129   001680  EF48  F00B         	goto	l4862
  5130   001684                     u4110:
  5131   001684                     
  5132                           ; BSR set to: 0
  5133   001684  0E00               	movlw	0
  5134   001686  6F78               	movwf	(_efgtoa$1928+1)& (0+255),b
  5135   001688  0E2B               	movlw	43
  5136   00168A  6F77               	movwf	_efgtoa$1928& (0+255),b
  5137   00168C  EF4C  F00B         	goto	l4864
  5138   001690                     l4862:
  5139                           
  5140                           ; BSR set to: 0
  5141   001690  0E00               	movlw	0
  5142   001692  6F78               	movwf	(_efgtoa$1928+1)& (0+255),b
  5143   001694  0E2D               	movlw	45
  5144   001696  6F77               	movwf	_efgtoa$1928& (0+255),b
  5145   001698                     l4864:
  5146                           
  5147                           ; BSR set to: 0
  5148   001698  C077  F092         	movff	_efgtoa$1928,efgtoa@sign
  5149   00169C                     l4866:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  5153   00169C  C093  F001         	movff	efgtoa@g,___fpclassifyf@x
  5154   0016A0  C094  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5155   0016A4  C095  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5156   0016A8  C096  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5157   0016AC  EC01  F025         	call	___fpclassifyf	;wreg free
  5158   0016B0  0401               	decf	?___fpclassifyf^0,w,c
  5159   0016B2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5160   0016B4  A4D8               	btfss	status,2,c
  5161   0016B6  EF5F  F00B         	goto	u4121
  5162   0016BA  EF61  F00B         	goto	u4120
  5163   0016BE                     u4121:
  5164   0016BE  EF94  F00B         	goto	l4884
  5165   0016C2                     u4120:
  5166   0016C2                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  5168   0016C2  0100               	movlb	0	; () banked
  5169   0016C4  5192               	movf	efgtoa@sign& (0+255),w,b
  5170   0016C6  B4D8               	btfsc	status,2,c
  5171   0016C8  EF68  F00B         	goto	u4131
  5172   0016CC  EF6A  F00B         	goto	u4130
  5173   0016D0                     u4131:
  5174   0016D0  EF73  F00B         	goto	l4876
  5175   0016D4                     u4130:
  5176   0016D4                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  5179   0016D4  C092  F200         	movff	efgtoa@sign,_dbuf
  5180   0016D8                     
  5181                           ; BSR set to: 0
  5182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  5183   0016D8  0782               	decf	efgtoa@w& (0+255),f,b
  5184   0016DA  A0D8               	btfss	status,0,c
  5185   0016DC  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  5186   0016DE                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  5189   0016DE  0E00               	movlw	0
  5190   0016E0  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  5191   0016E2  0E01               	movlw	1
  5192   0016E4  6F97               	movwf	efgtoa@n& (0+255),b
  5193   0016E6                     l4876:
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  5197   0016E6  0E00               	movlw	low _dbuf
  5198   0016E8  2597               	addwf	efgtoa@n& (0+255),w,b
  5199   0016EA  6E01               	movwf	strcpy@dest^0,c
  5200   0016EC  0E02               	movlw	high _dbuf
  5201   0016EE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5202   0016F0  6E02               	movwf	(strcpy@dest+1)^0,c
  5203   0016F2  0EF7               	movlw	low STR_20
  5204   0016F4  6E03               	movwf	strcpy@src^0,c
  5205   0016F6  0E7F               	movlw	high STR_20
  5206   0016F8  6E04               	movwf	(strcpy@src+1)^0,c
  5207   0016FA  EC9A  F02F         	call	_strcpy	;wreg free
  5208   0016FE                     l4878:
  5209                           
  5210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5211   0016FE  0100               	movlb	0	; () banked
  5212   001700  0EFD               	movlw	253
  5213   001702  2782               	addwf	efgtoa@w& (0+255),f,b
  5214   001704  0EFF               	movlw	255
  5215   001706  2383               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5216   001708                     
  5217                           ; BSR set to: 0
  5218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5219   001708  C06A  F012         	movff	efgtoa@fp,pad@fp
  5220   00170C  C06B  F013         	movff	efgtoa@fp+1,pad@fp+1
  5221   001710  0E00               	movlw	low _dbuf
  5222   001712  6E14               	movwf	pad@buf^0,c
  5223   001714  0E02               	movlw	high _dbuf
  5224   001716  6E15               	movwf	(pad@buf+1)^0,c
  5225   001718  C082  F016         	movff	efgtoa@w,pad@p
  5226   00171C  C083  F017         	movff	efgtoa@w+1,pad@p+1
  5227   001720  EC90  F027         	call	_pad	;wreg free
  5228   001724  EF34  F010         	goto	l1285
  5229   001728                     l4884:
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5232   001728  C093  F001         	movff	efgtoa@g,___fpclassifyf@x
  5233   00172C  C094  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5234   001730  C095  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5235   001734  C096  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5236   001738  EC01  F025         	call	___fpclassifyf	;wreg free
  5237   00173C  5001               	movf	?___fpclassifyf^0,w,c
  5238   00173E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5239   001740  A4D8               	btfss	status,2,c
  5240   001742  EFA5  F00B         	goto	u4141
  5241   001746  EFA7  F00B         	goto	u4140
  5242   00174A                     u4141:
  5243   00174A  EFC7  F00B         	goto	l4902
  5244   00174E                     u4140:
  5245   00174E                     
  5246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  5247   00174E  0100               	movlb	0	; () banked
  5248   001750  5192               	movf	efgtoa@sign& (0+255),w,b
  5249   001752  B4D8               	btfsc	status,2,c
  5250   001754  EFAE  F00B         	goto	u4151
  5251   001758  EFB0  F00B         	goto	u4150
  5252   00175C                     u4151:
  5253   00175C  EFB9  F00B         	goto	l4894
  5254   001760                     u4150:
  5255   001760                     
  5256                           ; BSR set to: 0
  5257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  5258   001760  C092  F200         	movff	efgtoa@sign,_dbuf
  5259   001764                     
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  5262   001764  0782               	decf	efgtoa@w& (0+255),f,b
  5263   001766  A0D8               	btfss	status,0,c
  5264   001768  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  5265   00176A                     
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  5268   00176A  0E00               	movlw	0
  5269   00176C  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  5270   00176E  0E01               	movlw	1
  5271   001770  6F97               	movwf	efgtoa@n& (0+255),b
  5272   001772                     l4894:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  5276   001772  0E00               	movlw	low _dbuf
  5277   001774  2597               	addwf	efgtoa@n& (0+255),w,b
  5278   001776  6E01               	movwf	strcpy@dest^0,c
  5279   001778  0E02               	movlw	high _dbuf
  5280   00177A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5281   00177C  6E02               	movwf	(strcpy@dest+1)^0,c
  5282   00177E  0EFB               	movlw	low STR_23
  5283   001780  6E03               	movwf	strcpy@src^0,c
  5284   001782  0E7F               	movlw	high STR_23
  5285   001784  6E04               	movwf	(strcpy@src+1)^0,c
  5286   001786  EC9A  F02F         	call	_strcpy	;wreg free
  5287   00178A  EF7F  F00B         	goto	l4878
  5288   00178E                     l4902:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  5291   00178E  0E00               	movlw	0
  5292   001790  0100               	movlb	0	; () banked
  5293   001792  6F99               	movwf	efgtoa@u& (0+255),b
  5294   001794  0E00               	movlw	0
  5295   001796  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  5296   001798  0E80               	movlw	128
  5297   00179A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  5298   00179C  0E3F               	movlw	63
  5299   00179E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  5302   0017A0  0E00               	movlw	0
  5303   0017A2  6F81               	movwf	(efgtoa@e+1)& (0+255),b
  5304   0017A4  0E00               	movlw	0
  5305   0017A6  6F80               	movwf	efgtoa@e& (0+255),b
  5306   0017A8                     
  5307                           ; BSR set to: 0
  5308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  5309   0017A8  C093  F001         	movff	efgtoa@g,___fleq@ff1
  5310   0017AC  C094  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5311   0017B0  C095  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5312   0017B4  C096  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5313   0017B8  0E00               	movlw	0
  5314   0017BA  6E05               	movwf	___fleq@ff2^0,c
  5315   0017BC  0E00               	movlw	0
  5316   0017BE  6E06               	movwf	(___fleq@ff2+1)^0,c
  5317   0017C0  0E00               	movlw	0
  5318   0017C2  6E07               	movwf	(___fleq@ff2+2)^0,c
  5319   0017C4  0E00               	movlw	0
  5320   0017C6  6E08               	movwf	(___fleq@ff2+3)^0,c
  5321   0017C8  ECE7  F027         	call	___fleq	;wreg free
  5322   0017CC  B0D8               	btfsc	status,0,c
  5323   0017CE  EFEB  F00B         	goto	u4161
  5324   0017D2  EFED  F00B         	goto	u4160
  5325   0017D6                     u4161:
  5326   0017D6  EFCC  F00C         	goto	l1288
  5327   0017DA                     u4160:
  5328   0017DA  EFFA  F00B         	goto	l4910
  5329   0017DE                     l1290:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  5332   0017DE  C084  F099         	movff	efgtoa@ou,efgtoa@u
  5333   0017E2  C085  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  5334   0017E6  C086  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  5335   0017EA  C087  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  5336   0017EE                     
  5337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  5338   0017EE  0100               	movlb	0	; () banked
  5339   0017F0  4B80               	infsnz	efgtoa@e& (0+255),f,b
  5340   0017F2  2B81               	incf	(efgtoa@e+1)& (0+255),f,b
  5341   0017F4                     l4910:
  5342                           
  5343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5344   0017F4  C099  F005         	movff	efgtoa@u,___flmul@b
  5345   0017F8  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  5346   0017FC  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  5347   001800  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  5348   001804  0E00               	movlw	0
  5349   001806  6E09               	movwf	___flmul@a^0,c
  5350   001808  0E00               	movlw	0
  5351   00180A  6E0A               	movwf	(___flmul@a+1)^0,c
  5352   00180C  0E20               	movlw	32
  5353   00180E  6E0B               	movwf	(___flmul@a+2)^0,c
  5354   001810  0E41               	movlw	65
  5355   001812  6E0C               	movwf	(___flmul@a+3)^0,c
  5356   001814  ECBC  F018         	call	___flmul	;wreg free
  5357   001818  C005  F084         	movff	?___flmul,efgtoa@ou
  5358   00181C  C006  F085         	movff	?___flmul+1,efgtoa@ou+1
  5359   001820  C007  F086         	movff	?___flmul+2,efgtoa@ou+2
  5360   001824  C008  F087         	movff	?___flmul+3,efgtoa@ou+3
  5361   001828  0100               	movlb	0	; () banked
  5362   00182A  5184               	movf	efgtoa@ou& (0+255),w,b
  5363   00182C  5D93               	subwf	efgtoa@g& (0+255),w,b
  5364   00182E  6E01               	movwf	labs@a^0,c
  5365   001830  5185               	movf	(efgtoa@ou+1)& (0+255),w,b
  5366   001832  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5367   001834  6E02               	movwf	(labs@a+1)^0,c
  5368   001836  5186               	movf	(efgtoa@ou+2)& (0+255),w,b
  5369   001838  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5370   00183A  6E03               	movwf	(labs@a+2)^0,c
  5371   00183C  5187               	movf	(efgtoa@ou+3)& (0+255),w,b
  5372   00183E  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5373   001840  6E04               	movwf	(labs@a+3)^0,c
  5374   001842  EC47  F02D         	call	_labs	;wreg free
  5375   001846  BE04               	btfsc	(?_labs+3)^0,7,c
  5376   001848  EF31  F00C         	goto	u4171
  5377   00184C  5004               	movf	(?_labs+3)^0,w,c
  5378   00184E  1003               	iorwf	(?_labs+2)^0,w,c
  5379   001850  1002               	iorwf	(?_labs+1)^0,w,c
  5380   001852  E109               	bnz	u4170
  5381   001854  0E02               	movlw	2
  5382   001856  5C01               	subwf	?_labs^0,w,c
  5383   001858  A0D8               	btfss	status,0,c
  5384   00185A  EF31  F00C         	goto	u4171
  5385   00185E  EF33  F00C         	goto	u4170
  5386   001862                     u4171:
  5387   001862  EFEF  F00B         	goto	l1290
  5388   001866                     u4170:
  5389   001866  C084  F01E         	movff	efgtoa@ou,___flge@ff1
  5390   00186A  C085  F01F         	movff	efgtoa@ou+1,___flge@ff1+1
  5391   00186E  C086  F020         	movff	efgtoa@ou+2,___flge@ff1+2
  5392   001872  C087  F021         	movff	efgtoa@ou+3,___flge@ff1+3
  5393   001876  C093  F022         	movff	efgtoa@g,___flge@ff2
  5394   00187A  C094  F023         	movff	efgtoa@g+1,___flge@ff2+1
  5395   00187E  C095  F024         	movff	efgtoa@g+2,___flge@ff2+2
  5396   001882  C096  F025         	movff	efgtoa@g+3,___flge@ff2+3
  5397   001886  EC7F  F024         	call	___flge	;wreg free
  5398   00188A  A0D8               	btfss	status,0,c
  5399   00188C  EF4A  F00C         	goto	u4181
  5400   001890  EF4C  F00C         	goto	u4180
  5401   001894                     u4181:
  5402   001894  EFEF  F00B         	goto	l1290
  5403   001898                     u4180:
  5404   001898                     
  5405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5406   001898  0100               	movlb	0	; () banked
  5407   00189A  5199               	movf	efgtoa@u& (0+255),w,b
  5408   00189C  5D93               	subwf	efgtoa@g& (0+255),w,b
  5409   00189E  6E01               	movwf	labs@a^0,c
  5410   0018A0  519A               	movf	(efgtoa@u+1)& (0+255),w,b
  5411   0018A2  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5412   0018A4  6E02               	movwf	(labs@a+1)^0,c
  5413   0018A6  519B               	movf	(efgtoa@u+2)& (0+255),w,b
  5414   0018A8  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5415   0018AA  6E03               	movwf	(labs@a+2)^0,c
  5416   0018AC  519C               	movf	(efgtoa@u+3)& (0+255),w,b
  5417   0018AE  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5418   0018B0  6E04               	movwf	(labs@a+3)^0,c
  5419   0018B2  EC47  F02D         	call	_labs	;wreg free
  5420   0018B6  BE04               	btfsc	(?_labs+3)^0,7,c
  5421   0018B8  EF6B  F00C         	goto	u4190
  5422   0018BC  5004               	movf	(?_labs+3)^0,w,c
  5423   0018BE  1003               	iorwf	(?_labs+2)^0,w,c
  5424   0018C0  1002               	iorwf	(?_labs+1)^0,w,c
  5425   0018C2  E107               	bnz	u4191
  5426   0018C4  0E02               	movlw	2
  5427   0018C6  5C01               	subwf	?_labs^0,w,c
  5428   0018C8  B0D8               	btfsc	status,0,c
  5429   0018CA  EF69  F00C         	goto	u4191
  5430   0018CE  EF6B  F00C         	goto	u4190
  5431   0018D2                     u4191:
  5432   0018D2  EFB3  F00C         	goto	l4928
  5433   0018D6                     u4190:
  5434   0018D6                     l4918:
  5435                           
  5436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  5437   0018D6  C099  F093         	movff	efgtoa@u,efgtoa@g
  5438   0018DA  C09A  F094         	movff	efgtoa@u+1,efgtoa@g+1
  5439   0018DE  C09B  F095         	movff	efgtoa@u+2,efgtoa@g+2
  5440   0018E2  C09C  F096         	movff	efgtoa@u+3,efgtoa@g+3
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  5443   0018E6  EFCC  F00C         	goto	l1288
  5444   0018EA                     l4920:
  5445                           
  5446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  5447   0018EA  C099  F036         	movff	efgtoa@u,___fldiv@b
  5448   0018EE  C09A  F037         	movff	efgtoa@u+1,___fldiv@b+1
  5449   0018F2  C09B  F038         	movff	efgtoa@u+2,___fldiv@b+2
  5450   0018F6  C09C  F039         	movff	efgtoa@u+3,___fldiv@b+3
  5451   0018FA  0E00               	movlw	0
  5452   0018FC  6E3A               	movwf	___fldiv@a^0,c
  5453   0018FE  0E00               	movlw	0
  5454   001900  6E3B               	movwf	(___fldiv@a+1)^0,c
  5455   001902  0E20               	movlw	32
  5456   001904  6E3C               	movwf	(___fldiv@a+2)^0,c
  5457   001906  0E41               	movlw	65
  5458   001908  6E3D               	movwf	(___fldiv@a+3)^0,c
  5459   00190A  ECD1  F01A         	call	___fldiv	;wreg free
  5460   00190E  C036  F099         	movff	?___fldiv,efgtoa@u
  5461   001912  C037  F09A         	movff	?___fldiv+1,efgtoa@u+1
  5462   001916  C038  F09B         	movff	?___fldiv+2,efgtoa@u+2
  5463   00191A  C039  F09C         	movff	?___fldiv+3,efgtoa@u+3
  5464   00191E                     
  5465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  5466   00191E  0100               	movlb	0	; () banked
  5467   001920  0780               	decf	efgtoa@e& (0+255),f,b
  5468   001922  A0D8               	btfss	status,0,c
  5469   001924  0781               	decf	(efgtoa@e+1)& (0+255),f,b
  5470   001926                     
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5473   001926  5199               	movf	efgtoa@u& (0+255),w,b
  5474   001928  5D93               	subwf	efgtoa@g& (0+255),w,b
  5475   00192A  6E01               	movwf	labs@a^0,c
  5476   00192C  519A               	movf	(efgtoa@u+1)& (0+255),w,b
  5477   00192E  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5478   001930  6E02               	movwf	(labs@a+1)^0,c
  5479   001932  519B               	movf	(efgtoa@u+2)& (0+255),w,b
  5480   001934  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5481   001936  6E03               	movwf	(labs@a+2)^0,c
  5482   001938  519C               	movf	(efgtoa@u+3)& (0+255),w,b
  5483   00193A  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5484   00193C  6E04               	movwf	(labs@a+3)^0,c
  5485   00193E  EC47  F02D         	call	_labs	;wreg free
  5486   001942  BE04               	btfsc	(?_labs+3)^0,7,c
  5487   001944  EFB1  F00C         	goto	u4200
  5488   001948  5004               	movf	(?_labs+3)^0,w,c
  5489   00194A  1003               	iorwf	(?_labs+2)^0,w,c
  5490   00194C  1002               	iorwf	(?_labs+1)^0,w,c
  5491   00194E  E107               	bnz	u4201
  5492   001950  0E02               	movlw	2
  5493   001952  5C01               	subwf	?_labs^0,w,c
  5494   001954  B0D8               	btfsc	status,0,c
  5495   001956  EFAF  F00C         	goto	u4201
  5496   00195A  EFB1  F00C         	goto	u4200
  5497   00195E                     u4201:
  5498   00195E  EFB3  F00C         	goto	l4928
  5499   001962                     u4200:
  5500   001962  EF6B  F00C         	goto	l4918
  5501   001966                     l4928:
  5502                           
  5503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  5504   001966  C093  F01E         	movff	efgtoa@g,___flge@ff1
  5505   00196A  C094  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  5506   00196E  C095  F020         	movff	efgtoa@g+2,___flge@ff1+2
  5507   001972  C096  F021         	movff	efgtoa@g+3,___flge@ff1+3
  5508   001976  C099  F022         	movff	efgtoa@u,___flge@ff2
  5509   00197A  C09A  F023         	movff	efgtoa@u+1,___flge@ff2+1
  5510   00197E  C09B  F024         	movff	efgtoa@u+2,___flge@ff2+2
  5511   001982  C09C  F025         	movff	efgtoa@u+3,___flge@ff2+3
  5512   001986  EC7F  F024         	call	___flge	;wreg free
  5513   00198A  A0D8               	btfss	status,0,c
  5514   00198C  EFCA  F00C         	goto	u4211
  5515   001990  EFCC  F00C         	goto	u4210
  5516   001994                     u4211:
  5517   001994  EF75  F00C         	goto	l4920
  5518   001998                     u4210:
  5519   001998                     l1288:
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  5522   001998  C070  F07A         	movff	efgtoa@c,efgtoa@mode
  5523                           
  5524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  5525   00199C  C07A  F07B         	movff	efgtoa@mode,efgtoa@nmode
  5526   0019A0                     
  5527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  5528   0019A0  0100               	movlb	0	; () banked
  5529   0019A2  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  5530   0019A4  EFD6  F00C         	goto	u4221
  5531   0019A8  EFD8  F00C         	goto	u4220
  5532   0019AC                     u4221:
  5533   0019AC  EFDE  F00C         	goto	l4934
  5534   0019B0                     u4220:
  5535   0019B0                     
  5536                           ; BSR set to: 0
  5537   0019B0  C0ED  F073         	movff	_prec,efgtoa@p
  5538   0019B4  C0EE  F074         	movff	_prec+1,efgtoa@p+1
  5539   0019B8  EFE2  F00C         	goto	l4936
  5540   0019BC                     l4934:
  5541                           
  5542                           ; BSR set to: 0
  5543   0019BC  0E00               	movlw	0
  5544   0019BE  6F74               	movwf	(efgtoa@p+1)& (0+255),b
  5545   0019C0  0E06               	movlw	6
  5546   0019C2  6F73               	movwf	efgtoa@p& (0+255),b
  5547   0019C4                     l4936:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  5551   0019C4  C073  F07E         	movff	efgtoa@p,efgtoa@m
  5552   0019C8  C074  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  5553   0019CC                     
  5554                           ; BSR set to: 0
  5555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  5556   0019CC  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  5557   0019CE  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  5558   0019D0                     
  5559                           ; BSR set to: 0
  5560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  5561   0019D0  0E66               	movlw	102
  5562   0019D2  197B               	xorwf	efgtoa@nmode& (0+255),w,b
  5563   0019D4  A4D8               	btfss	status,2,c
  5564   0019D6  EFEF  F00C         	goto	u4231
  5565   0019DA  EFF1  F00C         	goto	u4230
  5566   0019DE                     u4231:
  5567   0019DE  EF11  F00D         	goto	l4950
  5568   0019E2                     u4230:
  5569   0019E2                     
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  5572   0019E2  BF81               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5573   0019E4  EFF8  F00C         	goto	u4240
  5574   0019E8  EFF6  F00C         	goto	u4241
  5575   0019EC                     u4241:
  5576   0019EC  EF04  F00D         	goto	l4946
  5577   0019F0                     u4240:
  5578   0019F0                     
  5579                           ; BSR set to: 0
  5580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  5581   0019F0  0E00               	movlw	0
  5582   0019F2  6F99               	movwf	efgtoa@u& (0+255),b
  5583   0019F4  0E00               	movlw	0
  5584   0019F6  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  5585   0019F8  0E80               	movlw	128
  5586   0019FA  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  5587   0019FC  0E3F               	movlw	63
  5588   0019FE  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  5591   001A00  0E00               	movlw	0
  5592   001A02  6F81               	movwf	(efgtoa@e+1)& (0+255),b
  5593   001A04  0E00               	movlw	0
  5594   001A06  6F80               	movwf	efgtoa@e& (0+255),b
  5595   001A08                     l4946:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  5599   001A08  0E67               	movlw	103
  5600   001A0A  197A               	xorwf	efgtoa@mode& (0+255),w,b
  5601   001A0C  B4D8               	btfsc	status,2,c
  5602   001A0E  EF0B  F00D         	goto	u4251
  5603   001A12  EF0D  F00D         	goto	u4250
  5604   001A16                     u4251:
  5605   001A16  EF11  F00D         	goto	l4950
  5606   001A1A                     u4250:
  5607   001A1A                     
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  5610   001A1A  5180               	movf	efgtoa@e& (0+255),w,b
  5611   001A1C  277E               	addwf	efgtoa@m& (0+255),f,b
  5612   001A1E  5181               	movf	(efgtoa@e+1)& (0+255),w,b
  5613   001A20  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5614   001A22                     l4950:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  5618   001A22  0E00               	movlw	0
  5619   001A24  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  5620   001A26  0E00               	movlw	0
  5621   001A28  6F90               	movwf	efgtoa@i& (0+255),b
  5622   001A2A                     
  5623                           ; BSR set to: 0
  5624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  5625   001A2A  C093  F088         	movff	efgtoa@g,efgtoa@h
  5626   001A2E  C094  F089         	movff	efgtoa@g+1,efgtoa@h+1
  5627   001A32  C095  F08A         	movff	efgtoa@g+2,efgtoa@h+2
  5628   001A36  C096  F08B         	movff	efgtoa@g+3,efgtoa@h+3
  5629   001A3A                     
  5630                           ; BSR set to: 0
  5631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  5632   001A3A  C099  F084         	movff	efgtoa@u,efgtoa@ou
  5633   001A3E  C09A  F085         	movff	efgtoa@u+1,efgtoa@ou+1
  5634   001A42  C09B  F086         	movff	efgtoa@u+2,efgtoa@ou+2
  5635   001A46  C09C  F087         	movff	efgtoa@u+3,efgtoa@ou+3
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5638   001A4A  EFA2  F00D         	goto	l4964
  5639   001A4E                     l4956:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  5643   001A4E  C088  F036         	movff	efgtoa@h,___fldiv@b
  5644   001A52  C089  F037         	movff	efgtoa@h+1,___fldiv@b+1
  5645   001A56  C08A  F038         	movff	efgtoa@h+2,___fldiv@b+2
  5646   001A5A  C08B  F039         	movff	efgtoa@h+3,___fldiv@b+3
  5647   001A5E  C099  F03A         	movff	efgtoa@u,___fldiv@a
  5648   001A62  C09A  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  5649   001A66  C09B  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  5650   001A6A  C09C  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  5651   001A6E  ECD1  F01A         	call	___fldiv	;wreg free
  5652   001A72  C036  F04F         	movff	?___fldiv,floorf@x
  5653   001A76  C037  F050         	movff	?___fldiv+1,floorf@x+1
  5654   001A7A  C038  F051         	movff	?___fldiv+2,floorf@x+2
  5655   001A7E  C039  F052         	movff	?___fldiv+3,floorf@x+3
  5656   001A82  ECBE  F01D         	call	_floorf	;wreg free
  5657   001A86  C04F  F08C         	movff	?_floorf,efgtoa@l
  5658   001A8A  C050  F08D         	movff	?_floorf+1,efgtoa@l+1
  5659   001A8E  C051  F08E         	movff	?_floorf+2,efgtoa@l+2
  5660   001A92  C052  F08F         	movff	?_floorf+3,efgtoa@l+3
  5661                           
  5662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  5663   001A96  C08C  F001         	movff	efgtoa@l,___fltol@f1
  5664   001A9A  C08D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5665   001A9E  C08E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5666   001AA2  C08F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5667   001AA6  ECFC  F023         	call	___fltol	;wreg free
  5668   001AAA  C001  F07C         	movff	?___fltol,efgtoa@d
  5669   001AAE  C002  F07D         	movff	?___fltol+1,efgtoa@d+1
  5670   001AB2                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  5672   001AB2  C088  F02E         	movff	efgtoa@h,___flsub@b
  5673   001AB6  C089  F02F         	movff	efgtoa@h+1,___flsub@b+1
  5674   001ABA  C08A  F030         	movff	efgtoa@h+2,___flsub@b+2
  5675   001ABE  C08B  F031         	movff	efgtoa@h+3,___flsub@b+3
  5676   001AC2  C08C  F009         	movff	efgtoa@l,___flmul@a
  5677   001AC6  C08D  F00A         	movff	efgtoa@l+1,___flmul@a+1
  5678   001ACA  C08E  F00B         	movff	efgtoa@l+2,___flmul@a+2
  5679   001ACE  C08F  F00C         	movff	efgtoa@l+3,___flmul@a+3
  5680   001AD2  C099  F005         	movff	efgtoa@u,___flmul@b
  5681   001AD6  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  5682   001ADA  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  5683   001ADE  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  5684   001AE2  ECBC  F018         	call	___flmul	;wreg free
  5685   001AE6  C005  F032         	movff	?___flmul,___flsub@a
  5686   001AEA  C006  F033         	movff	?___flmul+1,___flsub@a+1
  5687   001AEE  C007  F034         	movff	?___flmul+2,___flsub@a+2
  5688   001AF2  C008  F035         	movff	?___flmul+3,___flsub@a+3
  5689   001AF6  EC55  F02F         	call	___flsub	;wreg free
  5690   001AFA  C02E  F088         	movff	?___flsub,efgtoa@h
  5691   001AFE  C02F  F089         	movff	?___flsub+1,efgtoa@h+1
  5692   001B02  C030  F08A         	movff	?___flsub+2,efgtoa@h+2
  5693   001B06  C031  F08B         	movff	?___flsub+3,efgtoa@h+3
  5694   001B0A                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  5696   001B0A  C099  F036         	movff	efgtoa@u,___fldiv@b
  5697   001B0E  C09A  F037         	movff	efgtoa@u+1,___fldiv@b+1
  5698   001B12  C09B  F038         	movff	efgtoa@u+2,___fldiv@b+2
  5699   001B16  C09C  F039         	movff	efgtoa@u+3,___fldiv@b+3
  5700   001B1A  0E00               	movlw	0
  5701   001B1C  6E3A               	movwf	___fldiv@a^0,c
  5702   001B1E  0E00               	movlw	0
  5703   001B20  6E3B               	movwf	(___fldiv@a+1)^0,c
  5704   001B22  0E20               	movlw	32
  5705   001B24  6E3C               	movwf	(___fldiv@a+2)^0,c
  5706   001B26  0E41               	movlw	65
  5707   001B28  6E3D               	movwf	(___fldiv@a+3)^0,c
  5708   001B2A  ECD1  F01A         	call	___fldiv	;wreg free
  5709   001B2E  C036  F099         	movff	?___fldiv,efgtoa@u
  5710   001B32  C037  F09A         	movff	?___fldiv+1,efgtoa@u+1
  5711   001B36  C038  F09B         	movff	?___fldiv+2,efgtoa@u+2
  5712   001B3A  C039  F09C         	movff	?___fldiv+3,efgtoa@u+3
  5713   001B3E                     
  5714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  5715   001B3E  0100               	movlb	0	; () banked
  5716   001B40  4B90               	infsnz	efgtoa@i& (0+255),f,b
  5717   001B42  2B91               	incf	(efgtoa@i+1)& (0+255),f,b
  5718   001B44                     l4964:
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5722   001B44  517E               	movf	efgtoa@m& (0+255),w,b
  5723   001B46  5D90               	subwf	efgtoa@i& (0+255),w,b
  5724   001B48  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  5725   001B4A  0A80               	xorlw	128
  5726   001B4C  6E59               	movwf	??_efgtoa^0,c
  5727   001B4E  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  5728   001B50  0A80               	xorlw	128
  5729   001B52  5859               	subwfb	??_efgtoa^0,w,c
  5730   001B54  A0D8               	btfss	status,0,c
  5731   001B56  EFAF  F00D         	goto	u4261
  5732   001B5A  EFB1  F00D         	goto	u4260
  5733   001B5E                     u4261:
  5734   001B5E  EF27  F00D         	goto	l4956
  5735   001B62                     u4260:
  5736   001B62                     
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  5739   001B62  C099  F005         	movff	efgtoa@u,___flmul@b
  5740   001B66  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  5741   001B6A  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  5742   001B6E  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  5743   001B72  0E00               	movlw	0
  5744   001B74  6E09               	movwf	___flmul@a^0,c
  5745   001B76  0E00               	movlw	0
  5746   001B78  6E0A               	movwf	(___flmul@a+1)^0,c
  5747   001B7A  0EA0               	movlw	160
  5748   001B7C  6E0B               	movwf	(___flmul@a+2)^0,c
  5749   001B7E  0E40               	movlw	64
  5750   001B80  6E0C               	movwf	(___flmul@a+3)^0,c
  5751   001B82  ECBC  F018         	call	___flmul	;wreg free
  5752   001B86  C005  F08C         	movff	?___flmul,efgtoa@l
  5753   001B8A  C006  F08D         	movff	?___flmul+1,efgtoa@l+1
  5754   001B8E  C007  F08E         	movff	?___flmul+2,efgtoa@l+2
  5755   001B92  C008  F08F         	movff	?___flmul+3,efgtoa@l+3
  5756   001B96                     
  5757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  5758   001B96  C088  F01E         	movff	efgtoa@h,___flge@ff1
  5759   001B9A  C089  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  5760   001B9E  C08A  F020         	movff	efgtoa@h+2,___flge@ff1+2
  5761   001BA2  C08B  F021         	movff	efgtoa@h+3,___flge@ff1+3
  5762   001BA6  C08C  F022         	movff	efgtoa@l,___flge@ff2
  5763   001BAA  C08D  F023         	movff	efgtoa@l+1,___flge@ff2+1
  5764   001BAE  C08E  F024         	movff	efgtoa@l+2,___flge@ff2+2
  5765   001BB2  C08F  F025         	movff	efgtoa@l+3,___flge@ff2+3
  5766   001BB6  EC7F  F024         	call	___flge	;wreg free
  5767   001BBA  B0D8               	btfsc	status,0,c
  5768   001BBC  EFE2  F00D         	goto	u4271
  5769   001BC0  EFE4  F00D         	goto	u4270
  5770   001BC4                     u4271:
  5771   001BC4  EFEF  F00D         	goto	l4972
  5772   001BC8                     u4270:
  5773   001BC8                     
  5774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  5775   001BC8  0E00               	movlw	0
  5776   001BCA  0100               	movlb	0	; () banked
  5777   001BCC  6F8C               	movwf	efgtoa@l& (0+255),b
  5778   001BCE  0E00               	movlw	0
  5779   001BD0  6F8D               	movwf	(efgtoa@l+1)& (0+255),b
  5780   001BD2  0E00               	movlw	0
  5781   001BD4  6F8E               	movwf	(efgtoa@l+2)& (0+255),b
  5782   001BD6  0E00               	movlw	0
  5783   001BD8  6F8F               	movwf	(efgtoa@l+3)& (0+255),b
  5784                           
  5785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  5786   001BDA  EF18  F00E         	goto	l4978
  5787   001BDE                     l4972:
  5788                           
  5789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  5790   001BDE  C088  F001         	movff	efgtoa@h,___fleq@ff1
  5791   001BE2  C089  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5792   001BE6  C08A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5793   001BEA  C08B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5794   001BEE  C08C  F005         	movff	efgtoa@l,___fleq@ff2
  5795   001BF2  C08D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5796   001BF6  C08E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5797   001BFA  C08F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5798   001BFE  ECE7  F027         	call	___fleq	;wreg free
  5799   001C02  A0D8               	btfss	status,0,c
  5800   001C04  EF06  F00E         	goto	u4281
  5801   001C08  EF08  F00E         	goto	u4280
  5802   001C0C                     u4281:
  5803   001C0C  EF18  F00E         	goto	l4978
  5804   001C10                     u4280:
  5805   001C10  0100               	movlb	0	; () banked
  5806   001C12  B17C               	btfsc	efgtoa@d& (0+255),0,b
  5807   001C14  EF0E  F00E         	goto	u4291
  5808   001C18  EF10  F00E         	goto	u4290
  5809   001C1C                     u4291:
  5810   001C1C  EF18  F00E         	goto	l4978
  5811   001C20                     u4290:
  5812   001C20                     
  5813                           ; BSR set to: 0
  5814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  5815   001C20  0E00               	movlw	0
  5816   001C22  6F8C               	movwf	efgtoa@l& (0+255),b
  5817   001C24  0E00               	movlw	0
  5818   001C26  6F8D               	movwf	(efgtoa@l+1)& (0+255),b
  5819   001C28  0E00               	movlw	0
  5820   001C2A  6F8E               	movwf	(efgtoa@l+2)& (0+255),b
  5821   001C2C  0E00               	movlw	0
  5822   001C2E  6F8F               	movwf	(efgtoa@l+3)& (0+255),b
  5823   001C30                     l4978:
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  5826   001C30  C093  F01E         	movff	efgtoa@g,___fladd@b
  5827   001C34  C094  F01F         	movff	efgtoa@g+1,___fladd@b+1
  5828   001C38  C095  F020         	movff	efgtoa@g+2,___fladd@b+2
  5829   001C3C  C096  F021         	movff	efgtoa@g+3,___fladd@b+3
  5830   001C40  C08C  F022         	movff	efgtoa@l,___fladd@a
  5831   001C44  C08D  F023         	movff	efgtoa@l+1,___fladd@a+1
  5832   001C48  C08E  F024         	movff	efgtoa@l+2,___fladd@a+2
  5833   001C4C  C08F  F025         	movff	efgtoa@l+3,___fladd@a+3
  5834   001C50  EC5C  F016         	call	___fladd	;wreg free
  5835   001C54  C01E  F088         	movff	?___fladd,efgtoa@h
  5836   001C58  C01F  F089         	movff	?___fladd+1,efgtoa@h+1
  5837   001C5C  C020  F08A         	movff	?___fladd+2,efgtoa@h+2
  5838   001C60  C021  F08B         	movff	?___fladd+3,efgtoa@h+3
  5839   001C64                     
  5840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  5841   001C64  C088  F01E         	movff	efgtoa@h,___flge@ff1
  5842   001C68  C089  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  5843   001C6C  C08A  F020         	movff	efgtoa@h+2,___flge@ff1+2
  5844   001C70  C08B  F021         	movff	efgtoa@h+3,___flge@ff1+3
  5845   001C74  0E00               	movlw	0
  5846   001C76  6E09               	movwf	___flmul@a^0,c
  5847   001C78  0E00               	movlw	0
  5848   001C7A  6E0A               	movwf	(___flmul@a+1)^0,c
  5849   001C7C  0E20               	movlw	32
  5850   001C7E  6E0B               	movwf	(___flmul@a+2)^0,c
  5851   001C80  0E41               	movlw	65
  5852   001C82  6E0C               	movwf	(___flmul@a+3)^0,c
  5853   001C84  C084  F005         	movff	efgtoa@ou,___flmul@b
  5854   001C88  C085  F006         	movff	efgtoa@ou+1,___flmul@b+1
  5855   001C8C  C086  F007         	movff	efgtoa@ou+2,___flmul@b+2
  5856   001C90  C087  F008         	movff	efgtoa@ou+3,___flmul@b+3
  5857   001C94  ECBC  F018         	call	___flmul	;wreg free
  5858   001C98  C005  F022         	movff	?___flmul,___flge@ff2
  5859   001C9C  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  5860   001CA0  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  5861   001CA4  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  5862   001CA8  EC7F  F024         	call	___flge	;wreg free
  5863   001CAC  A0D8               	btfss	status,0,c
  5864   001CAE  EF5B  F00E         	goto	u4301
  5865   001CB2  EF5D  F00E         	goto	u4300
  5866   001CB6                     u4301:
  5867   001CB6  EF86  F00E         	goto	l4990
  5868   001CBA                     u4300:
  5869   001CBA                     
  5870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  5871   001CBA  0100               	movlb	0	; () banked
  5872   001CBC  4B80               	infsnz	efgtoa@e& (0+255),f,b
  5873   001CBE  2B81               	incf	(efgtoa@e+1)& (0+255),f,b
  5874   001CC0                     
  5875                           ; BSR set to: 0
  5876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  5877   001CC0  C084  F005         	movff	efgtoa@ou,___flmul@b
  5878   001CC4  C085  F006         	movff	efgtoa@ou+1,___flmul@b+1
  5879   001CC8  C086  F007         	movff	efgtoa@ou+2,___flmul@b+2
  5880   001CCC  C087  F008         	movff	efgtoa@ou+3,___flmul@b+3
  5881   001CD0  0E00               	movlw	0
  5882   001CD2  6E09               	movwf	___flmul@a^0,c
  5883   001CD4  0E00               	movlw	0
  5884   001CD6  6E0A               	movwf	(___flmul@a+1)^0,c
  5885   001CD8  0E20               	movlw	32
  5886   001CDA  6E0B               	movwf	(___flmul@a+2)^0,c
  5887   001CDC  0E41               	movlw	65
  5888   001CDE  6E0C               	movwf	(___flmul@a+3)^0,c
  5889   001CE0  ECBC  F018         	call	___flmul	;wreg free
  5890   001CE4  C005  F084         	movff	?___flmul,efgtoa@ou
  5891   001CE8  C006  F085         	movff	?___flmul+1,efgtoa@ou+1
  5892   001CEC  C007  F086         	movff	?___flmul+2,efgtoa@ou+2
  5893   001CF0  C008  F087         	movff	?___flmul+3,efgtoa@ou+3
  5894   001CF4                     
  5895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  5896   001CF4  0E66               	movlw	102
  5897   001CF6  0100               	movlb	0	; () banked
  5898   001CF8  197B               	xorwf	efgtoa@nmode& (0+255),w,b
  5899   001CFA  A4D8               	btfss	status,2,c
  5900   001CFC  EF82  F00E         	goto	u4311
  5901   001D00  EF84  F00E         	goto	u4310
  5902   001D04                     u4311:
  5903   001D04  EF86  F00E         	goto	l4990
  5904   001D08                     u4310:
  5905   001D08                     
  5906                           ; BSR set to: 0
  5907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  5908   001D08  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  5909   001D0A  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  5910   001D0C                     l4990:
  5911                           
  5912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  5913   001D0C  C084  F099         	movff	efgtoa@ou,efgtoa@u
  5914   001D10  C085  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  5915   001D14  C086  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  5916   001D18  C087  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  5917   001D1C                     
  5918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  5919   001D1C  C080  F071         	movff	efgtoa@e,efgtoa@ne
  5920   001D20  C081  F072         	movff	efgtoa@e+1,efgtoa@ne+1
  5921   001D24                     
  5922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  5923   001D24  0E00               	movlw	0
  5924   001D26  0100               	movlb	0	; () banked
  5925   001D28  6F79               	movwf	efgtoa@pp& (0+255),b
  5926   001D2A                     
  5927                           ; BSR set to: 0
  5928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  5929   001D2A  0E00               	movlw	0
  5930   001D2C  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  5931   001D2E  0E00               	movlw	0
  5932   001D30  6F75               	movwf	efgtoa@t& (0+255),b
  5933   001D32                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  5936   001D32  0E00               	movlw	0
  5937   001D34  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  5938   001D36  0E00               	movlw	0
  5939   001D38  6F90               	movwf	efgtoa@i& (0+255),b
  5940                           
  5941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5942   001D3A  EF84  F00F         	goto	l5040
  5943   001D3E                     l5000:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  5947   001D3E  C088  F036         	movff	efgtoa@h,___fldiv@b
  5948   001D42  C089  F037         	movff	efgtoa@h+1,___fldiv@b+1
  5949   001D46  C08A  F038         	movff	efgtoa@h+2,___fldiv@b+2
  5950   001D4A  C08B  F039         	movff	efgtoa@h+3,___fldiv@b+3
  5951   001D4E  C099  F03A         	movff	efgtoa@u,___fldiv@a
  5952   001D52  C09A  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  5953   001D56  C09B  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  5954   001D5A  C09C  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  5955   001D5E  ECD1  F01A         	call	___fldiv	;wreg free
  5956   001D62  C036  F04F         	movff	?___fldiv,floorf@x
  5957   001D66  C037  F050         	movff	?___fldiv+1,floorf@x+1
  5958   001D6A  C038  F051         	movff	?___fldiv+2,floorf@x+2
  5959   001D6E  C039  F052         	movff	?___fldiv+3,floorf@x+3
  5960   001D72  ECBE  F01D         	call	_floorf	;wreg free
  5961   001D76  C04F  F08C         	movff	?_floorf,efgtoa@l
  5962   001D7A  C050  F08D         	movff	?_floorf+1,efgtoa@l+1
  5963   001D7E  C051  F08E         	movff	?_floorf+2,efgtoa@l+2
  5964   001D82  C052  F08F         	movff	?_floorf+3,efgtoa@l+3
  5965                           
  5966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5967   001D86  C08C  F001         	movff	efgtoa@l,___fltol@f1
  5968   001D8A  C08D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5969   001D8E  C08E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5970   001D92  C08F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5971   001D96  ECFC  F023         	call	___fltol	;wreg free
  5972   001D9A  BE02               	btfsc	(?___fltol+1)^0,7,c
  5973   001D9C  EFDB  F00E         	goto	u4320
  5974   001DA0  5002               	movf	(?___fltol+1)^0,w,c
  5975   001DA2  E107               	bnz	u4321
  5976   001DA4  0E0A               	movlw	10
  5977   001DA6  5C01               	subwf	?___fltol^0,w,c
  5978   001DA8  B0D8               	btfsc	status,0,c
  5979   001DAA  EFD9  F00E         	goto	u4321
  5980   001DAE  EFDB  F00E         	goto	u4320
  5981   001DB2                     u4321:
  5982   001DB2  EFEB  F00E         	goto	l5004
  5983   001DB6                     u4320:
  5984   001DB6  C08C  F001         	movff	efgtoa@l,___fltol@f1
  5985   001DBA  C08D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5986   001DBE  C08E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5987   001DC2  C08F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5988   001DC6  ECFC  F023         	call	___fltol	;wreg free
  5989   001DCA  C001  F07C         	movff	?___fltol,efgtoa@d
  5990   001DCE  C002  F07D         	movff	?___fltol+1,efgtoa@d+1
  5991   001DD2  EFF0  F00E         	goto	l1318
  5992   001DD6                     l5004:
  5993   001DD6  0E00               	movlw	0
  5994   001DD8  0100               	movlb	0	; () banked
  5995   001DDA  6F7D               	movwf	(efgtoa@d+1)& (0+255),b
  5996   001DDC  0E09               	movlw	9
  5997   001DDE  6F7C               	movwf	efgtoa@d& (0+255),b
  5998   001DE0                     l1318:
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  6001   001DE0  0100               	movlb	0	; () banked
  6002   001DE2  5179               	movf	efgtoa@pp& (0+255),w,b
  6003   001DE4  A4D8               	btfss	status,2,c
  6004   001DE6  EFF7  F00E         	goto	u4331
  6005   001DEA  EFF9  F00E         	goto	u4330
  6006   001DEE                     u4331:
  6007   001DEE  EF21  F00F         	goto	l5024
  6008   001DF2                     u4330:
  6009   001DF2                     
  6010                           ; BSR set to: 0
  6011   001DF2  BF72               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6012   001DF4  EF00  F00F         	goto	u4340
  6013   001DF8  EFFE  F00E         	goto	u4341
  6014   001DFC                     u4341:
  6015   001DFC  EF21  F00F         	goto	l5024
  6016   001E00                     u4340:
  6017   001E00                     
  6018                           ; BSR set to: 0
  6019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  6020   001E00  0E00               	movlw	low _dbuf
  6021   001E02  2597               	addwf	efgtoa@n& (0+255),w,b
  6022   001E04  6ED9               	movwf	fsr2l,c
  6023   001E06  0E02               	movlw	high _dbuf
  6024   001E08  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6025   001E0A  6EDA               	movwf	fsr2h,c
  6026   001E0C  0E2E               	movlw	46
  6027   001E0E  6EDF               	movwf	indf2,c
  6028   001E10                     
  6029                           ; BSR set to: 0
  6030   001E10  4B97               	infsnz	efgtoa@n& (0+255),f,b
  6031   001E12  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  6032   001E14                     
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  6035   001E14  0782               	decf	efgtoa@w& (0+255),f,b
  6036   001E16  A0D8               	btfss	status,0,c
  6037   001E18  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  6038   001E1A                     
  6039                           ; BSR set to: 0
  6040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  6041   001E1A  0E01               	movlw	1
  6042   001E1C  6F79               	movwf	efgtoa@pp& (0+255),b
  6043   001E1E  EF21  F00F         	goto	l5024
  6044   001E22                     l5016:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  6048   001E22  0E00               	movlw	low _dbuf
  6049   001E24  2597               	addwf	efgtoa@n& (0+255),w,b
  6050   001E26  6ED9               	movwf	fsr2l,c
  6051   001E28  0E02               	movlw	high _dbuf
  6052   001E2A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6053   001E2C  6EDA               	movwf	fsr2h,c
  6054   001E2E  0E30               	movlw	48
  6055   001E30  6EDF               	movwf	indf2,c
  6056   001E32                     
  6057                           ; BSR set to: 0
  6058   001E32  4B97               	infsnz	efgtoa@n& (0+255),f,b
  6059   001E34  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  6060   001E36                     
  6061                           ; BSR set to: 0
  6062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  6063   001E36  0782               	decf	efgtoa@w& (0+255),f,b
  6064   001E38  A0D8               	btfss	status,0,c
  6065   001E3A  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  6066   001E3C                     
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  6069   001E3C  0775               	decf	efgtoa@t& (0+255),f,b
  6070   001E3E  A0D8               	btfss	status,0,c
  6071   001E40  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  6072   001E42                     l5024:
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  6076   001E42  5175               	movf	efgtoa@t& (0+255),w,b
  6077   001E44  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6078   001E46  A4D8               	btfss	status,2,c
  6079   001E48  EF28  F00F         	goto	u4351
  6080   001E4C  EF2A  F00F         	goto	u4350
  6081   001E50                     u4351:
  6082   001E50  EF11  F00F         	goto	l5016
  6083   001E54                     u4350:
  6084   001E54                     
  6085                           ; BSR set to: 0
  6086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6087   001E54  0E00               	movlw	low _dbuf
  6088   001E56  2597               	addwf	efgtoa@n& (0+255),w,b
  6089   001E58  6ED9               	movwf	fsr2l,c
  6090   001E5A  0E02               	movlw	high _dbuf
  6091   001E5C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6092   001E5E  6EDA               	movwf	fsr2h,c
  6093   001E60  517C               	movf	efgtoa@d& (0+255),w,b
  6094   001E62  0F30               	addlw	48
  6095   001E64  6EDF               	movwf	indf2,c
  6096   001E66                     
  6097                           ; BSR set to: 0
  6098   001E66  4B97               	infsnz	efgtoa@n& (0+255),f,b
  6099   001E68  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  6100   001E6A                     
  6101                           ; BSR set to: 0
  6102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  6103   001E6A  0782               	decf	efgtoa@w& (0+255),f,b
  6104   001E6C  A0D8               	btfss	status,0,c
  6105   001E6E  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  6106   001E70                     
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  6109   001E70  C088  F02E         	movff	efgtoa@h,___flsub@b
  6110   001E74  C089  F02F         	movff	efgtoa@h+1,___flsub@b+1
  6111   001E78  C08A  F030         	movff	efgtoa@h+2,___flsub@b+2
  6112   001E7C  C08B  F031         	movff	efgtoa@h+3,___flsub@b+3
  6113   001E80  C08C  F009         	movff	efgtoa@l,___flmul@a
  6114   001E84  C08D  F00A         	movff	efgtoa@l+1,___flmul@a+1
  6115   001E88  C08E  F00B         	movff	efgtoa@l+2,___flmul@a+2
  6116   001E8C  C08F  F00C         	movff	efgtoa@l+3,___flmul@a+3
  6117   001E90  C099  F005         	movff	efgtoa@u,___flmul@b
  6118   001E94  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  6119   001E98  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  6120   001E9C  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  6121   001EA0  ECBC  F018         	call	___flmul	;wreg free
  6122   001EA4  C005  F032         	movff	?___flmul,___flsub@a
  6123   001EA8  C006  F033         	movff	?___flmul+1,___flsub@a+1
  6124   001EAC  C007  F034         	movff	?___flmul+2,___flsub@a+2
  6125   001EB0  C008  F035         	movff	?___flmul+3,___flsub@a+3
  6126   001EB4  EC55  F02F         	call	___flsub	;wreg free
  6127   001EB8  C02E  F088         	movff	?___flsub,efgtoa@h
  6128   001EBC  C02F  F089         	movff	?___flsub+1,efgtoa@h+1
  6129   001EC0  C030  F08A         	movff	?___flsub+2,efgtoa@h+2
  6130   001EC4  C031  F08B         	movff	?___flsub+3,efgtoa@h+3
  6131   001EC8                     
  6132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  6133   001EC8  C099  F036         	movff	efgtoa@u,___fldiv@b
  6134   001ECC  C09A  F037         	movff	efgtoa@u+1,___fldiv@b+1
  6135   001ED0  C09B  F038         	movff	efgtoa@u+2,___fldiv@b+2
  6136   001ED4  C09C  F039         	movff	efgtoa@u+3,___fldiv@b+3
  6137   001ED8  0E00               	movlw	0
  6138   001EDA  6E3A               	movwf	___fldiv@a^0,c
  6139   001EDC  0E00               	movlw	0
  6140   001EDE  6E3B               	movwf	(___fldiv@a+1)^0,c
  6141   001EE0  0E20               	movlw	32
  6142   001EE2  6E3C               	movwf	(___fldiv@a+2)^0,c
  6143   001EE4  0E41               	movlw	65
  6144   001EE6  6E3D               	movwf	(___fldiv@a+3)^0,c
  6145   001EE8  ECD1  F01A         	call	___fldiv	;wreg free
  6146   001EEC  C036  F099         	movff	?___fldiv,efgtoa@u
  6147   001EF0  C037  F09A         	movff	?___fldiv+1,efgtoa@u+1
  6148   001EF4  C038  F09B         	movff	?___fldiv+2,efgtoa@u+2
  6149   001EF8  C039  F09C         	movff	?___fldiv+3,efgtoa@u+3
  6150   001EFC                     
  6151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  6152   001EFC  0100               	movlb	0	; () banked
  6153   001EFE  0771               	decf	efgtoa@ne& (0+255),f,b
  6154   001F00  A0D8               	btfss	status,0,c
  6155   001F02  0772               	decf	(efgtoa@ne+1)& (0+255),f,b
  6156   001F04                     
  6157                           ; BSR set to: 0
  6158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  6159   001F04  4B90               	infsnz	efgtoa@i& (0+255),f,b
  6160   001F06  2B91               	incf	(efgtoa@i+1)& (0+255),f,b
  6161   001F08                     l5040:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6165   001F08  517E               	movf	efgtoa@m& (0+255),w,b
  6166   001F0A  5D90               	subwf	efgtoa@i& (0+255),w,b
  6167   001F0C  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  6168   001F0E  0A80               	xorlw	128
  6169   001F10  6E59               	movwf	??_efgtoa^0,c
  6170   001F12  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  6171   001F14  0A80               	xorlw	128
  6172   001F16  5859               	subwfb	??_efgtoa^0,w,c
  6173   001F18  B0D8               	btfsc	status,0,c
  6174   001F1A  EF91  F00F         	goto	u4361
  6175   001F1E  EF93  F00F         	goto	u4360
  6176   001F22                     u4361:
  6177   001F22  EFA1  F00F         	goto	l5044
  6178   001F26                     u4360:
  6179   001F26                     
  6180                           ; BSR set to: 0
  6181   001F26  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6182   001F28  EF9F  F00F         	goto	u4371
  6183   001F2C  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  6184   001F2E  E109               	bnz	u4370
  6185   001F30  0E4B               	movlw	75
  6186   001F32  5D97               	subwf	efgtoa@n& (0+255),w,b
  6187   001F34  A0D8               	btfss	status,0,c
  6188   001F36  EF9F  F00F         	goto	u4371
  6189   001F3A  EFA1  F00F         	goto	u4370
  6190   001F3E                     u4371:
  6191   001F3E  EF9F  F00E         	goto	l5000
  6192   001F42                     u4370:
  6193   001F42                     l5044:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  6197   001F42  0E00               	movlw	0
  6198   001F44  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  6199   001F46  0E4F               	movlw	79
  6200   001F48  6F90               	movwf	efgtoa@i& (0+255),b
  6201   001F4A                     
  6202                           ; BSR set to: 0
  6203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  6204   001F4A  0E00               	movlw	low _dbuf
  6205   001F4C  2590               	addwf	efgtoa@i& (0+255),w,b
  6206   001F4E  6ED9               	movwf	fsr2l,c
  6207   001F50  0E02               	movlw	high _dbuf
  6208   001F52  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6209   001F54  6EDA               	movwf	fsr2h,c
  6210   001F56  0E00               	movlw	0
  6211   001F58  6EDF               	movwf	indf2,c
  6212   001F5A                     
  6213                           ; BSR set to: 0
  6214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6215   001F5A  0E00               	movlw	low _dbuf
  6216   001F5C  6E59               	movwf	??_efgtoa^0,c
  6217   001F5E  0E02               	movlw	high _dbuf
  6218   001F60  6E5A               	movwf	(??_efgtoa+1)^0,c
  6219   001F62  5197               	movf	efgtoa@n& (0+255),w,b
  6220   001F64  5E59               	subwf	??_efgtoa^0,f,c
  6221   001F66  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  6222   001F68  5A5A               	subwfb	(??_efgtoa+1)^0,f,c
  6223   001F6A  5190               	movf	efgtoa@i& (0+255),w,b
  6224   001F6C  2459               	addwf	??_efgtoa^0,w,c
  6225   001F6E  6E01               	movwf	memcpy@d1^0,c
  6226   001F70  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  6227   001F72  205A               	addwfc	(??_efgtoa+1)^0,w,c
  6228   001F74  6E02               	movwf	(memcpy@d1+1)^0,c
  6229   001F76  0E00               	movlw	low _dbuf
  6230   001F78  6E03               	movwf	memcpy@s1^0,c
  6231   001F7A  0E02               	movlw	high _dbuf
  6232   001F7C  6E04               	movwf	(memcpy@s1+1)^0,c
  6233   001F7E  C097  F005         	movff	efgtoa@n,memcpy@n
  6234   001F82  C098  F006         	movff	efgtoa@n+1,memcpy@n+1
  6235   001F86  ECE6  F02E         	call	_memcpy	;wreg free
  6236   001F8A                     
  6237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  6238   001F8A  0100               	movlb	0	; () banked
  6239   001F8C  5197               	movf	efgtoa@n& (0+255),w,b
  6240   001F8E  5D90               	subwf	efgtoa@i& (0+255),w,b
  6241   001F90  6F97               	movwf	efgtoa@n& (0+255),b
  6242   001F92  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  6243   001F94  5991               	subwfb	(efgtoa@i+1)& (0+255),w,b
  6244   001F96  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  6245   001F98                     
  6246                           ; BSR set to: 0
  6247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  6248   001F98  5192               	movf	efgtoa@sign& (0+255),w,b
  6249   001F9A  A4D8               	btfss	status,2,c
  6250   001F9C  EFD2  F00F         	goto	u4381
  6251   001FA0  EFD5  F00F         	goto	u4380
  6252   001FA4                     u4381:
  6253   001FA4  0E01               	movlw	1
  6254   001FA6  EFD6  F00F         	goto	u4390
  6255   001FAA                     u4380:
  6256   001FAA  0E00               	movlw	0
  6257   001FAC                     u4390:
  6258   001FAC  6F90               	movwf	efgtoa@i& (0+255),b
  6259   001FAE  6B91               	clrf	(efgtoa@i+1)& (0+255),b
  6260   001FB0                     
  6261                           ; BSR set to: 0
  6262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  6263   001FB0  A3F3               	btfss	_flags& (0+255),1,b
  6264   001FB2  EFDD  F00F         	goto	u4401
  6265   001FB6  EFDF  F00F         	goto	u4400
  6266   001FBA                     u4401:
  6267   001FBA  EF0D  F010         	goto	l5066
  6268   001FBE                     u4400:
  6269   001FBE  EFEF  F00F         	goto	l5062
  6270   001FC2                     l5058:
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  6274   001FC2  0797               	decf	efgtoa@n& (0+255),f,b
  6275   001FC4  A0D8               	btfss	status,0,c
  6276   001FC6  0798               	decf	(efgtoa@n+1)& (0+255),f,b
  6277   001FC8  0E00               	movlw	low _dbuf
  6278   001FCA  2597               	addwf	efgtoa@n& (0+255),w,b
  6279   001FCC  6ED9               	movwf	fsr2l,c
  6280   001FCE  0E02               	movlw	high _dbuf
  6281   001FD0  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6282   001FD2  6EDA               	movwf	fsr2h,c
  6283   001FD4  0E30               	movlw	48
  6284   001FD6  6EDF               	movwf	indf2,c
  6285   001FD8                     
  6286                           ; BSR set to: 0
  6287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  6288   001FD8  0782               	decf	efgtoa@w& (0+255),f,b
  6289   001FDA  A0D8               	btfss	status,0,c
  6290   001FDC  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  6291   001FDE                     l5062:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  6295   001FDE  5182               	movf	efgtoa@w& (0+255),w,b
  6296   001FE0  5D90               	subwf	efgtoa@i& (0+255),w,b
  6297   001FE2  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  6298   001FE4  0A80               	xorlw	128
  6299   001FE6  6E59               	movwf	??_efgtoa^0,c
  6300   001FE8  5183               	movf	(efgtoa@w+1)& (0+255),w,b
  6301   001FEA  0A80               	xorlw	128
  6302   001FEC  5859               	subwfb	??_efgtoa^0,w,c
  6303   001FEE  B0D8               	btfsc	status,0,c
  6304   001FF0  EFFC  F00F         	goto	u4411
  6305   001FF4  EFFE  F00F         	goto	u4410
  6306   001FF8                     u4411:
  6307   001FF8  EF0D  F010         	goto	l5066
  6308   001FFC                     u4410:
  6309   001FFC                     
  6310                           ; BSR set to: 0
  6311   001FFC  5197               	movf	efgtoa@n& (0+255),w,b
  6312   001FFE  5D90               	subwf	efgtoa@i& (0+255),w,b
  6313   002000  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  6314   002002  0A80               	xorlw	128
  6315   002004  6E59               	movwf	??_efgtoa^0,c
  6316   002006  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  6317   002008  0A80               	xorlw	128
  6318   00200A  5859               	subwfb	??_efgtoa^0,w,c
  6319   00200C  A0D8               	btfss	status,0,c
  6320   00200E  EF0B  F010         	goto	u4421
  6321   002012  EF0D  F010         	goto	u4420
  6322   002016                     u4421:
  6323   002016  EFE1  F00F         	goto	l5058
  6324   00201A                     u4420:
  6325   00201A                     l5066:
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  6329   00201A  5192               	movf	efgtoa@sign& (0+255),w,b
  6330   00201C  B4D8               	btfsc	status,2,c
  6331   00201E  EF13  F010         	goto	u4431
  6332   002022  EF15  F010         	goto	u4430
  6333   002026                     u4431:
  6334   002026  EF20  F010         	goto	l5070
  6335   00202A                     u4430:
  6336   00202A                     
  6337                           ; BSR set to: 0
  6338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  6339   00202A  0797               	decf	efgtoa@n& (0+255),f,b
  6340   00202C  A0D8               	btfss	status,0,c
  6341   00202E  0798               	decf	(efgtoa@n+1)& (0+255),f,b
  6342   002030  0E00               	movlw	low _dbuf
  6343   002032  2597               	addwf	efgtoa@n& (0+255),w,b
  6344   002034  6ED9               	movwf	fsr2l,c
  6345   002036  0E02               	movlw	high _dbuf
  6346   002038  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6347   00203A  6EDA               	movwf	fsr2h,c
  6348   00203C  C092  FFDF         	movff	efgtoa@sign,indf2
  6349   002040                     l5070:
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  6353   002040  5190               	movf	efgtoa@i& (0+255),w,b
  6354   002042  5F82               	subwf	efgtoa@w& (0+255),f,b
  6355   002044  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  6356   002046  5B83               	subwfb	(efgtoa@w+1)& (0+255),f,b
  6357   002048                     
  6358                           ; BSR set to: 0
  6359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6360   002048  C06A  F012         	movff	efgtoa@fp,pad@fp
  6361   00204C  C06B  F013         	movff	efgtoa@fp+1,pad@fp+1
  6362   002050  0E00               	movlw	low _dbuf
  6363   002052  2597               	addwf	efgtoa@n& (0+255),w,b
  6364   002054  6E14               	movwf	pad@buf^0,c
  6365   002056  0E02               	movlw	high _dbuf
  6366   002058  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6367   00205A  6E15               	movwf	(pad@buf+1)^0,c
  6368   00205C  C082  F016         	movff	efgtoa@w,pad@p
  6369   002060  C083  F017         	movff	efgtoa@w+1,pad@p+1
  6370   002064  EC90  F027         	call	_pad	;wreg free
  6371   002068                     l1285:
  6372   002068  0012               	return		;funcret
  6373   00206A                     __end_of_efgtoa:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function _strcpy *****************
  6377 ;; Defined at:
  6378 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6381 ;;		 -> dbuf(80), 
  6382 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6383 ;;		 -> STR_23(4), STR_20(4), 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  d               2    6[COMRAM] PTR unsigned char 
  6386 ;;		 -> dbuf(80), 
  6387 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6388 ;;		 -> STR_23(4), STR_20(4), 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[COMRAM] PTR unsigned char 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0
  6399 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6401 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        8 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 2
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_efgtoa
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text13
  6413   005F34                     __ptext13:
  6414                           	callstack 0
  6415   005F34                     _strcpy:
  6416                           	callstack 24
  6417   005F34  C003  F005         	movff	strcpy@src,strcpy@s
  6418   005F38  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  6419   005F3C  C001  F007         	movff	strcpy@dest,strcpy@d
  6420   005F40  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  6421   005F44                     l4796:
  6422   005F44  C005  FFF6         	movff	strcpy@s,tblptrl
  6423   005F48  C006  FFF7         	movff	strcpy@s+1,tblptrh
  6424   005F4C  4A05               	infsnz	strcpy@s^0,f,c
  6425   005F4E  2A06               	incf	(strcpy@s+1)^0,f,c
  6426   005F50                     	if	0	;tblptru may be non-zero
  6427   005F50                     	endif
  6428   005F50                     	if	0	;tblptru may be non-zero
  6429   005F50                     	endif
  6430   005F50  C007  FFD9         	movff	strcpy@d,fsr2l
  6431   005F54  C008  FFDA         	movff	strcpy@d+1,fsr2h
  6432   005F58  4A07               	infsnz	strcpy@d^0,f,c
  6433   005F5A  2A08               	incf	(strcpy@d+1)^0,f,c
  6434   005F5C  0008               	tblrd		*
  6435   005F5E  CFF5 FFDF          	movff	tablat,indf2
  6436   005F62  50DF               	movf	indf2,w,c
  6437   005F64  A4D8               	btfss	status,2,c
  6438   005F66  EFB7  F02F         	goto	u3961
  6439   005F6A  EFB9  F02F         	goto	u3960
  6440   005F6E                     u3961:
  6441   005F6E  EFA2  F02F         	goto	l4796
  6442   005F72                     u3960:
  6443   005F72  0012               	return		;funcret
  6444   005F74                     __end_of_strcpy:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function _pad *****************
  6448 ;; Defined at:
  6449 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6452 ;;		 -> sprintf@f(11), 
  6453 ;;  buf             2   19[COMRAM] PTR unsigned char 
  6454 ;;		 -> dbuf(80), 
  6455 ;;  p               2   21[COMRAM] int 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  w               2   26[COMRAM] int 
  6458 ;;  i               2   24[COMRAM] int 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6468 ;;      Params:         6       0       0       0       0       0       0       0       0
  6469 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6470 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6471 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6472 ;;Total ram usage:       11 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 5
  6475 ;; This function calls:
  6476 ;;		_fputc
  6477 ;;		_fputs
  6478 ;; This function is called by:
  6479 ;;		_efgtoa
  6480 ;;		_utoa
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text14
  6485   004F20                     __ptext14:
  6486                           	callstack 0
  6487   004F20                     _pad:
  6488                           	callstack 21
  6489   004F20                     
  6490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  6491   004F20  0100               	movlb	0	; () banked
  6492   004F22  A1F3               	btfss	_flags& (0+255),0,b
  6493   004F24  EF96  F027         	goto	u3851
  6494   004F28  EF98  F027         	goto	u3850
  6495   004F2C                     u3851:
  6496   004F2C  EFA2  F027         	goto	l4758
  6497   004F30                     u3850:
  6498   004F30                     
  6499                           ; BSR set to: 0
  6500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  6501   004F30  C014  F00B         	movff	pad@buf,fputs@s
  6502   004F34  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6503   004F38  C012  F00D         	movff	pad@fp,fputs@fp
  6504   004F3C  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6505   004F40  EC78  F02F         	call	_fputs	;wreg free
  6506   004F44                     l4758:
  6507                           
  6508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  6509   004F44  BE17               	btfsc	(pad@p+1)^0,7,c
  6510   004F46  EFA7  F027         	goto	u3861
  6511   004F4A  EFA9  F027         	goto	u3860
  6512   004F4E                     u3861:
  6513   004F4E  EFAF  F027         	goto	l4762
  6514   004F52                     u3860:
  6515   004F52  C016  F01B         	movff	pad@p,pad@w
  6516   004F56  C017  F01C         	movff	pad@p+1,pad@w+1
  6517   004F5A  EFB3  F027         	goto	l1269
  6518   004F5E                     l4762:
  6519   004F5E  0E00               	movlw	0
  6520   004F60  6E1C               	movwf	(pad@w+1)^0,c
  6521   004F62  0E00               	movlw	0
  6522   004F64  6E1B               	movwf	pad@w^0,c
  6523   004F66                     l1269:
  6524                           
  6525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6526   004F66  0E00               	movlw	0
  6527   004F68  6E1A               	movwf	(pad@i+1)^0,c
  6528   004F6A  0E00               	movlw	0
  6529   004F6C  6E19               	movwf	pad@i^0,c
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6532   004F6E  EFC5  F027         	goto	l4768
  6533   004F72                     l4764:
  6534                           
  6535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6536   004F72  0E00               	movlw	0
  6537   004F74  6E03               	movwf	(fputc@c+1)^0,c
  6538   004F76  0E20               	movlw	32
  6539   004F78  6E02               	movwf	fputc@c^0,c
  6540   004F7A  C012  F004         	movff	pad@fp,fputc@fp
  6541   004F7E  C013  F005         	movff	pad@fp+1,fputc@fp+1
  6542   004F82  ECC9  F026         	call	_fputc	;wreg free
  6543   004F86                     
  6544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6545   004F86  4A19               	infsnz	pad@i^0,f,c
  6546   004F88  2A1A               	incf	(pad@i+1)^0,f,c
  6547   004F8A                     l4768:
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6550   004F8A  501B               	movf	pad@w^0,w,c
  6551   004F8C  5C19               	subwf	pad@i^0,w,c
  6552   004F8E  501A               	movf	(pad@i+1)^0,w,c
  6553   004F90  0A80               	xorlw	128
  6554   004F92  6E18               	movwf	??_pad^0,c
  6555   004F94  501C               	movf	(pad@w+1)^0,w,c
  6556   004F96  0A80               	xorlw	128
  6557   004F98  5818               	subwfb	??_pad^0,w,c
  6558   004F9A  A0D8               	btfss	status,0,c
  6559   004F9C  EFD2  F027         	goto	u3871
  6560   004FA0  EFD4  F027         	goto	u3870
  6561   004FA4                     u3871:
  6562   004FA4  EFB9  F027         	goto	l4764
  6563   004FA8                     u3870:
  6564   004FA8                     
  6565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6566   004FA8  0100               	movlb	0	; () banked
  6567   004FAA  B1F3               	btfsc	_flags& (0+255),0,b
  6568   004FAC  EFDA  F027         	goto	u3881
  6569   004FB0  EFDC  F027         	goto	u3880
  6570   004FB4                     u3881:
  6571   004FB4  EFE6  F027         	goto	l1274
  6572   004FB8                     u3880:
  6573   004FB8                     
  6574                           ; BSR set to: 0
  6575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6576   004FB8  C014  F00B         	movff	pad@buf,fputs@s
  6577   004FBC  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6578   004FC0  C012  F00D         	movff	pad@fp,fputs@fp
  6579   004FC4  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6580   004FC8  EC78  F02F         	call	_fputs	;wreg free
  6581   004FCC                     l1274:
  6582   004FCC  0012               	return		;funcret
  6583   004FCE                     __end_of_pad:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _fputs *****************
  6587 ;; Defined at:
  6588 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6591 ;;		 -> dbuf(80), 
  6592 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6593 ;;		 -> sprintf@f(11), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  i               2   15[COMRAM] int 
  6596 ;;  c               1   14[COMRAM] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2   10[COMRAM] int 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6606 ;;      Params:         4       0       0       0       0       0       0       0       0
  6607 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6609 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6610 ;;Total ram usage:        7 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 4
  6613 ;; This function calls:
  6614 ;;		_fputc
  6615 ;; This function is called by:
  6616 ;;		_pad
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text15
  6621   005EF0                     __ptext15:
  6622                           	callstack 0
  6623   005EF0                     _fputs:
  6624                           	callstack 21
  6625   005EF0  0E00               	movlw	0
  6626   005EF2  6E11               	movwf	(fputs@i+1)^0,c
  6627   005EF4  0E00               	movlw	0
  6628   005EF6  6E10               	movwf	fputs@i^0,c
  6629   005EF8  EF89  F02F         	goto	l4328
  6630   005EFC                     l4324:
  6631   005EFC  C00F  F002         	movff	fputs@c,fputc@c
  6632   005F00  6A03               	clrf	(fputc@c+1)^0,c
  6633   005F02  C00D  F004         	movff	fputs@fp,fputc@fp
  6634   005F06  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  6635   005F0A  ECC9  F026         	call	_fputc	;wreg free
  6636   005F0E  4A10               	infsnz	fputs@i^0,f,c
  6637   005F10  2A11               	incf	(fputs@i+1)^0,f,c
  6638   005F12                     l4328:
  6639   005F12  5010               	movf	fputs@i^0,w,c
  6640   005F14  240B               	addwf	fputs@s^0,w,c
  6641   005F16  6ED9               	movwf	fsr2l,c
  6642   005F18  5011               	movf	(fputs@i+1)^0,w,c
  6643   005F1A  200C               	addwfc	(fputs@s+1)^0,w,c
  6644   005F1C  6EDA               	movwf	fsr2h,c
  6645   005F1E  50DF               	movf	indf2,w,c
  6646   005F20  6E0F               	movwf	fputs@c^0,c
  6647   005F22  500F               	movf	fputs@c^0,w,c
  6648   005F24  A4D8               	btfss	status,2,c
  6649   005F26  EF97  F02F         	goto	u3151
  6650   005F2A  EF99  F02F         	goto	u3150
  6651   005F2E                     u3151:
  6652   005F2E  EF7E  F02F         	goto	l4324
  6653   005F32                     u3150:
  6654   005F32  0012               	return		;funcret
  6655   005F34                     __end_of_fputs:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _fputc *****************
  6659 ;; Defined at:
  6660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  c               2    1[COMRAM] int 
  6663 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  6664 ;;		 -> sprintf@f(11), 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  2    1[COMRAM] int 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6676 ;;      Params:         4       0       0       0       0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6678 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6679 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6680 ;;Total ram usage:        9 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 3
  6683 ;; This function calls:
  6684 ;;		_putch
  6685 ;; This function is called by:
  6686 ;;		_pad
  6687 ;;		_vfpfcnvrt
  6688 ;;		_fputs
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text16
  6693   004D92                     __ptext16:
  6694                           	callstack 0
  6695   004D92                     _fputc:
  6696                           	callstack 21
  6697   004D92  5004               	movf	fputc@fp^0,w,c
  6698   004D94  1005               	iorwf	(fputc@fp+1)^0,w,c
  6699   004D96  B4D8               	btfsc	status,2,c
  6700   004D98  EFD0  F026         	goto	u2721
  6701   004D9C  EFD2  F026         	goto	u2720
  6702   004DA0                     u2721:
  6703   004DA0  EFDB  F026         	goto	l4110
  6704   004DA4                     u2720:
  6705   004DA4  5004               	movf	fputc@fp^0,w,c
  6706   004DA6  1005               	iorwf	(fputc@fp+1)^0,w,c
  6707   004DA8  A4D8               	btfss	status,2,c
  6708   004DAA  EFD9  F026         	goto	u2731
  6709   004DAE  EFDB  F026         	goto	u2730
  6710   004DB2                     u2731:
  6711   004DB2  EFE0  F026         	goto	l4112
  6712   004DB6                     u2730:
  6713   004DB6                     l4110:
  6714   004DB6  5002               	movf	fputc@c^0,w,c
  6715   004DB8  EC95  F030         	call	_putch
  6716   004DBC  EF2D  F027         	goto	l1476
  6717   004DC0                     l4112:
  6718   004DC0  EE20 F009          	lfsr	2,9
  6719   004DC4  5004               	movf	fputc@fp^0,w,c
  6720   004DC6  26D9               	addwf	fsr2l,f,c
  6721   004DC8  5005               	movf	(fputc@fp+1)^0,w,c
  6722   004DCA  22DA               	addwfc	fsr2h,f,c
  6723   004DCC  50DE               	movf	postinc2,w,c
  6724   004DCE  10DE               	iorwf	postinc2,w,c
  6725   004DD0  B4D8               	btfsc	status,2,c
  6726   004DD2  EFED  F026         	goto	u2741
  6727   004DD6  EFEF  F026         	goto	u2740
  6728   004DDA                     u2741:
  6729   004DDA  EF0A  F027         	goto	l4116
  6730   004DDE                     u2740:
  6731   004DDE  EE20 F009          	lfsr	2,9
  6732   004DE2  5004               	movf	fputc@fp^0,w,c
  6733   004DE4  26D9               	addwf	fsr2l,f,c
  6734   004DE6  5005               	movf	(fputc@fp+1)^0,w,c
  6735   004DE8  22DA               	addwfc	fsr2h,f,c
  6736   004DEA  EE10 F003          	lfsr	1,3
  6737   004DEE  5004               	movf	fputc@fp^0,w,c
  6738   004DF0  26E1               	addwf	fsr1l,f,c
  6739   004DF2  5005               	movf	(fputc@fp+1)^0,w,c
  6740   004DF4  22E2               	addwfc	fsr1h,f,c
  6741   004DF6  50DE               	movf	postinc2,w,c
  6742   004DF8  5CE6               	subwf	postinc1,w,c
  6743   004DFA  50E6               	movf	postinc1,w,c
  6744   004DFC  0A80               	xorlw	128
  6745   004DFE  6E0A               	movwf	(??_fputc+4)^0,c
  6746   004E00  50DE               	movf	postinc2,w,c
  6747   004E02  0A80               	xorlw	128
  6748   004E04  580A               	subwfb	(??_fputc+4)^0,w,c
  6749   004E06  B0D8               	btfsc	status,0,c
  6750   004E08  EF08  F027         	goto	u2751
  6751   004E0C  EF0A  F027         	goto	u2750
  6752   004E10                     u2751:
  6753   004E10  EF2D  F027         	goto	l1476
  6754   004E14                     u2750:
  6755   004E14                     l4116:
  6756   004E14  EE20 F003          	lfsr	2,3
  6757   004E18  5004               	movf	fputc@fp^0,w,c
  6758   004E1A  26D9               	addwf	fsr2l,f,c
  6759   004E1C  5005               	movf	(fputc@fp+1)^0,w,c
  6760   004E1E  22DA               	addwfc	fsr2h,f,c
  6761   004E20  CFDE F006          	movff	postinc2,??_fputc
  6762   004E24  CFDD F007          	movff	postdec2,??_fputc+1
  6763   004E28  C004  FFD9         	movff	fputc@fp,fsr2l
  6764   004E2C  C005  FFDA         	movff	fputc@fp+1,fsr2h
  6765   004E30  CFDE F008          	movff	postinc2,??_fputc+2
  6766   004E34  CFDD F009          	movff	postdec2,??_fputc+3
  6767   004E38  5006               	movf	??_fputc^0,w,c
  6768   004E3A  2408               	addwf	(??_fputc+2)^0,w,c
  6769   004E3C  6ED9               	movwf	fsr2l,c
  6770   004E3E  5007               	movf	(??_fputc+1)^0,w,c
  6771   004E40  2009               	addwfc	(??_fputc+3)^0,w,c
  6772   004E42  6EDA               	movwf	fsr2h,c
  6773   004E44  C002  FFDF         	movff	fputc@c,indf2
  6774   004E48  EE20 F003          	lfsr	2,3
  6775   004E4C  5004               	movf	fputc@fp^0,w,c
  6776   004E4E  26D9               	addwf	fsr2l,f,c
  6777   004E50  5005               	movf	(fputc@fp+1)^0,w,c
  6778   004E52  22DA               	addwfc	fsr2h,f,c
  6779   004E54  2ADE               	incf	postinc2,f,c
  6780   004E56  0E00               	movlw	0
  6781   004E58  22DD               	addwfc	postdec2,f,c
  6782   004E5A                     l1476:
  6783   004E5A  0012               	return		;funcret
  6784   004E5C                     __end_of_fputc:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _putch *****************
  6788 ;; Defined at:
  6789 ;;		line 73 in file "lib_pic/eusart.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  c               1    wreg     unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  c               1    0[COMRAM] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0
  6804 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6806 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6807 ;;Total ram usage:        1 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 2
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_fputc
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text17
  6818   00612A                     __ptext17:
  6819                           	callstack 0
  6820   00612A                     _putch:
  6821                           	callstack 21
  6822                           
  6823                           ;incstack = 0
  6824                           ;putch@c stored from wreg
  6825   00612A  6E01               	movwf	putch@c^0,c
  6826   00612C                     l136:
  6827   00612C  A2AC               	btfss	172,1,c	;volatile
  6828   00612E  EF9B  F030         	goto	u2711
  6829   006132  EF9D  F030         	goto	u2710
  6830   006136                     u2711:
  6831   006136  EF96  F030         	goto	l136
  6832   00613A                     u2710:
  6833   00613A                     
  6834                           ;lib_pic/eusart.c: 76:     TXREG1 = c;
  6835   00613A  C001  FFAD         	movff	putch@c,4013	;volatile
  6836   00613E  0012               	return		;funcret
  6837   006140                     __end_of_putch:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function _memcpy *****************
  6841 ;; Defined at:
  6842 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  d1              2    0[COMRAM] PTR void 
  6845 ;;		 -> dbuf(80), 
  6846 ;;  s1              2    2[COMRAM] PTR const void 
  6847 ;;		 -> dbuf(80), 
  6848 ;;  n               2    4[COMRAM] unsigned int 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6851 ;;		 -> dbuf(80), 
  6852 ;;  d               2    6[COMRAM] PTR unsigned char 
  6853 ;;		 -> dbuf(80), 
  6854 ;;  tmp             1   10[COMRAM] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2    0[COMRAM] PTR void 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         6       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6867 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:       11 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; Hardware stack levels required when called: 2
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_efgtoa
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text18
  6879   005DCC                     __ptext18:
  6880                           	callstack 0
  6881   005DCC                     _memcpy:
  6882                           	callstack 24
  6883   005DCC  C003  F009         	movff	memcpy@s1,memcpy@s
  6884   005DD0  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  6885   005DD4  C001  F007         	movff	memcpy@d1,memcpy@d
  6886   005DD8  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  6887   005DDC  EF00  F02F         	goto	l4840
  6888   005DE0                     l4832:
  6889   005DE0  C009  FFD9         	movff	memcpy@s,fsr2l
  6890   005DE4  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  6891   005DE8  50DF               	movf	indf2,w,c
  6892   005DEA  6E0B               	movwf	memcpy@tmp^0,c
  6893   005DEC  4A09               	infsnz	memcpy@s^0,f,c
  6894   005DEE  2A0A               	incf	(memcpy@s+1)^0,f,c
  6895   005DF0  C007  FFD9         	movff	memcpy@d,fsr2l
  6896   005DF4  C008  FFDA         	movff	memcpy@d+1,fsr2h
  6897   005DF8  C00B  FFDF         	movff	memcpy@tmp,indf2
  6898   005DFC  4A07               	infsnz	memcpy@d^0,f,c
  6899   005DFE  2A08               	incf	(memcpy@d+1)^0,f,c
  6900   005E00                     l4840:
  6901   005E00  0605               	decf	memcpy@n^0,f,c
  6902   005E02  A0D8               	btfss	status,0,c
  6903   005E04  0606               	decf	(memcpy@n+1)^0,f,c
  6904   005E06  2805               	incf	memcpy@n^0,w,c
  6905   005E08  E106               	bnz	u4081
  6906   005E0A  2806               	incf	(memcpy@n+1)^0,w,c
  6907   005E0C  A4D8               	btfss	status,2,c
  6908   005E0E  EF0B  F02F         	goto	u4081
  6909   005E12  EF0D  F02F         	goto	u4080
  6910   005E16                     u4081:
  6911   005E16  EFF0  F02E         	goto	l4832
  6912   005E1A                     u4080:
  6913   005E1A  0012               	return		;funcret
  6914   005E1C                     __end_of_memcpy:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _labs *****************
  6918 ;; Defined at:
  6919 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  a               4    0[COMRAM] long 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  4    0[COMRAM] long 
  6926 ;; Registers used:
  6927 ;;		wreg, status,2, status,0
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6933 ;;      Params:         4       0       0       0       0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6935 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6936 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6937 ;;Total ram usage:        8 bytes
  6938 ;; Hardware stack levels used: 1
  6939 ;; Hardware stack levels required when called: 2
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		_efgtoa
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text19
  6948   005A8E                     __ptext19:
  6949                           	callstack 0
  6950   005A8E                     _labs:
  6951                           	callstack 24
  6952   005A8E  BE04               	btfsc	(labs@a+3)^0,7,c
  6953   005A90  EF56  F02D         	goto	u3970
  6954   005A94  5004               	movf	(labs@a+3)^0,w,c
  6955   005A96  1003               	iorwf	(labs@a+2)^0,w,c
  6956   005A98  1002               	iorwf	(labs@a+1)^0,w,c
  6957   005A9A  E106               	bnz	u3971
  6958   005A9C  0401               	decf	labs@a^0,w,c
  6959   005A9E  B0D8               	btfsc	status,0,c
  6960   005AA0  EF54  F02D         	goto	u3971
  6961   005AA4  EF56  F02D         	goto	u3970
  6962   005AA8                     u3971:
  6963   005AA8  EF71  F02D         	goto	l1455
  6964   005AAC                     u3970:
  6965   005AAC  C001  F005         	movff	labs@a,??_labs
  6966   005AB0  C002  F006         	movff	labs@a+1,??_labs+1
  6967   005AB4  C003  F007         	movff	labs@a+2,??_labs+2
  6968   005AB8  C004  F008         	movff	labs@a+3,??_labs+3
  6969   005ABC  1E05               	comf	??_labs^0,f,c
  6970   005ABE  1E06               	comf	(??_labs+1)^0,f,c
  6971   005AC0  1E07               	comf	(??_labs+2)^0,f,c
  6972   005AC2  1E08               	comf	(??_labs+3)^0,f,c
  6973   005AC4  2A05               	incf	??_labs^0,f,c
  6974   005AC6  0E00               	movlw	0
  6975   005AC8  2206               	addwfc	(??_labs+1)^0,f,c
  6976   005ACA  2207               	addwfc	(??_labs+2)^0,f,c
  6977   005ACC  2208               	addwfc	(??_labs+3)^0,f,c
  6978   005ACE  C005  F001         	movff	??_labs,?_labs
  6979   005AD2  C006  F002         	movff	??_labs+1,?_labs+1
  6980   005AD6  C007  F003         	movff	??_labs+2,?_labs+2
  6981   005ADA  C008  F004         	movff	??_labs+3,?_labs+3
  6982   005ADE  EF79  F02D         	goto	l1458
  6983   005AE2                     l1455:
  6984   005AE2  C001  F001         	movff	labs@a,?_labs
  6985   005AE6  C002  F002         	movff	labs@a+1,?_labs+1
  6986   005AEA  C003  F003         	movff	labs@a+2,?_labs+2
  6987   005AEE  C004  F004         	movff	labs@a+3,?_labs+3
  6988   005AF2                     l1458:
  6989   005AF2  0012               	return		;funcret
  6990   005AF4                     __end_of_labs:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _floorf *****************
  6994 ;; Defined at:
  6995 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  x               4   78[COMRAM] float 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  u               4    6[BANK0 ] struct .
  7000 ;;  m               4    0[BANK0 ] unsigned long 
  7001 ;;  e               2    4[BANK0 ] int 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  4   78[COMRAM] float 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7011 ;;      Params:         4       0       0       0       0       0       0       0       0
  7012 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7013 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7014 ;;      Totals:        10      10       0       0       0       0       0       0       0
  7015 ;;Total ram usage:       20 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 2
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_efgtoa
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text20
  7026   003B7C                     __ptext20:
  7027                           	callstack 0
  7028   003B7C                     _floorf:
  7029                           	callstack 24
  7030   003B7C  C1CC  F066         	movff	floorf@F526,floorf@u
  7031   003B80  C1CD  F067         	movff	floorf@F526+1,floorf@u+1
  7032   003B84  C1CE  F068         	movff	floorf@F526+2,floorf@u+2
  7033   003B88  C1CF  F069         	movff	floorf@F526+3,floorf@u+3
  7034   003B8C  C04F  F066         	movff	floorf@x,floorf@u
  7035   003B90  C050  F067         	movff	floorf@x+1,floorf@u+1
  7036   003B94  C051  F068         	movff	floorf@x+2,floorf@u+2
  7037   003B98  C052  F069         	movff	floorf@x+3,floorf@u+3
  7038   003B9C  0E81               	movlw	129
  7039   003B9E  6E53               	movwf	??_floorf^0,c
  7040   003BA0  0EFF               	movlw	255
  7041   003BA2  6E54               	movwf	(??_floorf+1)^0,c
  7042   003BA4  C066  F055         	movff	floorf@u,??_floorf+2
  7043   003BA8  C067  F056         	movff	floorf@u+1,??_floorf+3
  7044   003BAC  C068  F057         	movff	floorf@u+2,??_floorf+4
  7045   003BB0  C069  F058         	movff	floorf@u+3,??_floorf+5
  7046   003BB4  0E18               	movlw	24
  7047   003BB6  EFE2  F01D         	goto	u3980
  7048   003BBA                     u3985:
  7049   003BBA  90D8               	bcf	status,0,c
  7050   003BBC  3258               	rrcf	(??_floorf+5)^0,f,c
  7051   003BBE  3257               	rrcf	(??_floorf+4)^0,f,c
  7052   003BC0  3256               	rrcf	(??_floorf+3)^0,f,c
  7053   003BC2  3255               	rrcf	(??_floorf+2)^0,f,c
  7054   003BC4                     u3980:
  7055   003BC4  2EE8               	decfsz	wreg,f,c
  7056   003BC6  EFDD  F01D         	goto	u3985
  7057   003BCA  5055               	movf	(??_floorf+2)^0,w,c
  7058   003BCC  2453               	addwf	??_floorf^0,w,c
  7059   003BCE  0100               	movlb	0	; () banked
  7060   003BD0  6F64               	movwf	floorf@e& (0+255),b
  7061   003BD2  0E00               	movlw	0
  7062   003BD4  2054               	addwfc	(??_floorf+1)^0,w,c
  7063   003BD6  6F65               	movwf	(floorf@e+1)& (0+255),b
  7064   003BD8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  7065   003BDA  EFF8  F01D         	goto	u3991
  7066   003BDE  5165               	movf	(floorf@e+1)& (0+255),w,b
  7067   003BE0  E109               	bnz	u3990
  7068   003BE2  0E17               	movlw	23
  7069   003BE4  5D64               	subwf	floorf@e& (0+255),w,b
  7070   003BE6  A0D8               	btfss	status,0,c
  7071   003BE8  EFF8  F01D         	goto	u3991
  7072   003BEC  EFFA  F01D         	goto	u3990
  7073   003BF0                     u3991:
  7074   003BF0  EF04  F01E         	goto	l4808
  7075   003BF4                     u3990:
  7076   003BF4                     l4806:
  7077                           
  7078                           ; BSR set to: 0
  7079   003BF4  C04F  F04F         	movff	floorf@x,?_floorf
  7080   003BF8  C050  F050         	movff	floorf@x+1,?_floorf+1
  7081   003BFC  C051  F051         	movff	floorf@x+2,?_floorf+2
  7082   003C00  C052  F052         	movff	floorf@x+3,?_floorf+3
  7083   003C04  EFC8  F01E         	goto	l1444
  7084   003C08                     l4808:
  7085                           
  7086                           ; BSR set to: 0
  7087   003C08  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  7088   003C0A  EF09  F01E         	goto	u4001
  7089   003C0E  EF0B  F01E         	goto	u4000
  7090   003C12                     u4001:
  7091   003C12  EF7C  F01E         	goto	l4818
  7092   003C16                     u4000:
  7093   003C16                     
  7094                           ; BSR set to: 0
  7095   003C16  C064  F053         	movff	floorf@e,??_floorf
  7096   003C1A  0EFF               	movlw	255
  7097   003C1C  6E54               	movwf	(??_floorf+1)^0,c
  7098   003C1E  0EFF               	movlw	255
  7099   003C20  6E55               	movwf	(??_floorf+2)^0,c
  7100   003C22  0E7F               	movlw	127
  7101   003C24  6E56               	movwf	(??_floorf+3)^0,c
  7102   003C26  0E00               	movlw	0
  7103   003C28  6E57               	movwf	(??_floorf+4)^0,c
  7104   003C2A                     u4015:
  7105   003C2A  6653               	tstfsz	??_floorf^0,c
  7106   003C2C  EF1A  F01E         	goto	u4016
  7107   003C30  EF22  F01E         	goto	u4017
  7108   003C34                     u4016:
  7109   003C34  3457               	rlcf	(??_floorf+4)^0,w,c
  7110   003C36  3257               	rrcf	(??_floorf+4)^0,f,c
  7111   003C38  3256               	rrcf	(??_floorf+3)^0,f,c
  7112   003C3A  3255               	rrcf	(??_floorf+2)^0,f,c
  7113   003C3C  3254               	rrcf	(??_floorf+1)^0,f,c
  7114   003C3E  2E53               	decfsz	??_floorf^0,f,c
  7115   003C40  EF15  F01E         	goto	u4015
  7116   003C44                     u4017:
  7117   003C44  C054  F060         	movff	??_floorf+1,floorf@m
  7118   003C48  C055  F061         	movff	??_floorf+2,floorf@m+1
  7119   003C4C  C056  F062         	movff	??_floorf+3,floorf@m+2
  7120   003C50  C057  F063         	movff	??_floorf+4,floorf@m+3
  7121   003C54  0100               	movlb	0	; () banked
  7122   003C56  5160               	movf	floorf@m& (0+255),w,b
  7123   003C58  1566               	andwf	floorf@u& (0+255),w,b
  7124   003C5A  6E53               	movwf	??_floorf^0,c
  7125   003C5C  5161               	movf	(floorf@m+1)& (0+255),w,b
  7126   003C5E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  7127   003C60  6E54               	movwf	(??_floorf+1)^0,c
  7128   003C62  5162               	movf	(floorf@m+2)& (0+255),w,b
  7129   003C64  1568               	andwf	(floorf@u+2)& (0+255),w,b
  7130   003C66  6E55               	movwf	(??_floorf+2)^0,c
  7131   003C68  5163               	movf	(floorf@m+3)& (0+255),w,b
  7132   003C6A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  7133   003C6C  6E56               	movwf	(??_floorf+3)^0,c
  7134   003C6E  5053               	movf	??_floorf^0,w,c
  7135   003C70  1054               	iorwf	(??_floorf+1)^0,w,c
  7136   003C72  1055               	iorwf	(??_floorf+2)^0,w,c
  7137   003C74  1056               	iorwf	(??_floorf+3)^0,w,c
  7138   003C76  A4D8               	btfss	status,2,c
  7139   003C78  EF40  F01E         	goto	u4021
  7140   003C7C  EF42  F01E         	goto	u4020
  7141   003C80                     u4021:
  7142   003C80  EF44  F01E         	goto	l4814
  7143   003C84                     u4020:
  7144   003C84  EFFA  F01D         	goto	l4806
  7145   003C88                     l4814:
  7146                           
  7147                           ; BSR set to: 0
  7148   003C88  C066  F053         	movff	floorf@u,??_floorf
  7149   003C8C  C067  F054         	movff	floorf@u+1,??_floorf+1
  7150   003C90  C068  F055         	movff	floorf@u+2,??_floorf+2
  7151   003C94  C069  F056         	movff	floorf@u+3,??_floorf+3
  7152   003C98  0E20               	movlw	32
  7153   003C9A  EF54  F01E         	goto	u4030
  7154   003C9E                     u4035:
  7155   003C9E  90D8               	bcf	status,0,c
  7156   003CA0  3256               	rrcf	(??_floorf+3)^0,f,c
  7157   003CA2  3255               	rrcf	(??_floorf+2)^0,f,c
  7158   003CA4  3254               	rrcf	(??_floorf+1)^0,f,c
  7159   003CA6  3253               	rrcf	??_floorf^0,f,c
  7160   003CA8                     u4030:
  7161   003CA8  2EE8               	decfsz	wreg,f,c
  7162   003CAA  EF4F  F01E         	goto	u4035
  7163   003CAE  5053               	movf	??_floorf^0,w,c
  7164   003CB0  1054               	iorwf	(??_floorf+1)^0,w,c
  7165   003CB2  1055               	iorwf	(??_floorf+2)^0,w,c
  7166   003CB4  1056               	iorwf	(??_floorf+3)^0,w,c
  7167   003CB6  B4D8               	btfsc	status,2,c
  7168   003CB8  EF60  F01E         	goto	u4041
  7169   003CBC  EF62  F01E         	goto	u4040
  7170   003CC0                     u4041:
  7171   003CC0  EF6A  F01E         	goto	l1447
  7172   003CC4                     u4040:
  7173   003CC4                     
  7174                           ; BSR set to: 0
  7175   003CC4  5160               	movf	floorf@m& (0+255),w,b
  7176   003CC6  2766               	addwf	floorf@u& (0+255),f,b
  7177   003CC8  5161               	movf	(floorf@m+1)& (0+255),w,b
  7178   003CCA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  7179   003CCC  5162               	movf	(floorf@m+2)& (0+255),w,b
  7180   003CCE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  7181   003CD0  5163               	movf	(floorf@m+3)& (0+255),w,b
  7182   003CD2  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  7183   003CD4                     l1447:
  7184                           
  7185                           ; BSR set to: 0
  7186   003CD4  1D60               	comf	floorf@m& (0+255),w,b
  7187   003CD6  6E53               	movwf	??_floorf^0,c
  7188   003CD8  1D61               	comf	(floorf@m+1)& (0+255),w,b
  7189   003CDA  6E54               	movwf	(??_floorf+1)^0,c
  7190   003CDC  1D62               	comf	(floorf@m+2)& (0+255),w,b
  7191   003CDE  6E55               	movwf	(??_floorf+2)^0,c
  7192   003CE0  1D63               	comf	(floorf@m+3)& (0+255),w,b
  7193   003CE2  6E56               	movwf	(??_floorf+3)^0,c
  7194   003CE4  5053               	movf	??_floorf^0,w,c
  7195   003CE6  1766               	andwf	floorf@u& (0+255),f,b
  7196   003CE8  5054               	movf	(??_floorf+1)^0,w,c
  7197   003CEA  1767               	andwf	(floorf@u+1)& (0+255),f,b
  7198   003CEC  5055               	movf	(??_floorf+2)^0,w,c
  7199   003CEE  1768               	andwf	(floorf@u+2)& (0+255),f,b
  7200   003CF0  5056               	movf	(??_floorf+3)^0,w,c
  7201   003CF2  1769               	andwf	(floorf@u+3)& (0+255),f,b
  7202   003CF4  EFC0  F01E         	goto	l4826
  7203   003CF8                     l4818:
  7204                           
  7205                           ; BSR set to: 0
  7206   003CF8  C066  F053         	movff	floorf@u,??_floorf
  7207   003CFC  C067  F054         	movff	floorf@u+1,??_floorf+1
  7208   003D00  C068  F055         	movff	floorf@u+2,??_floorf+2
  7209   003D04  C069  F056         	movff	floorf@u+3,??_floorf+3
  7210   003D08  0E20               	movlw	32
  7211   003D0A  EF8C  F01E         	goto	u4050
  7212   003D0E                     u4055:
  7213   003D0E  90D8               	bcf	status,0,c
  7214   003D10  3256               	rrcf	(??_floorf+3)^0,f,c
  7215   003D12  3255               	rrcf	(??_floorf+2)^0,f,c
  7216   003D14  3254               	rrcf	(??_floorf+1)^0,f,c
  7217   003D16  3253               	rrcf	??_floorf^0,f,c
  7218   003D18                     u4050:
  7219   003D18  2EE8               	decfsz	wreg,f,c
  7220   003D1A  EF87  F01E         	goto	u4055
  7221   003D1E  5053               	movf	??_floorf^0,w,c
  7222   003D20  1054               	iorwf	(??_floorf+1)^0,w,c
  7223   003D22  1055               	iorwf	(??_floorf+2)^0,w,c
  7224   003D24  1056               	iorwf	(??_floorf+3)^0,w,c
  7225   003D26  A4D8               	btfss	status,2,c
  7226   003D28  EF98  F01E         	goto	u4061
  7227   003D2C  EF9A  F01E         	goto	u4060
  7228   003D30                     u4061:
  7229   003D30  EFA4  F01E         	goto	l4822
  7230   003D34                     u4060:
  7231   003D34                     
  7232                           ; BSR set to: 0
  7233   003D34  0E00               	movlw	0
  7234   003D36  6F66               	movwf	floorf@u& (0+255),b
  7235   003D38  0E00               	movlw	0
  7236   003D3A  6F67               	movwf	(floorf@u+1)& (0+255),b
  7237   003D3C  0E00               	movlw	0
  7238   003D3E  6F68               	movwf	(floorf@u+2)& (0+255),b
  7239   003D40  0E00               	movlw	0
  7240   003D42  6F69               	movwf	(floorf@u+3)& (0+255),b
  7241   003D44  EFC0  F01E         	goto	l4826
  7242   003D48                     l4822:
  7243                           
  7244                           ; BSR set to: 0
  7245   003D48  90D8               	bcf	status,0,c
  7246   003D4A  3566               	rlcf	floorf@u& (0+255),w,b
  7247   003D4C  6E53               	movwf	??_floorf^0,c
  7248   003D4E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  7249   003D50  6E54               	movwf	(??_floorf+1)^0,c
  7250   003D52  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  7251   003D54  6E55               	movwf	(??_floorf+2)^0,c
  7252   003D56  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  7253   003D58  6E56               	movwf	(??_floorf+3)^0,c
  7254   003D5A  5053               	movf	??_floorf^0,w,c
  7255   003D5C  1054               	iorwf	(??_floorf+1)^0,w,c
  7256   003D5E  1055               	iorwf	(??_floorf+2)^0,w,c
  7257   003D60  1056               	iorwf	(??_floorf+3)^0,w,c
  7258   003D62  B4D8               	btfsc	status,2,c
  7259   003D64  EFB6  F01E         	goto	u4071
  7260   003D68  EFB8  F01E         	goto	u4070
  7261   003D6C                     u4071:
  7262   003D6C  EFC0  F01E         	goto	l4826
  7263   003D70                     u4070:
  7264   003D70                     
  7265                           ; BSR set to: 0
  7266   003D70  0E00               	movlw	0
  7267   003D72  6F66               	movwf	floorf@u& (0+255),b
  7268   003D74  0E00               	movlw	0
  7269   003D76  6F67               	movwf	(floorf@u+1)& (0+255),b
  7270   003D78  0E80               	movlw	128
  7271   003D7A  6F68               	movwf	(floorf@u+2)& (0+255),b
  7272   003D7C  0EBF               	movlw	191
  7273   003D7E  6F69               	movwf	(floorf@u+3)& (0+255),b
  7274   003D80                     l4826:
  7275                           
  7276                           ; BSR set to: 0
  7277   003D80  C066  F04F         	movff	floorf@u,?_floorf
  7278   003D84  C067  F050         	movff	floorf@u+1,?_floorf+1
  7279   003D88  C068  F051         	movff	floorf@u+2,?_floorf+2
  7280   003D8C  C069  F052         	movff	floorf@u+3,?_floorf+3
  7281   003D90                     l1444:
  7282                           
  7283                           ; BSR set to: 0
  7284   003D90  0012               	return		;funcret
  7285   003D92                     __end_of_floorf:
  7286                           	callstack 0
  7287                           
  7288 ;; *************** function ___fpclassifyf *****************
  7289 ;; Defined at:
  7290 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  x               4    0[COMRAM] float 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  u               4   10[COMRAM] struct .
  7295 ;;  e               2    8[COMRAM] int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2    0[COMRAM] int 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7305 ;;      Params:         4       0       0       0       0       0       0       0       0
  7306 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7308 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:       14 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 2
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_efgtoa
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	text21
  7320   004A02                     __ptext21:
  7321                           	callstack 0
  7322   004A02                     ___fpclassifyf:
  7323                           	callstack 24
  7324   004A02  C0CF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7325   004A06  C0D0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7326   004A0A  C0D1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7327   004A0E  C0D2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7328   004A12  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7329   004A16  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7330   004A1A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7331   004A1E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7332   004A22  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7333   004A26  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7334   004A2A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7335   004A2E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7336   004A32  0E18               	movlw	24
  7337   004A34  EF21  F025         	goto	u3890
  7338   004A38                     u3895:
  7339   004A38  90D8               	bcf	status,0,c
  7340   004A3A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7341   004A3C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7342   004A3E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7343   004A40  3205               	rrcf	??___fpclassifyf^0,f,c
  7344   004A42                     u3890:
  7345   004A42  2EE8               	decfsz	wreg,f,c
  7346   004A44  EF1C  F025         	goto	u3895
  7347   004A48  5005               	movf	??___fpclassifyf^0,w,c
  7348   004A4A  6E09               	movwf	___fpclassifyf@e^0,c
  7349   004A4C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7350   004A4E  5009               	movf	___fpclassifyf@e^0,w,c
  7351   004A50  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7352   004A52  A4D8               	btfss	status,2,c
  7353   004A54  EF2E  F025         	goto	u3901
  7354   004A58  EF30  F025         	goto	u3900
  7355   004A5C                     u3901:
  7356   004A5C  EF50  F025         	goto	l4784
  7357   004A60                     u3900:
  7358   004A60  90D8               	bcf	status,0,c
  7359   004A62  340B               	rlcf	___fpclassifyf@u^0,w,c
  7360   004A64  6E05               	movwf	??___fpclassifyf^0,c
  7361   004A66  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7362   004A68  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7363   004A6A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7364   004A6C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7365   004A6E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7366   004A70  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7367   004A72  5005               	movf	??___fpclassifyf^0,w,c
  7368   004A74  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7369   004A76  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7370   004A78  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7371   004A7A  A4D8               	btfss	status,2,c
  7372   004A7C  EF42  F025         	goto	u3911
  7373   004A80  EF44  F025         	goto	u3910
  7374   004A84                     u3911:
  7375   004A84  EF4A  F025         	goto	l4780
  7376   004A88                     u3910:
  7377   004A88  0E00               	movlw	0
  7378   004A8A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7379   004A8C  0E02               	movlw	2
  7380   004A8E  6E01               	movwf	?___fpclassifyf^0,c
  7381   004A90  EF7F  F025         	goto	l1412
  7382   004A94                     l4780:
  7383   004A94  0E00               	movlw	0
  7384   004A96  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7385   004A98  0E03               	movlw	3
  7386   004A9A  6E01               	movwf	?___fpclassifyf^0,c
  7387   004A9C  EF7F  F025         	goto	l1412
  7388   004AA0                     l4784:
  7389   004AA0  2809               	incf	___fpclassifyf@e^0,w,c
  7390   004AA2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7391   004AA4  A4D8               	btfss	status,2,c
  7392   004AA6  EF57  F025         	goto	u3921
  7393   004AAA  EF59  F025         	goto	u3920
  7394   004AAE                     u3921:
  7395   004AAE  EF7B  F025         	goto	l4790
  7396   004AB2                     u3920:
  7397   004AB2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7398   004AB6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7399   004ABA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7400   004ABE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7401   004AC2  0E09               	movlw	9
  7402   004AC4                     u3935:
  7403   004AC4  90D8               	bcf	status,0,c
  7404   004AC6  3605               	rlcf	??___fpclassifyf^0,f,c
  7405   004AC8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7406   004ACA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7407   004ACC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7408   004ACE  2EE8               	decfsz	wreg,f,c
  7409   004AD0  EF62  F025         	goto	u3935
  7410   004AD4  5005               	movf	??___fpclassifyf^0,w,c
  7411   004AD6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7412   004AD8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7413   004ADA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7414   004ADC  B4D8               	btfsc	status,2,c
  7415   004ADE  EF73  F025         	goto	u3941
  7416   004AE2  EF76  F025         	goto	u3940
  7417   004AE6                     u3941:
  7418   004AE6  0E01               	movlw	1
  7419   004AE8  EF77  F025         	goto	u3950
  7420   004AEC                     u3940:
  7421   004AEC  0E00               	movlw	0
  7422   004AEE                     u3950:
  7423   004AEE  6E01               	movwf	?___fpclassifyf^0,c
  7424   004AF0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7425   004AF2  EF7F  F025         	goto	l1412
  7426   004AF6                     l4790:
  7427   004AF6  0E00               	movlw	0
  7428   004AF8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7429   004AFA  0E04               	movlw	4
  7430   004AFC  6E01               	movwf	?___fpclassifyf^0,c
  7431   004AFE                     l1412:
  7432   004AFE  0012               	return		;funcret
  7433   004B00                     __end_of___fpclassifyf:
  7434                           	callstack 0
  7435                           
  7436 ;; *************** function ___fltol *****************
  7437 ;; Defined at:
  7438 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  f1              4    0[COMRAM] int 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  exp1            1    9[COMRAM] unsigned char 
  7443 ;;  sign1           1    8[COMRAM] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  4    0[COMRAM] long 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7453 ;;      Params:         4       0       0       0       0       0       0       0       0
  7454 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7455 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7456 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7457 ;;Total ram usage:       10 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; Hardware stack levels required when called: 2
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_main
  7464 ;;		_efgtoa
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text22
  7469   0047F8                     __ptext22:
  7470                           	callstack 0
  7471   0047F8                     ___fltol:
  7472                           	callstack 24
  7473   0047F8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7474   0047FA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7475   0047FC  6E0A               	movwf	___fltol@exp1^0,c
  7476   0047FE  500A               	movf	___fltol@exp1^0,w,c
  7477   004800  A4D8               	btfss	status,2,c
  7478   004802  EF05  F024         	goto	u3671
  7479   004806  EF07  F024         	goto	u3670
  7480   00480A                     u3671:
  7481   00480A  EF11  F024         	goto	l4662
  7482   00480E                     u3670:
  7483   00480E                     l4658:
  7484   00480E  0E00               	movlw	0
  7485   004810  6E01               	movwf	?___fltol^0,c
  7486   004812  0E00               	movlw	0
  7487   004814  6E02               	movwf	(?___fltol+1)^0,c
  7488   004816  0E00               	movlw	0
  7489   004818  6E03               	movwf	(?___fltol+2)^0,c
  7490   00481A  0E00               	movlw	0
  7491   00481C  6E04               	movwf	(?___fltol+3)^0,c
  7492   00481E  EF7E  F024         	goto	l814
  7493   004822                     l4662:
  7494   004822  C001  F005         	movff	___fltol@f1,??___fltol
  7495   004826  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7496   00482A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7497   00482E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7498   004832  0E20               	movlw	32
  7499   004834  EF21  F024         	goto	u3680
  7500   004838                     u3685:
  7501   004838  90D8               	bcf	status,0,c
  7502   00483A  3208               	rrcf	(??___fltol+3)^0,f,c
  7503   00483C  3207               	rrcf	(??___fltol+2)^0,f,c
  7504   00483E  3206               	rrcf	(??___fltol+1)^0,f,c
  7505   004840  3205               	rrcf	??___fltol^0,f,c
  7506   004842                     u3680:
  7507   004842  2EE8               	decfsz	wreg,f,c
  7508   004844  EF1C  F024         	goto	u3685
  7509   004848  5005               	movf	??___fltol^0,w,c
  7510   00484A  6E09               	movwf	___fltol@sign1^0,c
  7511   00484C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7512   00484E  0EFF               	movlw	255
  7513   004850  1601               	andwf	___fltol@f1^0,f,c
  7514   004852  0EFF               	movlw	255
  7515   004854  1602               	andwf	(___fltol@f1+1)^0,f,c
  7516   004856  0EFF               	movlw	255
  7517   004858  1603               	andwf	(___fltol@f1+2)^0,f,c
  7518   00485A  0E00               	movlw	0
  7519   00485C  1604               	andwf	(___fltol@f1+3)^0,f,c
  7520   00485E  0E96               	movlw	150
  7521   004860  5E0A               	subwf	___fltol@exp1^0,f,c
  7522   004862  BE0A               	btfsc	___fltol@exp1^0,7,c
  7523   004864  EF38  F024         	goto	u3690
  7524   004868  EF36  F024         	goto	u3691
  7525   00486C                     u3691:
  7526   00486C  EF4E  F024         	goto	l4682
  7527   004870                     u3690:
  7528   004870  500A               	movf	___fltol@exp1^0,w,c
  7529   004872  0A80               	xorlw	128
  7530   004874  0F97               	addlw	151
  7531   004876  B0D8               	btfsc	status,0,c
  7532   004878  EF40  F024         	goto	u3701
  7533   00487C  EF42  F024         	goto	u3700
  7534   004880                     u3701:
  7535   004880  EF44  F024         	goto	l4678
  7536   004884                     u3700:
  7537   004884  EF07  F024         	goto	l4658
  7538   004888                     l4678:
  7539   004888  90D8               	bcf	status,0,c
  7540   00488A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7541   00488C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7542   00488E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7543   004890  3201               	rrcf	___fltol@f1^0,f,c
  7544   004892  3E0A               	incfsz	___fltol@exp1^0,f,c
  7545   004894  EF44  F024         	goto	l4678
  7546   004898  EF66  F024         	goto	l4692
  7547   00489C                     l4682:
  7548   00489C  0E1F               	movlw	31
  7549   00489E  640A               	cpfsgt	___fltol@exp1^0,c
  7550   0048A0  EF54  F024         	goto	u3711
  7551   0048A4  EF56  F024         	goto	u3710
  7552   0048A8                     u3711:
  7553   0048A8  EF5E  F024         	goto	l4690
  7554   0048AC                     u3710:
  7555   0048AC  EF07  F024         	goto	l4658
  7556   0048B0                     l4688:
  7557   0048B0  90D8               	bcf	status,0,c
  7558   0048B2  3601               	rlcf	___fltol@f1^0,f,c
  7559   0048B4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7560   0048B6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7561   0048B8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7562   0048BA  060A               	decf	___fltol@exp1^0,f,c
  7563   0048BC                     l4690:
  7564   0048BC  500A               	movf	___fltol@exp1^0,w,c
  7565   0048BE  A4D8               	btfss	status,2,c
  7566   0048C0  EF64  F024         	goto	u3721
  7567   0048C4  EF66  F024         	goto	u3720
  7568   0048C8                     u3721:
  7569   0048C8  EF58  F024         	goto	l4688
  7570   0048CC                     u3720:
  7571   0048CC                     l4692:
  7572   0048CC  5009               	movf	___fltol@sign1^0,w,c
  7573   0048CE  B4D8               	btfsc	status,2,c
  7574   0048D0  EF6C  F024         	goto	u3731
  7575   0048D4  EF6E  F024         	goto	u3730
  7576   0048D8                     u3731:
  7577   0048D8  EF76  F024         	goto	l4696
  7578   0048DC                     u3730:
  7579   0048DC  1E04               	comf	(___fltol@f1+3)^0,f,c
  7580   0048DE  1E03               	comf	(___fltol@f1+2)^0,f,c
  7581   0048E0  1E02               	comf	(___fltol@f1+1)^0,f,c
  7582   0048E2  6C01               	negf	___fltol@f1^0,c
  7583   0048E4  0E00               	movlw	0
  7584   0048E6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7585   0048E8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7586   0048EA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7587   0048EC                     l4696:
  7588   0048EC  C001  F001         	movff	___fltol@f1,?___fltol
  7589   0048F0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7590   0048F4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7591   0048F8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7592   0048FC                     l814:
  7593   0048FC  0012               	return		;funcret
  7594   0048FE                     __end_of___fltol:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function ___flneg *****************
  7598 ;; Defined at:
  7599 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  f1              4    0[COMRAM] long 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  4    0[COMRAM] long 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7613 ;;      Params:         4       0       0       0       0       0       0       0       0
  7614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7616 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7617 ;;Total ram usage:        4 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; Hardware stack levels required when called: 2
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_efgtoa
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text23
  7628   005FB2                     __ptext23:
  7629                           	callstack 0
  7630   005FB2                     ___flneg:
  7631                           	callstack 24
  7632   005FB2  5001               	movf	___flneg@f1^0,w,c
  7633   005FB4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7634   005FB6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7635   005FB8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7636   005FBA  B4D8               	btfsc	status,2,c
  7637   005FBC  EFE2  F02F         	goto	u3661
  7638   005FC0  EFE4  F02F         	goto	u3660
  7639   005FC4                     u3661:
  7640   005FC4  EFEC  F02F         	goto	l4652
  7641   005FC8                     u3660:
  7642   005FC8  0E00               	movlw	0
  7643   005FCA  1A01               	xorwf	___flneg@f1^0,f,c
  7644   005FCC  0E00               	movlw	0
  7645   005FCE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7646   005FD0  0E00               	movlw	0
  7647   005FD2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7648   005FD4  0E80               	movlw	128
  7649   005FD6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7650   005FD8                     l4652:
  7651   005FD8  C001  F001         	movff	___flneg@f1,?___flneg
  7652   005FDC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7653   005FE0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7654   005FE4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7655   005FE8  0012               	return		;funcret
  7656   005FEA                     __end_of___flneg:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _atoi *****************
  7660 ;; Defined at:
  7661 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7664 ;;		 -> STR_17(20), STR_16(20), STR_15(7), STR_14(9), 
  7665 ;;		 -> STR_13(6), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  n               2   13[COMRAM] int 
  7668 ;;  neg             2   11[COMRAM] int 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  2    6[COMRAM] int 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7678 ;;      Params:         2       0       0       0       0       0       0       0       0
  7679 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7680 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7681 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7682 ;;Total ram usage:        9 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 3
  7685 ;; This function calls:
  7686 ;;		___wmul
  7687 ;;		_isdigit
  7688 ;;		_isspace
  7689 ;; This function is called by:
  7690 ;;		_vfpfcnvrt
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text24
  7695   0046AE                     __ptext24:
  7696                           	callstack 0
  7697   0046AE                     _atoi:
  7698                           	callstack 24
  7699   0046AE  0E00               	movlw	0
  7700   0046B0  6E0F               	movwf	(atoi@n+1)^0,c
  7701   0046B2  0E00               	movlw	0
  7702   0046B4  6E0E               	movwf	atoi@n^0,c
  7703   0046B6  0E00               	movlw	0
  7704   0046B8  6E0D               	movwf	(atoi@neg+1)^0,c
  7705   0046BA  0E00               	movlw	0
  7706   0046BC  6E0C               	movwf	atoi@neg^0,c
  7707   0046BE  EF63  F023         	goto	l5118
  7708   0046C2                     l5114:
  7709   0046C2  4A07               	infsnz	atoi@s^0,f,c
  7710   0046C4  2A08               	incf	(atoi@s+1)^0,f,c
  7711   0046C6                     l5118:
  7712   0046C6  C007  FFF6         	movff	atoi@s,tblptrl
  7713   0046CA  C008  FFF7         	movff	atoi@s+1,tblptrh
  7714   0046CE                     	if	0	;tblptru may be non-zero
  7715   0046CE                     	endif
  7716   0046CE                     	if	0	;tblptru may be non-zero
  7717   0046CE                     	endif
  7718   0046CE  0008               	tblrd		*
  7719   0046D0  50F5               	movf	tablat,w,c
  7720   0046D2  0A20               	xorlw	32
  7721   0046D4  B4D8               	btfsc	status,2,c
  7722   0046D6  EF6F  F023         	goto	u4511
  7723   0046DA  EF71  F023         	goto	u4510
  7724   0046DE                     u4511:
  7725   0046DE  EF61  F023         	goto	l5114
  7726   0046E2                     u4510:
  7727   0046E2  C007  FFF6         	movff	atoi@s,tblptrl
  7728   0046E6  C008  FFF7         	movff	atoi@s+1,tblptrh
  7729   0046EA                     	if	0	;tblptru may be non-zero
  7730   0046EA                     	endif
  7731   0046EA                     	if	0	;tblptru may be non-zero
  7732   0046EA                     	endif
  7733   0046EA  0008               	tblrd		*
  7734   0046EC  CFF5 F009          	movff	tablat,??_atoi
  7735   0046F0  0EF7               	movlw	247
  7736   0046F2  2409               	addwf	??_atoi^0,w,c
  7737   0046F4  6E0A               	movwf	(??_atoi+1)^0,c
  7738   0046F6  6A0B               	clrf	(??_atoi+2)^0,c
  7739   0046F8  0EFF               	movlw	255
  7740   0046FA  220B               	addwfc	(??_atoi+2)^0,f,c
  7741   0046FC  500B               	movf	(??_atoi+2)^0,w,c
  7742   0046FE  E109               	bnz	u4520
  7743   004700  0E05               	movlw	5
  7744   004702  5C0A               	subwf	(??_atoi+1)^0,w,c
  7745   004704  A0D8               	btfss	status,0,c
  7746   004706  EF87  F023         	goto	u4521
  7747   00470A  EF89  F023         	goto	u4520
  7748   00470E                     u4521:
  7749   00470E  EF61  F023         	goto	l5114
  7750   004712                     u4520:
  7751   004712  EF93  F023         	goto	l5126
  7752   004716                     l5122:
  7753   004716  0E00               	movlw	0
  7754   004718  6E0D               	movwf	(atoi@neg+1)^0,c
  7755   00471A  0E01               	movlw	1
  7756   00471C  6E0C               	movwf	atoi@neg^0,c
  7757   00471E                     l5124:
  7758   00471E  4A07               	infsnz	atoi@s^0,f,c
  7759   004720  2A08               	incf	(atoi@s+1)^0,f,c
  7760   004722  EFC8  F023         	goto	l5134
  7761   004726                     l5126:
  7762   004726  C007  FFF6         	movff	atoi@s,tblptrl
  7763   00472A  C008  FFF7         	movff	atoi@s+1,tblptrh
  7764   00472E                     	if	0	;tblptru may be non-zero
  7765   00472E                     	endif
  7766   00472E                     	if	0	;tblptru may be non-zero
  7767   00472E                     	endif
  7768   00472E  0008               	tblrd		*
  7769   004730  50F5               	movf	tablat,w,c
  7770   004732  6E09               	movwf	??_atoi^0,c
  7771   004734  6A0A               	clrf	(??_atoi+1)^0,c
  7772                           
  7773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7774                           ; Switch size 1, requested type "simple"
  7775                           ; Number of cases is 1, Range of values is 0 to 0
  7776                           ; switch strategies available:
  7777                           ; Name         Instructions Cycles
  7778                           ; simple_byte            4     3 (average)
  7779                           ;	Chosen strategy is simple_byte
  7780   004736  500A               	movf	(??_atoi+1)^0,w,c
  7781   004738  0A00               	xorlw	0	; case 0
  7782   00473A  B4D8               	btfsc	status,2,c
  7783   00473C  EFA2  F023         	goto	l6666
  7784   004740  EFC8  F023         	goto	l5134
  7785   004744                     l6666:
  7786                           
  7787                           ; Switch size 1, requested type "simple"
  7788                           ; Number of cases is 2, Range of values is 43 to 45
  7789                           ; switch strategies available:
  7790                           ; Name         Instructions Cycles
  7791                           ; simple_byte            7     4 (average)
  7792                           ;	Chosen strategy is simple_byte
  7793   004744  5009               	movf	??_atoi^0,w,c
  7794   004746  0A2B               	xorlw	43	; case 43
  7795   004748  B4D8               	btfsc	status,2,c
  7796   00474A  EF8F  F023         	goto	l5124
  7797   00474E  0A06               	xorlw	6	; case 45
  7798   004750  B4D8               	btfsc	status,2,c
  7799   004752  EF8B  F023         	goto	l5122
  7800   004756  EFC8  F023         	goto	l5134
  7801   00475A                     l5128:
  7802   00475A  C00E  F001         	movff	atoi@n,___wmul@multiplier
  7803   00475E  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7804   004762  0E00               	movlw	0
  7805   004764  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7806   004766  0E0A               	movlw	10
  7807   004768  6E03               	movwf	___wmul@multiplicand^0,c
  7808   00476A  EC3F  F030         	call	___wmul	;wreg free
  7809   00476E  C007  FFF6         	movff	atoi@s,tblptrl
  7810   004772  C008  FFF7         	movff	atoi@s+1,tblptrh
  7811   004776                     	if	0	;tblptru may be non-zero
  7812   004776                     	endif
  7813   004776                     	if	0	;tblptru may be non-zero
  7814   004776                     	endif
  7815   004776  0008               	tblrd		*
  7816   004778  50F5               	movf	tablat,w,c
  7817   00477A  5E01               	subwf	?___wmul^0,f,c
  7818   00477C  0E00               	movlw	0
  7819   00477E  5A02               	subwfb	(?___wmul+1)^0,f,c
  7820   004780  0E30               	movlw	48
  7821   004782  2401               	addwf	?___wmul^0,w,c
  7822   004784  6E0E               	movwf	atoi@n^0,c
  7823   004786  0E00               	movlw	0
  7824   004788  2002               	addwfc	(?___wmul+1)^0,w,c
  7825   00478A  6E0F               	movwf	(atoi@n+1)^0,c
  7826   00478C  EF8F  F023         	goto	l5124
  7827   004790                     l5134:
  7828   004790  C007  FFF6         	movff	atoi@s,tblptrl
  7829   004794  C008  FFF7         	movff	atoi@s+1,tblptrh
  7830   004798                     	if	0	;tblptru may be non-zero
  7831   004798                     	endif
  7832   004798                     	if	0	;tblptru may be non-zero
  7833   004798                     	endif
  7834   004798  0008               	tblrd		*
  7835   00479A  CFF5 F009          	movff	tablat,??_atoi
  7836   00479E  0ED0               	movlw	208
  7837   0047A0  2409               	addwf	??_atoi^0,w,c
  7838   0047A2  6E0A               	movwf	(??_atoi+1)^0,c
  7839   0047A4  6A0B               	clrf	(??_atoi+2)^0,c
  7840   0047A6  0EFF               	movlw	255
  7841   0047A8  220B               	addwfc	(??_atoi+2)^0,f,c
  7842   0047AA  500B               	movf	(??_atoi+2)^0,w,c
  7843   0047AC  E109               	bnz	u4530
  7844   0047AE  0E0A               	movlw	10
  7845   0047B0  5C0A               	subwf	(??_atoi+1)^0,w,c
  7846   0047B2  A0D8               	btfss	status,0,c
  7847   0047B4  EFDE  F023         	goto	u4531
  7848   0047B8  EFE0  F023         	goto	u4530
  7849   0047BC                     u4531:
  7850   0047BC  EFAD  F023         	goto	l5128
  7851   0047C0                     u4530:
  7852   0047C0  500C               	movf	atoi@neg^0,w,c
  7853   0047C2  100D               	iorwf	(atoi@neg+1)^0,w,c
  7854   0047C4  A4D8               	btfss	status,2,c
  7855   0047C6  EFE7  F023         	goto	u4541
  7856   0047CA  EFE9  F023         	goto	u4540
  7857   0047CE                     u4541:
  7858   0047CE  EFF7  F023         	goto	l1435
  7859   0047D2                     u4540:
  7860   0047D2  C00E  F009         	movff	atoi@n,??_atoi
  7861   0047D6  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  7862   0047DA  1E09               	comf	??_atoi^0,f,c
  7863   0047DC  1E0A               	comf	(??_atoi+1)^0,f,c
  7864   0047DE  4A09               	infsnz	??_atoi^0,f,c
  7865   0047E0  2A0A               	incf	(??_atoi+1)^0,f,c
  7866   0047E2  C009  F007         	movff	??_atoi,?_atoi
  7867   0047E6  C00A  F008         	movff	??_atoi+1,?_atoi+1
  7868   0047EA  EFFB  F023         	goto	l1438
  7869   0047EE                     l1435:
  7870   0047EE  C00E  F007         	movff	atoi@n,?_atoi
  7871   0047F2  C00F  F008         	movff	atoi@n+1,?_atoi+1
  7872   0047F6                     l1438:
  7873   0047F6  0012               	return		;funcret
  7874   0047F8                     __end_of_atoi:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function _isspace *****************
  7878 ;; Defined at:
  7879 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  c               2    0[COMRAM] int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  2    0[COMRAM] int 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7893 ;;      Params:         2       0       0       0       0       0       0       0       0
  7894 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7895 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7896 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7897 ;;Total ram usage:        5 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 2
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_atol
  7904 ;;		_atoi
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text25
  7909   005E64                     __ptext25:
  7910                           	callstack 0
  7911   005E64                     _isspace:
  7912                           	callstack 24
  7913   005E64  0E01               	movlw	1
  7914   005E66  6E05               	movwf	_isspace$1790^0,c
  7915   005E68  0E20               	movlw	32
  7916   005E6A  1801               	xorwf	isspace@c^0,w,c
  7917   005E6C  1002               	iorwf	(isspace@c+1)^0,w,c
  7918   005E6E  B4D8               	btfsc	status,2,c
  7919   005E70  EF3C  F02F         	goto	u3811
  7920   005E74  EF3E  F02F         	goto	u3810
  7921   005E78                     u3811:
  7922   005E78  EF51  F02F         	goto	l4746
  7923   005E7C                     u3810:
  7924   005E7C  0EF7               	movlw	247
  7925   005E7E  2401               	addwf	isspace@c^0,w,c
  7926   005E80  6E03               	movwf	??_isspace^0,c
  7927   005E82  0EFF               	movlw	255
  7928   005E84  2002               	addwfc	(isspace@c+1)^0,w,c
  7929   005E86  6E04               	movwf	(??_isspace+1)^0,c
  7930   005E88  5004               	movf	(??_isspace+1)^0,w,c
  7931   005E8A  E109               	bnz	u3820
  7932   005E8C  0E05               	movlw	5
  7933   005E8E  5C03               	subwf	??_isspace^0,w,c
  7934   005E90  A0D8               	btfss	status,0,c
  7935   005E92  EF4D  F02F         	goto	u3821
  7936   005E96  EF4F  F02F         	goto	u3820
  7937   005E9A                     u3821:
  7938   005E9A  EF51  F02F         	goto	l4746
  7939   005E9E                     u3820:
  7940   005E9E  0E00               	movlw	0
  7941   005EA0  6E05               	movwf	_isspace$1790^0,c
  7942   005EA2                     l4746:
  7943   005EA2  C005  F001         	movff	_isspace$1790,?_isspace
  7944   005EA6  6A02               	clrf	(?_isspace+1)^0,c
  7945   005EA8  0012               	return		;funcret
  7946   005EAA                     __end_of_isspace:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _isdigit *****************
  7950 ;; Defined at:
  7951 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  c               2    0[COMRAM] int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2    0[COMRAM] int 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         2       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        4 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 2
  7972 ;; This function calls:
  7973 ;;		Nothing
  7974 ;; This function is called by:
  7975 ;;		_atol
  7976 ;;		_vfpfcnvrt
  7977 ;;		_atoi
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text26
  7982   006052                     __ptext26:
  7983                           	callstack 0
  7984   006052                     _isdigit:
  7985                           	callstack 25
  7986   006052  0ED0               	movlw	208
  7987   006054  2401               	addwf	isdigit@c^0,w,c
  7988   006056  6E03               	movwf	??_isdigit^0,c
  7989   006058  0EFF               	movlw	255
  7990   00605A  2002               	addwfc	(isdigit@c+1)^0,w,c
  7991   00605C  6E04               	movwf	(??_isdigit+1)^0,c
  7992   00605E  5004               	movf	(??_isdigit+1)^0,w,c
  7993   006060  E10A               	bnz	u3830
  7994   006062  0E0A               	movlw	10
  7995   006064  5C03               	subwf	??_isdigit^0,w,c
  7996   006066  A0D8               	btfss	status,0,c
  7997   006068  EF38  F030         	goto	u3831
  7998   00606C  EF3B  F030         	goto	u3830
  7999   006070                     u3831:
  8000   006070  0E01               	movlw	1
  8001   006072  EF3C  F030         	goto	u3840
  8002   006076                     u3830:
  8003   006076  0E00               	movlw	0
  8004   006078                     u3840:
  8005   006078  6E01               	movwf	?_isdigit^0,c
  8006   00607A  6A02               	clrf	(?_isdigit+1)^0,c
  8007   00607C  0012               	return		;funcret
  8008   00607E                     __end_of_isdigit:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function ___wmul *****************
  8012 ;; Defined at:
  8013 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  multiplier      2    0[COMRAM] unsigned int 
  8016 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  product         2    4[COMRAM] unsigned int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2    0[COMRAM] unsigned int 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0, prodl, prodh
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8028 ;;      Params:         4       0       0       0       0       0       0       0       0
  8029 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8031 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8032 ;;Total ram usage:        6 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 2
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_atoi
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text27
  8043   00607E                     __ptext27:
  8044                           	callstack 0
  8045   00607E                     ___wmul:
  8046                           	callstack 24
  8047   00607E  5001               	movf	___wmul@multiplier^0,w,c
  8048   006080  0203               	mulwf	___wmul@multiplicand^0,c
  8049   006082  CFF3 F005          	movff	prodl,___wmul@product
  8050   006086  CFF4 F006          	movff	prodh,___wmul@product+1
  8051   00608A  5001               	movf	___wmul@multiplier^0,w,c
  8052   00608C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8053   00608E  50F3               	movf	243,w,c
  8054   006090  2606               	addwf	(___wmul@product+1)^0,f,c
  8055   006092  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8056   006094  0203               	mulwf	___wmul@multiplicand^0,c
  8057   006096  50F3               	movf	243,w,c
  8058   006098  2606               	addwf	(___wmul@product+1)^0,f,c
  8059   00609A  C005  F001         	movff	___wmul@product,?___wmul
  8060   00609E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8061   0060A2  0012               	return		;funcret
  8062   0060A4                     __end_of___wmul:
  8063                           	callstack 0
  8064                           
  8065 ;; *************** function _Lcd_Write_String *****************
  8066 ;; Defined at:
  8067 ;;		line 129 in file "lib_pic/lcd.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  a               2    4[COMRAM] PTR unsigned char 
  8070 ;;		 -> STR_19(18), STR_18(18), strsetpoint(20), strRPM(20), 
  8071 ;;		 -> STR_12(20), STR_11(15), STR_10(20), STR_9(19), 
  8072 ;;		 -> STR_8(20), STR_7(11), STR_6(14), STR_5(18), 
  8073 ;;		 -> STR_4(17), STR_3(18), STR_2(18), STR_1(18), 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  i               2    8[COMRAM] int 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8085 ;;      Params:         2       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        6 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 4
  8092 ;; This function calls:
  8093 ;;		_Lcd_Write_Char
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;;		_LCD_imprimir_Datos
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text28
  8101   00592A                     __ptext28:
  8102                           	callstack 0
  8103   00592A                     _Lcd_Write_String:
  8104                           	callstack 26
  8105   00592A                     
  8106                           ;lib_pic/lcd.c: 129: void Lcd_Write_String(unsigned char *a);lib_pic/lcd.c: 130: {;lib_p
      +                          ic/lcd.c: 131:  int i;;lib_pic/lcd.c: 132:  for(i=0;a[i]!='\0';i++)
  8107   00592A  0E00               	movlw	0
  8108   00592C  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  8109   00592E  0E00               	movlw	0
  8110   005930  6E09               	movwf	Lcd_Write_String@i^0,c
  8111   005932  EFB5  F02C         	goto	l5644
  8112   005936                     l5640:
  8113                           
  8114                           ;lib_pic/lcd.c: 133:     Lcd_Write_Char(a[i]);
  8115   005936  5009               	movf	Lcd_Write_String@i^0,w,c
  8116   005938  2405               	addwf	Lcd_Write_String@a^0,w,c
  8117   00593A  6E07               	movwf	??_Lcd_Write_String^0,c
  8118   00593C  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  8119   00593E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8120   005940  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  8121   005942  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8122   005946  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8123   00594A  6AF8               	clrf	tblptru,c
  8124   00594C  0E07               	movlw	(high __ramtop+-1)
  8125   00594E  64F7               	cpfsgt	tblptrh,c
  8126   005950  D003               	bra	u4967
  8127   005952  0008               	tblrd		*
  8128   005954  50F5               	movf	tablat,w,c
  8129   005956  D005               	bra	u4960
  8130   005958                     u4967:
  8131   005958  CFF6 FFE9          	movff	tblptrl,fsr0l
  8132   00595C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8133   005960  50EF               	movf	indf0,w,c
  8134   005962                     u4960:
  8135   005962  ECF5  F02F         	call	_Lcd_Write_Char
  8136   005966  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  8137   005968  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  8138   00596A                     l5644:
  8139   00596A  5009               	movf	Lcd_Write_String@i^0,w,c
  8140   00596C  2405               	addwf	Lcd_Write_String@a^0,w,c
  8141   00596E  6E07               	movwf	??_Lcd_Write_String^0,c
  8142   005970  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  8143   005972  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8144   005974  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  8145   005976  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8146   00597A  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8147   00597E  6AF8               	clrf	tblptru,c
  8148   005980  0E07               	movlw	(high __ramtop+-1)
  8149   005982  64F7               	cpfsgt	tblptrh,c
  8150   005984  D003               	bra	u4977
  8151   005986  0008               	tblrd		*
  8152   005988  50F5               	movf	tablat,w,c
  8153   00598A  D005               	bra	u4970
  8154   00598C                     u4977:
  8155   00598C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8156   005990  CFF7 FFEA          	movff	tblptrh,fsr0h
  8157   005994  50EF               	movf	indf0,w,c
  8158   005996                     u4970:
  8159   005996  0900               	iorlw	0
  8160   005998  A4D8               	btfss	status,2,c
  8161   00599A  EFD1  F02C         	goto	u4981
  8162   00599E  EFD3  F02C         	goto	u4980
  8163   0059A2                     u4981:
  8164   0059A2  EF9B  F02C         	goto	l5640
  8165   0059A6                     u4980:
  8166   0059A6  0012               	return		;funcret
  8167   0059A8                     __end_of_Lcd_Write_String:
  8168                           	callstack 0
  8169                           
  8170 ;; *************** function _Lcd_Write_Char *****************
  8171 ;; Defined at:
  8172 ;;		line 112 in file "lib_pic/lcd.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  a               1    wreg     unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  a               1    3[COMRAM] unsigned char 
  8177 ;;  y               1    2[COMRAM] unsigned char 
  8178 ;;  temp            1    1[COMRAM] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0
  8189 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8191 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8192 ;;Total ram usage:        3 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 3
  8195 ;; This function calls:
  8196 ;;		_Lcd_Port
  8197 ;; This function is called by:
  8198 ;;		_Lcd_Write_String
  8199 ;;		_main
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text29
  8204   005FEA                     __ptext29:
  8205                           	callstack 0
  8206   005FEA                     _Lcd_Write_Char:
  8207                           	callstack 26
  8208                           
  8209                           ;incstack = 0
  8210                           ;Lcd_Write_Char@a stored from wreg
  8211   005FEA  6E04               	movwf	Lcd_Write_Char@a^0,c
  8212   005FEC                     
  8213                           ;lib_pic/lcd.c: 112: void Lcd_Write_Char(unsigned char a);lib_pic/lcd.c: 113: {;lib_pic/
      +                          lcd.c: 114:    char temp,y;;lib_pic/lcd.c: 115:    temp = a&0x0F;
  8214   005FEC  5004               	movf	Lcd_Write_Char@a^0,w,c
  8215   005FEE  0B0F               	andlw	15
  8216   005FF0  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8217                           
  8218                           ;lib_pic/lcd.c: 116:    y = a&0xF0;
  8219   005FF2  5004               	movf	Lcd_Write_Char@a^0,w,c
  8220   005FF4  0BF0               	andlw	240
  8221   005FF6  6E03               	movwf	Lcd_Write_Char@y^0,c
  8222   005FF8                     
  8223                           ;lib_pic/lcd.c: 117:    LATD |= (1<<2);
  8224   005FF8  848C               	bsf	140,2,c	;volatile
  8225   005FFA                     
  8226                           ;lib_pic/lcd.c: 118:    Lcd_Port(y>>4);
  8227   005FFA  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8228   005FFC  0B0F               	andlw	15
  8229   005FFE  EC0E  F02E         	call	_Lcd_Port
  8230   006002                     
  8231                           ;lib_pic/lcd.c: 119:    LATD |= (1<<3);
  8232   006002  868C               	bsf	140,3,c	;volatile
  8233   006004                     
  8234                           ;lib_pic/lcd.c: 120:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8235   006004  0E35               	movlw	53
  8236   006006                     u5437:
  8237   006006  2EE8               	decfsz	wreg,f,c
  8238   006008  D7FE               	bra	u5437
  8239   00600A  F000               	nop	
  8240   00600C                     
  8241                           ;lib_pic/lcd.c: 121:    LATD &= ~(1<<3);
  8242   00600C  968C               	bcf	140,3,c	;volatile
  8243                           
  8244                           ;lib_pic/lcd.c: 122:    Lcd_Port(temp);
  8245   00600E  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8246   006010  EC0E  F02E         	call	_Lcd_Port
  8247   006014                     
  8248                           ;lib_pic/lcd.c: 123:    LATD |= (1<<3);
  8249   006014  868C               	bsf	140,3,c	;volatile
  8250   006016                     
  8251                           ;lib_pic/lcd.c: 124:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8252   006016  0E35               	movlw	53
  8253   006018                     u5447:
  8254   006018  2EE8               	decfsz	wreg,f,c
  8255   00601A  D7FE               	bra	u5447
  8256   00601C  F000               	nop	
  8257   00601E                     
  8258                           ;lib_pic/lcd.c: 125:    LATD &= ~(1<<3);
  8259   00601E  968C               	bcf	140,3,c	;volatile
  8260   006020  0012               	return		;funcret
  8261   006022                     __end_of_Lcd_Write_Char:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function _Lcd_Set_Cursor *****************
  8265 ;; Defined at:
  8266 ;;		line 50 in file "lib_pic/lcd.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  a               1    wreg     unsigned char 
  8269 ;;  b               1    3[COMRAM] unsigned char 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  a               1    4[COMRAM] unsigned char 
  8272 ;;  temp            1    7[COMRAM] unsigned char 
  8273 ;;  y               1    6[COMRAM] unsigned char 
  8274 ;;  z               1    5[COMRAM] unsigned char 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8284 ;;      Params:         1       0       0       0       0       0       0       0       0
  8285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8287 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8288 ;;Total ram usage:        5 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 4
  8291 ;; This function calls:
  8292 ;;		_Lcd_Cmd
  8293 ;; This function is called by:
  8294 ;;		_main
  8295 ;;		_LCD_imprimir_Datos
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text30
  8300   004BF0                     __ptext30:
  8301                           	callstack 0
  8302   004BF0                     _Lcd_Set_Cursor:
  8303                           	callstack 26
  8304                           
  8305                           ;incstack = 0
  8306                           ;Lcd_Set_Cursor@a stored from wreg
  8307   004BF0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  8308   004BF2                     
  8309                           ;lib_pic/lcd.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lib_pic/lcd.c:
      +                           51: {;lib_pic/lcd.c: 52:  char temp,z,y;;lib_pic/lcd.c: 53:  if(a == 1)
  8310   004BF2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  8311   004BF4  A4D8               	btfss	status,2,c
  8312   004BF6  EFFF  F025         	goto	u4921
  8313   004BFA  EF01  F026         	goto	u4920
  8314   004BFE                     u4921:
  8315   004BFE  EF12  F026         	goto	l5584
  8316   004C02                     u4920:
  8317   004C02                     
  8318                           ;lib_pic/lcd.c: 54:  {;lib_pic/lcd.c: 55:      temp = 0x80 + b - 1;
  8319   004C02  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8320   004C04  0F7F               	addlw	127
  8321   004C06  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8322                           
  8323                           ;lib_pic/lcd.c: 56:   z = temp>>4;
  8324   004C08  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8325   004C0A  0B0F               	andlw	15
  8326   004C0C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8327                           
  8328                           ;lib_pic/lcd.c: 57:   y = temp & 0x0F;
  8329   004C0E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8330   004C10  0B0F               	andlw	15
  8331   004C12  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8332   004C14                     
  8333                           ;lib_pic/lcd.c: 58:   Lcd_Cmd(z);
  8334   004C14  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8335   004C16  EC85  F030         	call	_Lcd_Cmd
  8336   004C1A                     
  8337                           ;lib_pic/lcd.c: 59:   Lcd_Cmd(y);
  8338   004C1A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8339   004C1C  EC85  F030         	call	_Lcd_Cmd
  8340                           
  8341                           ;lib_pic/lcd.c: 60:  }
  8342   004C20  EF60  F026         	goto	l172
  8343   004C24                     l5584:
  8344   004C24  0E02               	movlw	2
  8345   004C26  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8346   004C28  A4D8               	btfss	status,2,c
  8347   004C2A  EF19  F026         	goto	u4931
  8348   004C2E  EF1B  F026         	goto	u4930
  8349   004C32                     u4931:
  8350   004C32  EF2C  F026         	goto	l5592
  8351   004C36                     u4930:
  8352   004C36                     
  8353                           ;lib_pic/lcd.c: 62:  {;lib_pic/lcd.c: 63:   temp = 0xC0 + b - 1;
  8354   004C36  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8355   004C38  0FBF               	addlw	191
  8356   004C3A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8357                           
  8358                           ;lib_pic/lcd.c: 64:   z = temp>>4;
  8359   004C3C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8360   004C3E  0B0F               	andlw	15
  8361   004C40  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8362                           
  8363                           ;lib_pic/lcd.c: 65:   y = temp & 0x0F;
  8364   004C42  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8365   004C44  0B0F               	andlw	15
  8366   004C46  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8367   004C48                     
  8368                           ;lib_pic/lcd.c: 66:   Lcd_Cmd(z);
  8369   004C48  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8370   004C4A  EC85  F030         	call	_Lcd_Cmd
  8371   004C4E                     
  8372                           ;lib_pic/lcd.c: 67:   Lcd_Cmd(y);
  8373   004C4E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8374   004C50  EC85  F030         	call	_Lcd_Cmd
  8375                           
  8376                           ;lib_pic/lcd.c: 68:  }
  8377   004C54  EF60  F026         	goto	l172
  8378   004C58                     l5592:
  8379   004C58  0E03               	movlw	3
  8380   004C5A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8381   004C5C  A4D8               	btfss	status,2,c
  8382   004C5E  EF33  F026         	goto	u4941
  8383   004C62  EF35  F026         	goto	u4940
  8384   004C66                     u4941:
  8385   004C66  EF46  F026         	goto	l5600
  8386   004C6A                     u4940:
  8387   004C6A                     
  8388                           ;lib_pic/lcd.c: 70:  {;lib_pic/lcd.c: 71:   temp = (0x80 + 0x14) + b - 1;
  8389   004C6A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8390   004C6C  0F93               	addlw	147
  8391   004C6E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8392                           
  8393                           ;lib_pic/lcd.c: 72:   z = temp>>4;
  8394   004C70  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8395   004C72  0B0F               	andlw	15
  8396   004C74  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8397                           
  8398                           ;lib_pic/lcd.c: 73:   y = temp & 0x0F;
  8399   004C76  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8400   004C78  0B0F               	andlw	15
  8401   004C7A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8402   004C7C                     
  8403                           ;lib_pic/lcd.c: 74:   Lcd_Cmd(z);
  8404   004C7C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8405   004C7E  EC85  F030         	call	_Lcd_Cmd
  8406   004C82                     
  8407                           ;lib_pic/lcd.c: 75:   Lcd_Cmd(y);
  8408   004C82  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8409   004C84  EC85  F030         	call	_Lcd_Cmd
  8410                           
  8411                           ;lib_pic/lcd.c: 76:  }
  8412   004C88  EF60  F026         	goto	l172
  8413   004C8C                     l5600:
  8414   004C8C  0E04               	movlw	4
  8415   004C8E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8416   004C90  A4D8               	btfss	status,2,c
  8417   004C92  EF4D  F026         	goto	u4951
  8418   004C96  EF4F  F026         	goto	u4950
  8419   004C9A                     u4951:
  8420   004C9A  EF60  F026         	goto	l168
  8421   004C9E                     u4950:
  8422   004C9E                     
  8423                           ;lib_pic/lcd.c: 78:  {;lib_pic/lcd.c: 79:   temp = (0xC0 + 0x14) + b - 1;
  8424   004C9E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8425   004CA0  0FD3               	addlw	211
  8426   004CA2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8427                           
  8428                           ;lib_pic/lcd.c: 80:   z = temp>>4;
  8429   004CA4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8430   004CA6  0B0F               	andlw	15
  8431   004CA8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8432                           
  8433                           ;lib_pic/lcd.c: 81:   y = temp & 0x0F;
  8434   004CAA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8435   004CAC  0B0F               	andlw	15
  8436   004CAE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8437   004CB0                     
  8438                           ;lib_pic/lcd.c: 82:   Lcd_Cmd(z);
  8439   004CB0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8440   004CB2  EC85  F030         	call	_Lcd_Cmd
  8441   004CB6                     
  8442                           ;lib_pic/lcd.c: 83:   Lcd_Cmd(y);
  8443   004CB6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8444   004CB8  EC85  F030         	call	_Lcd_Cmd
  8445   004CBC  EF60  F026         	goto	l172
  8446   004CC0                     l168:
  8447   004CC0                     l172:
  8448   004CC0  0012               	return		;funcret
  8449   004CC2                     __end_of_Lcd_Set_Cursor:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _Key_Read *****************
  8453 ;; Defined at:
  8454 ;;		line 75 in file "lib_pic/keypad_4x4.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  value_column    1    6[COMRAM] unsigned char 
  8459 ;;  key             1    5[COMRAM] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0
  8470 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8471 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8472 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8473 ;;Total ram usage:        4 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 3
  8476 ;; This function calls:
  8477 ;;		_Key_Enable_Filas
  8478 ;;		_Key_Scan_Columnas
  8479 ;; This function is called by:
  8480 ;;		_main
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text31
  8485   003F8E                     __ptext31:
  8486                           	callstack 0
  8487   003F8E                     _Key_Read:
  8488                           	callstack 27
  8489   003F8E                     
  8490                           ;lib_pic/keypad_4x4.c: 77:  uint8_t key = '\0', value_column = 0;
  8491   003F8E  0E00               	movlw	0
  8492   003F90  6E06               	movwf	Key_Read@key^0,c
  8493   003F92                     
  8494                           ;lib_pic/keypad_4x4.c: 80:  Key_Enable_Filas(0);
  8495   003F92  0E00               	movlw	0
  8496   003F94  ECDF  F02D         	call	_Key_Enable_Filas
  8497   003F98                     
  8498                           ;lib_pic/keypad_4x4.c: 81:  value_column = Key_Scan_Columnas();
  8499   003F98  EC2E  F027         	call	_Key_Scan_Columnas	;wreg free
  8500   003F9C  6E07               	movwf	Key_Read@value_column^0,c
  8501                           
  8502                           ;lib_pic/keypad_4x4.c: 82:  if(value_column < 4)
  8503   003F9E  0E04               	movlw	4
  8504   003FA0  6007               	cpfslt	Key_Read@value_column^0,c
  8505   003FA2  EFD5  F01F         	goto	u5021
  8506   003FA6  EFD7  F01F         	goto	u5020
  8507   003FAA                     u5021:
  8508   003FAA  EF06  F020         	goto	l5908
  8509   003FAE                     u5020:
  8510   003FAE  EFE9  F01F         	goto	l5906
  8511   003FB2                     l51:
  8512   003FB2  C1E4  F006         	movff	_Keypad4x4,Key_Read@key
  8513   003FB6  EF06  F020         	goto	l5908
  8514   003FBA                     l53:
  8515   003FBA  C1E5  F006         	movff	_Keypad4x4+1,Key_Read@key
  8516   003FBE  EF06  F020         	goto	l5908
  8517   003FC2                     l54:
  8518   003FC2  C1E6  F006         	movff	_Keypad4x4+2,Key_Read@key
  8519   003FC6  EF06  F020         	goto	l5908
  8520   003FCA                     l55:
  8521   003FCA  C1E7  F006         	movff	_Keypad4x4+3,Key_Read@key
  8522   003FCE  EF06  F020         	goto	l5908
  8523   003FD2                     l5906:
  8524   003FD2  5007               	movf	Key_Read@value_column^0,w,c
  8525   003FD4  6E04               	movwf	??_Key_Read^0,c
  8526   003FD6  6A05               	clrf	(??_Key_Read+1)^0,c
  8527                           
  8528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8529                           ; Switch size 1, requested type "simple"
  8530                           ; Number of cases is 1, Range of values is 0 to 0
  8531                           ; switch strategies available:
  8532                           ; Name         Instructions Cycles
  8533                           ; simple_byte            4     3 (average)
  8534                           ;	Chosen strategy is simple_byte
  8535   003FD8  5005               	movf	(??_Key_Read+1)^0,w,c
  8536   003FDA  0A00               	xorlw	0	; case 0
  8537   003FDC  B4D8               	btfsc	status,2,c
  8538   003FDE  EFF3  F01F         	goto	l6668
  8539   003FE2  EF06  F020         	goto	l5908
  8540   003FE6                     l6668:
  8541                           
  8542                           ; Switch size 1, requested type "simple"
  8543                           ; Number of cases is 4, Range of values is 0 to 3
  8544                           ; switch strategies available:
  8545                           ; Name         Instructions Cycles
  8546                           ; simple_byte           13     7 (average)
  8547                           ;	Chosen strategy is simple_byte
  8548   003FE6  5004               	movf	??_Key_Read^0,w,c
  8549   003FE8  0A00               	xorlw	0	; case 0
  8550   003FEA  B4D8               	btfsc	status,2,c
  8551   003FEC  EFD9  F01F         	goto	l51
  8552   003FF0  0A01               	xorlw	1	; case 1
  8553   003FF2  B4D8               	btfsc	status,2,c
  8554   003FF4  EFDD  F01F         	goto	l53
  8555   003FF8  0A03               	xorlw	3	; case 2
  8556   003FFA  B4D8               	btfsc	status,2,c
  8557   003FFC  EFE1  F01F         	goto	l54
  8558   004000  0A01               	xorlw	1	; case 3
  8559   004002  B4D8               	btfsc	status,2,c
  8560   004004  EFE5  F01F         	goto	l55
  8561   004008  EF06  F020         	goto	l5908
  8562   00400C                     l5908:
  8563                           
  8564                           ;lib_pic/keypad_4x4.c: 94:  Key_Enable_Filas(1);
  8565   00400C  0E01               	movlw	1
  8566   00400E  ECDF  F02D         	call	_Key_Enable_Filas
  8567   004012                     
  8568                           ;lib_pic/keypad_4x4.c: 95:  value_column = Key_Scan_Columnas();
  8569   004012  EC2E  F027         	call	_Key_Scan_Columnas	;wreg free
  8570   004016  6E07               	movwf	Key_Read@value_column^0,c
  8571   004018                     
  8572                           ;lib_pic/keypad_4x4.c: 96:  if(value_column < 4)
  8573   004018  0E04               	movlw	4
  8574   00401A  6007               	cpfslt	Key_Read@value_column^0,c
  8575   00401C  EF12  F020         	goto	u5031
  8576   004020  EF14  F020         	goto	u5030
  8577   004024                     u5031:
  8578   004024  EF43  F020         	goto	l5920
  8579   004028                     u5030:
  8580   004028  EF26  F020         	goto	l5918
  8581   00402C                     l58:
  8582   00402C  C1E8  F006         	movff	_Keypad4x4+4,Key_Read@key
  8583   004030  EF43  F020         	goto	l5920
  8584   004034                     l60:
  8585   004034  C1E9  F006         	movff	_Keypad4x4+5,Key_Read@key
  8586   004038  EF43  F020         	goto	l5920
  8587   00403C                     l61:
  8588   00403C  C1EA  F006         	movff	_Keypad4x4+6,Key_Read@key
  8589   004040  EF43  F020         	goto	l5920
  8590   004044                     l62:
  8591   004044  C1EB  F006         	movff	_Keypad4x4+7,Key_Read@key
  8592   004048  EF43  F020         	goto	l5920
  8593   00404C                     l5918:
  8594   00404C  5007               	movf	Key_Read@value_column^0,w,c
  8595   00404E  6E04               	movwf	??_Key_Read^0,c
  8596   004050  6A05               	clrf	(??_Key_Read+1)^0,c
  8597                           
  8598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8599                           ; Switch size 1, requested type "simple"
  8600                           ; Number of cases is 1, Range of values is 0 to 0
  8601                           ; switch strategies available:
  8602                           ; Name         Instructions Cycles
  8603                           ; simple_byte            4     3 (average)
  8604                           ;	Chosen strategy is simple_byte
  8605   004052  5005               	movf	(??_Key_Read+1)^0,w,c
  8606   004054  0A00               	xorlw	0	; case 0
  8607   004056  B4D8               	btfsc	status,2,c
  8608   004058  EF30  F020         	goto	l6670
  8609   00405C  EF43  F020         	goto	l5920
  8610   004060                     l6670:
  8611                           
  8612                           ; Switch size 1, requested type "simple"
  8613                           ; Number of cases is 4, Range of values is 0 to 3
  8614                           ; switch strategies available:
  8615                           ; Name         Instructions Cycles
  8616                           ; simple_byte           13     7 (average)
  8617                           ;	Chosen strategy is simple_byte
  8618   004060  5004               	movf	??_Key_Read^0,w,c
  8619   004062  0A00               	xorlw	0	; case 0
  8620   004064  B4D8               	btfsc	status,2,c
  8621   004066  EF16  F020         	goto	l58
  8622   00406A  0A01               	xorlw	1	; case 1
  8623   00406C  B4D8               	btfsc	status,2,c
  8624   00406E  EF1A  F020         	goto	l60
  8625   004072  0A03               	xorlw	3	; case 2
  8626   004074  B4D8               	btfsc	status,2,c
  8627   004076  EF1E  F020         	goto	l61
  8628   00407A  0A01               	xorlw	1	; case 3
  8629   00407C  B4D8               	btfsc	status,2,c
  8630   00407E  EF22  F020         	goto	l62
  8631   004082  EF43  F020         	goto	l5920
  8632   004086                     l5920:
  8633                           
  8634                           ;lib_pic/keypad_4x4.c: 108:  Key_Enable_Filas(2);
  8635   004086  0E02               	movlw	2
  8636   004088  ECDF  F02D         	call	_Key_Enable_Filas
  8637   00408C                     
  8638                           ;lib_pic/keypad_4x4.c: 109:  value_column = Key_Scan_Columnas();
  8639   00408C  EC2E  F027         	call	_Key_Scan_Columnas	;wreg free
  8640   004090  6E07               	movwf	Key_Read@value_column^0,c
  8641   004092                     
  8642                           ;lib_pic/keypad_4x4.c: 110:  if(value_column < 4)
  8643   004092  0E04               	movlw	4
  8644   004094  6007               	cpfslt	Key_Read@value_column^0,c
  8645   004096  EF4F  F020         	goto	u5041
  8646   00409A  EF51  F020         	goto	u5040
  8647   00409E                     u5041:
  8648   00409E  EF80  F020         	goto	l5932
  8649   0040A2                     u5040:
  8650   0040A2  EF63  F020         	goto	l5930
  8651   0040A6                     l65:
  8652   0040A6  C1EC  F006         	movff	_Keypad4x4+8,Key_Read@key
  8653   0040AA  EF80  F020         	goto	l5932
  8654   0040AE                     l67:
  8655   0040AE  C1ED  F006         	movff	_Keypad4x4+9,Key_Read@key
  8656   0040B2  EF80  F020         	goto	l5932
  8657   0040B6                     l68:
  8658   0040B6  C1EE  F006         	movff	_Keypad4x4+10,Key_Read@key
  8659   0040BA  EF80  F020         	goto	l5932
  8660   0040BE                     l69:
  8661   0040BE  C1EF  F006         	movff	_Keypad4x4+11,Key_Read@key
  8662   0040C2  EF80  F020         	goto	l5932
  8663   0040C6                     l5930:
  8664   0040C6  5007               	movf	Key_Read@value_column^0,w,c
  8665   0040C8  6E04               	movwf	??_Key_Read^0,c
  8666   0040CA  6A05               	clrf	(??_Key_Read+1)^0,c
  8667                           
  8668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8669                           ; Switch size 1, requested type "simple"
  8670                           ; Number of cases is 1, Range of values is 0 to 0
  8671                           ; switch strategies available:
  8672                           ; Name         Instructions Cycles
  8673                           ; simple_byte            4     3 (average)
  8674                           ;	Chosen strategy is simple_byte
  8675   0040CC  5005               	movf	(??_Key_Read+1)^0,w,c
  8676   0040CE  0A00               	xorlw	0	; case 0
  8677   0040D0  B4D8               	btfsc	status,2,c
  8678   0040D2  EF6D  F020         	goto	l6672
  8679   0040D6  EF80  F020         	goto	l5932
  8680   0040DA                     l6672:
  8681                           
  8682                           ; Switch size 1, requested type "simple"
  8683                           ; Number of cases is 4, Range of values is 0 to 3
  8684                           ; switch strategies available:
  8685                           ; Name         Instructions Cycles
  8686                           ; simple_byte           13     7 (average)
  8687                           ;	Chosen strategy is simple_byte
  8688   0040DA  5004               	movf	??_Key_Read^0,w,c
  8689   0040DC  0A00               	xorlw	0	; case 0
  8690   0040DE  B4D8               	btfsc	status,2,c
  8691   0040E0  EF53  F020         	goto	l65
  8692   0040E4  0A01               	xorlw	1	; case 1
  8693   0040E6  B4D8               	btfsc	status,2,c
  8694   0040E8  EF57  F020         	goto	l67
  8695   0040EC  0A03               	xorlw	3	; case 2
  8696   0040EE  B4D8               	btfsc	status,2,c
  8697   0040F0  EF5B  F020         	goto	l68
  8698   0040F4  0A01               	xorlw	1	; case 3
  8699   0040F6  B4D8               	btfsc	status,2,c
  8700   0040F8  EF5F  F020         	goto	l69
  8701   0040FC  EF80  F020         	goto	l5932
  8702   004100                     l5932:
  8703                           
  8704                           ;lib_pic/keypad_4x4.c: 122:  Key_Enable_Filas(3);
  8705   004100  0E03               	movlw	3
  8706   004102  ECDF  F02D         	call	_Key_Enable_Filas
  8707   004106                     
  8708                           ;lib_pic/keypad_4x4.c: 123:  value_column = Key_Scan_Columnas();
  8709   004106  EC2E  F027         	call	_Key_Scan_Columnas	;wreg free
  8710   00410A  6E07               	movwf	Key_Read@value_column^0,c
  8711   00410C                     
  8712                           ;lib_pic/keypad_4x4.c: 124:  if(value_column < 4)
  8713   00410C  0E04               	movlw	4
  8714   00410E  6007               	cpfslt	Key_Read@value_column^0,c
  8715   004110  EF8C  F020         	goto	u5051
  8716   004114  EF8E  F020         	goto	u5050
  8717   004118                     u5051:
  8718   004118  EFBD  F020         	goto	l5944
  8719   00411C                     u5050:
  8720   00411C  EFA0  F020         	goto	l5942
  8721   004120                     l72:
  8722   004120  C1F0  F006         	movff	_Keypad4x4+12,Key_Read@key
  8723   004124  EFBD  F020         	goto	l5944
  8724   004128                     l74:
  8725   004128  C1F1  F006         	movff	_Keypad4x4+13,Key_Read@key
  8726   00412C  EFBD  F020         	goto	l5944
  8727   004130                     l75:
  8728   004130  C1F2  F006         	movff	_Keypad4x4+14,Key_Read@key
  8729   004134  EFBD  F020         	goto	l5944
  8730   004138                     l76:
  8731   004138  C1F3  F006         	movff	_Keypad4x4+15,Key_Read@key
  8732   00413C  EFBD  F020         	goto	l5944
  8733   004140                     l5942:
  8734   004140  5007               	movf	Key_Read@value_column^0,w,c
  8735   004142  6E04               	movwf	??_Key_Read^0,c
  8736   004144  6A05               	clrf	(??_Key_Read+1)^0,c
  8737                           
  8738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8739                           ; Switch size 1, requested type "simple"
  8740                           ; Number of cases is 1, Range of values is 0 to 0
  8741                           ; switch strategies available:
  8742                           ; Name         Instructions Cycles
  8743                           ; simple_byte            4     3 (average)
  8744                           ;	Chosen strategy is simple_byte
  8745   004146  5005               	movf	(??_Key_Read+1)^0,w,c
  8746   004148  0A00               	xorlw	0	; case 0
  8747   00414A  B4D8               	btfsc	status,2,c
  8748   00414C  EFAA  F020         	goto	l6674
  8749   004150  EFBD  F020         	goto	l5944
  8750   004154                     l6674:
  8751                           
  8752                           ; Switch size 1, requested type "simple"
  8753                           ; Number of cases is 4, Range of values is 0 to 3
  8754                           ; switch strategies available:
  8755                           ; Name         Instructions Cycles
  8756                           ; simple_byte           13     7 (average)
  8757                           ;	Chosen strategy is simple_byte
  8758   004154  5004               	movf	??_Key_Read^0,w,c
  8759   004156  0A00               	xorlw	0	; case 0
  8760   004158  B4D8               	btfsc	status,2,c
  8761   00415A  EF90  F020         	goto	l72
  8762   00415E  0A01               	xorlw	1	; case 1
  8763   004160  B4D8               	btfsc	status,2,c
  8764   004162  EF94  F020         	goto	l74
  8765   004166  0A03               	xorlw	3	; case 2
  8766   004168  B4D8               	btfsc	status,2,c
  8767   00416A  EF98  F020         	goto	l75
  8768   00416E  0A01               	xorlw	1	; case 3
  8769   004170  B4D8               	btfsc	status,2,c
  8770   004172  EF9C  F020         	goto	l76
  8771   004176  EFBD  F020         	goto	l5944
  8772   00417A                     l5944:
  8773                           
  8774                           ;lib_pic/keypad_4x4.c: 135:  return key;
  8775   00417A  5006               	movf	Key_Read@key^0,w,c
  8776   00417C  0012               	return		;funcret
  8777   00417E                     __end_of_Key_Read:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _Key_Scan_Columnas *****************
  8781 ;; Defined at:
  8782 ;;		line 33 in file "lib_pic/keypad_4x4.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      unsigned char 
  8789 ;; Registers used:
  8790 ;;		wreg
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8798 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8799 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8800 ;;Total ram usage:        1 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; Hardware stack levels required when called: 2
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_Key_Read
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text32
  8811   004E5C                     __ptext32:
  8812                           	callstack 0
  8813   004E5C                     _Key_Scan_Columnas:
  8814                           	callstack 27
  8815   004E5C                     
  8816                           ;lib_pic/keypad_4x4.c: 36:  if( (PORTB & (1<<4)) == 0 )
  8817   004E5C  B881               	btfsc	129,4,c	;volatile
  8818   004E5E  EF33  F027         	goto	u4821
  8819   004E62  EF35  F027         	goto	u4820
  8820   004E66                     u4821:
  8821   004E66  EF46  F027         	goto	l30
  8822   004E6A                     u4820:
  8823   004E6A                     
  8824                           ;lib_pic/keypad_4x4.c: 37:  {;lib_pic/keypad_4x4.c: 38:   _delay((unsigned long)((10)*(1
      +                          6000000UL/4000.0)));
  8825   004E6A  0E34               	movlw	52
  8826   004E6C  6E01               	movwf	??_Key_Scan_Columnas^0,c
  8827   004E6E  0EF2               	movlw	242
  8828   004E70                     u5457:
  8829   004E70  2EE8               	decfsz	wreg,f,c
  8830   004E72  D7FE               	bra	u5457
  8831   004E74  2E01               	decfsz	??_Key_Scan_Columnas^0,f,c
  8832   004E76  D7FC               	bra	u5457
  8833   004E78                     l31:
  8834   004E78  A881               	btfss	129,4,c	;volatile
  8835   004E7A  EF41  F027         	goto	u4831
  8836   004E7E  EF43  F027         	goto	u4830
  8837   004E82                     u4831:
  8838   004E82  EF3C  F027         	goto	l31
  8839   004E86                     u4830:
  8840   004E86                     
  8841                           ;lib_pic/keypad_4x4.c: 41:   return 0;
  8842   004E86  0E00               	movlw	0
  8843   004E88  EF8F  F027         	goto	l34
  8844   004E8C                     l30:
  8845                           
  8846                           ;lib_pic/keypad_4x4.c: 45:  if( (PORTB & (1<<5)) == 0 )
  8847   004E8C  BA81               	btfsc	129,5,c	;volatile
  8848   004E8E  EF4B  F027         	goto	u4841
  8849   004E92  EF4D  F027         	goto	u4840
  8850   004E96                     u4841:
  8851   004E96  EF5E  F027         	goto	l35
  8852   004E9A                     u4840:
  8853   004E9A                     
  8854                           ;lib_pic/keypad_4x4.c: 46:  {;lib_pic/keypad_4x4.c: 47:   _delay((unsigned long)((10)*(1
      +                          6000000UL/4000.0)));
  8855   004E9A  0E34               	movlw	52
  8856   004E9C  6E01               	movwf	??_Key_Scan_Columnas^0,c
  8857   004E9E  0EF2               	movlw	242
  8858   004EA0                     u5467:
  8859   004EA0  2EE8               	decfsz	wreg,f,c
  8860   004EA2  D7FE               	bra	u5467
  8861   004EA4  2E01               	decfsz	??_Key_Scan_Columnas^0,f,c
  8862   004EA6  D7FC               	bra	u5467
  8863   004EA8                     l36:
  8864   004EA8  AA81               	btfss	129,5,c	;volatile
  8865   004EAA  EF59  F027         	goto	u4851
  8866   004EAE  EF5B  F027         	goto	u4850
  8867   004EB2                     u4851:
  8868   004EB2  EF54  F027         	goto	l36
  8869   004EB6                     u4850:
  8870   004EB6                     
  8871                           ;lib_pic/keypad_4x4.c: 50:   return 1;
  8872   004EB6  0E01               	movlw	1
  8873   004EB8  EF8F  F027         	goto	l34
  8874   004EBC                     l35:
  8875                           
  8876                           ;lib_pic/keypad_4x4.c: 54:  if( (PORTB & (1<<6)) == 0 )
  8877   004EBC  BC81               	btfsc	129,6,c	;volatile
  8878   004EBE  EF63  F027         	goto	u4861
  8879   004EC2  EF65  F027         	goto	u4860
  8880   004EC6                     u4861:
  8881   004EC6  EF76  F027         	goto	l39
  8882   004ECA                     u4860:
  8883   004ECA                     
  8884                           ;lib_pic/keypad_4x4.c: 55:  {;lib_pic/keypad_4x4.c: 56:   _delay((unsigned long)((10)*(1
      +                          6000000UL/4000.0)));
  8885   004ECA  0E34               	movlw	52
  8886   004ECC  6E01               	movwf	??_Key_Scan_Columnas^0,c
  8887   004ECE  0EF2               	movlw	242
  8888   004ED0                     u5477:
  8889   004ED0  2EE8               	decfsz	wreg,f,c
  8890   004ED2  D7FE               	bra	u5477
  8891   004ED4  2E01               	decfsz	??_Key_Scan_Columnas^0,f,c
  8892   004ED6  D7FC               	bra	u5477
  8893   004ED8                     l40:
  8894   004ED8  AC81               	btfss	129,6,c	;volatile
  8895   004EDA  EF71  F027         	goto	u4871
  8896   004EDE  EF73  F027         	goto	u4870
  8897   004EE2                     u4871:
  8898   004EE2  EF6C  F027         	goto	l40
  8899   004EE6                     u4870:
  8900   004EE6                     
  8901                           ;lib_pic/keypad_4x4.c: 59:   return 2;
  8902   004EE6  0E02               	movlw	2
  8903   004EE8  EF8F  F027         	goto	l34
  8904   004EEC                     l39:
  8905                           
  8906                           ;lib_pic/keypad_4x4.c: 63:  if( (PORTB & (1<<7)) == 0 )
  8907   004EEC  BE81               	btfsc	129,7,c	;volatile
  8908   004EEE  EF7B  F027         	goto	u4881
  8909   004EF2  EF7D  F027         	goto	u4880
  8910   004EF6                     u4881:
  8911   004EF6  EF8E  F027         	goto	l5552
  8912   004EFA                     u4880:
  8913   004EFA                     
  8914                           ;lib_pic/keypad_4x4.c: 64:  {;lib_pic/keypad_4x4.c: 65:   _delay((unsigned long)((10)*(1
      +                          6000000UL/4000.0)));
  8915   004EFA  0E34               	movlw	52
  8916   004EFC  6E01               	movwf	??_Key_Scan_Columnas^0,c
  8917   004EFE  0EF2               	movlw	242
  8918   004F00                     u5487:
  8919   004F00  2EE8               	decfsz	wreg,f,c
  8920   004F02  D7FE               	bra	u5487
  8921   004F04  2E01               	decfsz	??_Key_Scan_Columnas^0,f,c
  8922   004F06  D7FC               	bra	u5487
  8923   004F08                     l44:
  8924   004F08  AE81               	btfss	129,7,c	;volatile
  8925   004F0A  EF89  F027         	goto	u4891
  8926   004F0E  EF8B  F027         	goto	u4890
  8927   004F12                     u4891:
  8928   004F12  EF84  F027         	goto	l44
  8929   004F16                     u4890:
  8930   004F16                     
  8931                           ;lib_pic/keypad_4x4.c: 68:   return 3;
  8932   004F16  0E03               	movlw	3
  8933   004F18  EF8F  F027         	goto	l34
  8934   004F1C                     l5552:
  8935                           
  8936                           ;lib_pic/keypad_4x4.c: 72:  return 4;
  8937   004F1C  0E04               	movlw	4
  8938   004F1E                     l34:
  8939   004F1E  0012               	return		;funcret
  8940   004F20                     __end_of_Key_Scan_Columnas:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _Key_Enable_Filas *****************
  8944 ;; Defined at:
  8945 ;;		line 18 in file "lib_pic/keypad_4x4.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  fila            1    wreg     unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  fila            1    2[COMRAM] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0
  8960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8961 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8962 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8963 ;;Total ram usage:        3 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 2
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_Key_Read
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text33
  8974   005BBE                     __ptext33:
  8975                           	callstack 0
  8976   005BBE                     _Key_Enable_Filas:
  8977                           	callstack 27
  8978                           
  8979                           ;incstack = 0
  8980                           ;Key_Enable_Filas@fila stored from wreg
  8981   005BBE  6E03               	movwf	Key_Enable_Filas@fila^0,c
  8982   005BC0                     
  8983                           ;lib_pic/keypad_4x4.c: 18: void Key_Enable_Filas(uint8_t fila);lib_pic/keypad_4x4.c: 19:
      +                           {;lib_pic/keypad_4x4.c: 21:  LATB |= (1<<3)|(1<<2)|(1<<1)|(1<<0);
  8984   005BC0  0E0F               	movlw	15
  8985   005BC2  128A               	iorwf	138,f,c	;volatile
  8986                           
  8987                           ;lib_pic/keypad_4x4.c: 24:  switch(fila)
  8988   005BC4  EFF0  F02D         	goto	l5520
  8989   005BC8                     l5510:
  8990   005BC8  908A               	bcf	138,0,c	;volatile
  8991   005BCA  EF0D  F02E         	goto	l27
  8992   005BCE                     l5512:
  8993   005BCE  928A               	bcf	138,1,c	;volatile
  8994   005BD0  EF0D  F02E         	goto	l27
  8995   005BD4                     l5514:
  8996   005BD4  948A               	bcf	138,2,c	;volatile
  8997   005BD6  EF0D  F02E         	goto	l27
  8998   005BDA                     l5516:
  8999   005BDA  968A               	bcf	138,3,c	;volatile
  9000   005BDC  EF0D  F02E         	goto	l27
  9001   005BE0                     l5520:
  9002   005BE0  5003               	movf	Key_Enable_Filas@fila^0,w,c
  9003   005BE2  6E01               	movwf	??_Key_Enable_Filas^0,c
  9004   005BE4  6A02               	clrf	(??_Key_Enable_Filas+1)^0,c
  9005                           
  9006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9007                           ; Switch size 1, requested type "simple"
  9008                           ; Number of cases is 1, Range of values is 0 to 0
  9009                           ; switch strategies available:
  9010                           ; Name         Instructions Cycles
  9011                           ; simple_byte            4     3 (average)
  9012                           ;	Chosen strategy is simple_byte
  9013   005BE6  5002               	movf	(??_Key_Enable_Filas+1)^0,w,c
  9014   005BE8  0A00               	xorlw	0	; case 0
  9015   005BEA  B4D8               	btfsc	status,2,c
  9016   005BEC  EFFA  F02D         	goto	l6676
  9017   005BF0  EF0D  F02E         	goto	l27
  9018   005BF4                     l6676:
  9019                           
  9020                           ; Switch size 1, requested type "simple"
  9021                           ; Number of cases is 4, Range of values is 0 to 3
  9022                           ; switch strategies available:
  9023                           ; Name         Instructions Cycles
  9024                           ; simple_byte           13     7 (average)
  9025                           ;	Chosen strategy is simple_byte
  9026   005BF4  5001               	movf	??_Key_Enable_Filas^0,w,c
  9027   005BF6  0A00               	xorlw	0	; case 0
  9028   005BF8  B4D8               	btfsc	status,2,c
  9029   005BFA  EFE4  F02D         	goto	l5510
  9030   005BFE  0A01               	xorlw	1	; case 1
  9031   005C00  B4D8               	btfsc	status,2,c
  9032   005C02  EFE7  F02D         	goto	l5512
  9033   005C06  0A03               	xorlw	3	; case 2
  9034   005C08  B4D8               	btfsc	status,2,c
  9035   005C0A  EFEA  F02D         	goto	l5514
  9036   005C0E  0A01               	xorlw	1	; case 3
  9037   005C10  B4D8               	btfsc	status,2,c
  9038   005C12  EFED  F02D         	goto	l5516
  9039   005C16  EF0D  F02E         	goto	l27
  9040   005C1A                     l27:
  9041   005C1A  0012               	return		;funcret
  9042   005C1C                     __end_of_Key_Enable_Filas:
  9043                           	callstack 0
  9044                           
  9045 ;; *************** function _Hardware_Init *****************
  9046 ;; Defined at:
  9047 ;;		line 533 in file "mainEncoder.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, status,2, status,0, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9061 ;;      Params:         0       0       0       0       0       0       0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:        0 bytes
  9066 ;; Hardware stack levels used: 1
  9067 ;; Hardware stack levels required when called: 5
  9068 ;; This function calls:
  9069 ;;		_CCPR2_ModoPWM_Init
  9070 ;;		_EUSART_SerialBegin
  9071 ;;		_INTERRUPT_Init
  9072 ;;		_Key_Init
  9073 ;;		_Lcd_Init
  9074 ;;		_OSCILADOR_Init
  9075 ;;		_PORT_Init
  9076 ;;		_TIMER0_Interrupt_Init
  9077 ;;		_TIMER0_ModoTemporizador_Init
  9078 ;;		_TIMER1_ModoContador_Init
  9079 ;;		_TIMER2_ModoPWM_Init
  9080 ;; This function is called by:
  9081 ;;		_main
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text34
  9086   005F74                     __ptext34:
  9087                           	callstack 0
  9088   005F74                     _Hardware_Init:
  9089                           	callstack 25
  9090   005F74                     
  9091                           ;mainEncoder.c: 536:     OSCILADOR_Init();
  9092   005F74  EC0D  F031         	call	_OSCILADOR_Init	;wreg free
  9093                           
  9094                           ;mainEncoder.c: 538:     PORT_Init();
  9095   005F78  EC64  F030         	call	_PORT_Init	;wreg free
  9096   005F7C                     
  9097                           ;mainEncoder.c: 540:     Key_Init();
  9098   005F7C  EC14  F031         	call	_Key_Init	;wreg free
  9099   005F80                     
  9100                           ;mainEncoder.c: 542:     Lcd_Init();
  9101   005F80  ECD4  F02C         	call	_Lcd_Init	;wreg free
  9102   005F84                     
  9103                           ;mainEncoder.c: 544:     INTERRUPT_Init();
  9104   005F84  EC1F  F031         	call	_INTERRUPT_Init	;wreg free
  9105   005F88                     
  9106                           ;mainEncoder.c: 546:     TIMER0_ModoTemporizador_Init();
  9107   005F88  EC52  F030         	call	_TIMER0_ModoTemporizador_Init	;wreg free
  9108                           
  9109                           ;mainEncoder.c: 548:     TIMER0_Interrupt_Init();
  9110   005F8C  EC1B  F031         	call	_TIMER0_Interrupt_Init	;wreg free
  9111   005F90                     
  9112                           ;mainEncoder.c: 550:     TIMER1_ModoContador_Init();
  9113   005F90  EC75  F030         	call	_TIMER1_ModoContador_Init	;wreg free
  9114   005F94                     
  9115                           ;mainEncoder.c: 552:     TIMER2_ModoPWM_Init();
  9116   005F94  ECFE  F030         	call	_TIMER2_ModoPWM_Init	;wreg free
  9117   005F98                     
  9118                           ;mainEncoder.c: 554:     CCPR2_ModoPWM_Init();
  9119   005F98  ECB5  F030         	call	_CCPR2_ModoPWM_Init	;wreg free
  9120   005F9C                     
  9121                           ;mainEncoder.c: 556:     EUSART_SerialBegin(9600);
  9122   005F9C  0E80               	movlw	128
  9123   005F9E  6E0E               	movwf	EUSART_SerialBegin@baudios^0,c
  9124   005FA0  0E25               	movlw	37
  9125   005FA2  6E0F               	movwf	(EUSART_SerialBegin@baudios+1)^0,c
  9126   005FA4  0E00               	movlw	0
  9127   005FA6  6E10               	movwf	(EUSART_SerialBegin@baudios+2)^0,c
  9128   005FA8  0E00               	movlw	0
  9129   005FAA  6E11               	movwf	(EUSART_SerialBegin@baudios+3)^0,c
  9130   005FAC  EC7A  F02D         	call	_EUSART_SerialBegin	;wreg free
  9131   005FB0  0012               	return		;funcret
  9132   005FB2                     __end_of_Hardware_Init:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function _TIMER2_ModoPWM_Init *****************
  9136 ;; Defined at:
  9137 ;;		line 494 in file "mainEncoder.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;		None
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;		None
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      void 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9151 ;;      Params:         0       0       0       0       0       0       0       0       0
  9152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9155 ;;Total ram usage:        0 bytes
  9156 ;; Hardware stack levels used: 1
  9157 ;; Hardware stack levels required when called: 2
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_Hardware_Init
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text35
  9166   0061FC                     __ptext35:
  9167                           	callstack 0
  9168   0061FC                     _TIMER2_ModoPWM_Init:
  9169                           	callstack 27
  9170   0061FC                     
  9171                           ;mainEncoder.c: 496:     T2CONbits.TMR2ON = 0;
  9172   0061FC  94BA               	bcf	186,2,c	;volatile
  9173   0061FE                     
  9174                           ;mainEncoder.c: 497:     T2CONbits.T2OUTPS = 0b0000;
  9175   0061FE  0E87               	movlw	-121
  9176   006200  16BA               	andwf	186,f,c	;volatile
  9177                           
  9178                           ;mainEncoder.c: 498:     T2CONbits.T2CKPS = 0b11;
  9179   006202  0E03               	movlw	3
  9180   006204  12BA               	iorwf	186,f,c	;volatile
  9181                           
  9182                           ;mainEncoder.c: 501:     TMR2 = 0;
  9183   006206  0E00               	movlw	0
  9184   006208  6EBC               	movwf	188,c	;volatile
  9185   00620A  0012               	return		;funcret
  9186   00620C                     __end_of_TIMER2_ModoPWM_Init:
  9187                           	callstack 0
  9188                           
  9189 ;; *************** function _TIMER1_ModoContador_Init *****************
  9190 ;; Defined at:
  9191 ;;		line 463 in file "mainEncoder.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9208 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used: 1
  9211 ;; Hardware stack levels required when called: 2
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_Hardware_Init
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text36
  9220   0060EA                     __ptext36:
  9221                           	callstack 0
  9222   0060EA                     _TIMER1_ModoContador_Init:
  9223                           	callstack 27
  9224   0060EA                     
  9225                           ;mainEncoder.c: 466:     T1CONbits.TMR1ON = 0;
  9226   0060EA  90CD               	bcf	205,0,c	;volatile
  9227                           
  9228                           ;mainEncoder.c: 467:     T1CONbits.SOSCEN = 0;
  9229   0060EC  96CD               	bcf	205,3,c	;volatile
  9230   0060EE                     
  9231                           ;mainEncoder.c: 468:     T1CONbits.TMR1CS = 10;
  9232   0060EE  50CD               	movf	205,w,c	;volatile
  9233   0060F0  0B3F               	andlw	-193
  9234   0060F2  0980               	iorlw	128
  9235   0060F4  6ECD               	movwf	205,c	;volatile
  9236                           
  9237                           ;mainEncoder.c: 469:     T1CONbits.T1CKPS = 0b00;
  9238   0060F6  0ECF               	movlw	-49
  9239   0060F8  16CD               	andwf	205,f,c	;volatile
  9240   0060FA                     
  9241                           ;mainEncoder.c: 470:     T1CONbits.T1SYNC = 1;
  9242   0060FA  84CD               	bsf	205,2,c	;volatile
  9243   0060FC                     
  9244                           ;mainEncoder.c: 471:     T1CONbits.RD16 = 1;
  9245   0060FC  82CD               	bsf	205,1,c	;volatile
  9246                           
  9247                           ;mainEncoder.c: 474:     TMR1 = 0;
  9248   0060FE  0E00               	movlw	0
  9249   006100  6ECF               	movwf	207,c	;volatile
  9250   006102  0E00               	movlw	0
  9251   006104  6ECE               	movwf	206,c	;volatile
  9252   006106                     
  9253                           ;mainEncoder.c: 477:     T1CONbits.TMR1ON = 1;
  9254   006106  80CD               	bsf	205,0,c	;volatile
  9255   006108  0012               	return		;funcret
  9256   00610A                     __end_of_TIMER1_ModoContador_Init:
  9257                           	callstack 0
  9258                           
  9259 ;; *************** function _TIMER0_ModoTemporizador_Init *****************
  9260 ;; Defined at:
  9261 ;;		line 426 in file "mainEncoder.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;		None
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9279 ;;Total ram usage:        0 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 2
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_Hardware_Init
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text37
  9290   0060A4                     __ptext37:
  9291                           	callstack 0
  9292   0060A4                     _TIMER0_ModoTemporizador_Init:
  9293                           	callstack 27
  9294   0060A4                     
  9295                           ;mainEncoder.c: 429:     T0CONbits.TMR0ON = 0;
  9296   0060A4  9ED5               	bcf	213,7,c	;volatile
  9297                           
  9298                           ;mainEncoder.c: 430:     T0CONbits.T0CS = 0;
  9299   0060A6  9AD5               	bcf	213,5,c	;volatile
  9300                           
  9301                           ;mainEncoder.c: 431:     T0CONbits.PSA = 0;
  9302   0060A8  96D5               	bcf	213,3,c	;volatile
  9303   0060AA                     
  9304                           ;mainEncoder.c: 432:     T0CONbits.T0PS = 0b110;
  9305   0060AA  50D5               	movf	213,w,c	;volatile
  9306   0060AC  0BF8               	andlw	-8
  9307   0060AE  0906               	iorlw	6
  9308   0060B0  6ED5               	movwf	213,c	;volatile
  9309   0060B2                     
  9310                           ;mainEncoder.c: 433:     T0CONbits.T08BIT = 0;
  9311   0060B2  9CD5               	bcf	213,6,c	;volatile
  9312                           
  9313                           ;mainEncoder.c: 436:     TMR0=0;
  9314   0060B4  0E00               	movlw	0
  9315   0060B6  6ED7               	movwf	215,c	;volatile
  9316   0060B8  0E00               	movlw	0
  9317   0060BA  6ED6               	movwf	214,c	;volatile
  9318                           
  9319                           ;mainEncoder.c: 439:     TMR0= 34286;
  9320   0060BC  0E85               	movlw	133
  9321   0060BE  6ED7               	movwf	215,c	;volatile
  9322   0060C0  0EEE               	movlw	238
  9323   0060C2  6ED6               	movwf	214,c	;volatile
  9324   0060C4                     
  9325                           ;mainEncoder.c: 442:     T0CONbits.TMR0ON = 0;
  9326   0060C4  9ED5               	bcf	213,7,c	;volatile
  9327   0060C6  0012               	return		;funcret
  9328   0060C8                     __end_of_TIMER0_ModoTemporizador_Init:
  9329                           	callstack 0
  9330                           
  9331 ;; *************** function _TIMER0_Interrupt_Init *****************
  9332 ;; Defined at:
  9333 ;;		line 446 in file "mainEncoder.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		None
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9347 ;;      Params:         0       0       0       0       0       0       0       0       0
  9348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9351 ;;Total ram usage:        0 bytes
  9352 ;; Hardware stack levels used: 1
  9353 ;; Hardware stack levels required when called: 2
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_Hardware_Init
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text38
  9362   006236                     __ptext38:
  9363                           	callstack 0
  9364   006236                     _TIMER0_Interrupt_Init:
  9365                           	callstack 27
  9366   006236                     
  9367                           ;mainEncoder.c: 448:     INTCONbits.TMR0IE = 1;
  9368   006236  8AF2               	bsf	242,5,c	;volatile
  9369                           
  9370                           ;mainEncoder.c: 449:     INTCONbits.TMR0IF = 0;
  9371   006238  94F2               	bcf	242,2,c	;volatile
  9372                           
  9373                           ;mainEncoder.c: 450:     INTCON2bits.TMR0IP = 1;
  9374   00623A  84F1               	bsf	241,2,c	;volatile
  9375   00623C  0012               	return		;funcret
  9376   00623E                     __end_of_TIMER0_Interrupt_Init:
  9377                           	callstack 0
  9378                           
  9379 ;; *************** function _PORT_Init *****************
  9380 ;; Defined at:
  9381 ;;		line 395 in file "mainEncoder.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used: 1
  9401 ;; Hardware stack levels required when called: 2
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_Hardware_Init
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text39
  9410   0060C8                     __ptext39:
  9411                           	callstack 0
  9412   0060C8                     _PORT_Init:
  9413                           	callstack 27
  9414   0060C8                     
  9415                           ;mainEncoder.c: 398:     ANSELAbits.ANSA0 = 1;
  9416   0060C8  010F               	movlb	15	; () banked
  9417   0060CA  815B               	bsf	91,0,b	;volatile
  9418                           
  9419                           ;mainEncoder.c: 399:     TRISAbits.TRISA0 = 1;
  9420   0060CC  8092               	bsf	146,0,c	;volatile
  9421   0060CE                     
  9422                           ; BSR set to: 15
  9423                           ;mainEncoder.c: 402:     ANSELB = 0x00;
  9424   0060CE  0E00               	movlw	0
  9425   0060D0  6F5C               	movwf	92,b	;volatile
  9426   0060D2                     
  9427                           ; BSR set to: 15
  9428                           ;mainEncoder.c: 405:     INTCON2bits.RBPU = 0;
  9429   0060D2  9EF1               	bcf	241,7,c	;volatile
  9430   0060D4                     
  9431                           ; BSR set to: 15
  9432                           ;mainEncoder.c: 408:     WPUBbits.WPUB4 = 1;
  9433   0060D4  8885               	bsf	133,4,c	;volatile
  9434   0060D6                     
  9435                           ; BSR set to: 15
  9436                           ;mainEncoder.c: 409:     WPUBbits.WPUB5 = 1;
  9437   0060D6  8A85               	bsf	133,5,c	;volatile
  9438   0060D8                     
  9439                           ; BSR set to: 15
  9440                           ;mainEncoder.c: 410:     WPUBbits.WPUB6 = 1;
  9441   0060D8  8C85               	bsf	133,6,c	;volatile
  9442   0060DA                     
  9443                           ; BSR set to: 15
  9444                           ;mainEncoder.c: 411:     WPUBbits.WPUB7 = 1;
  9445   0060DA  8E85               	bsf	133,7,c	;volatile
  9446   0060DC                     
  9447                           ; BSR set to: 15
  9448                           ;mainEncoder.c: 414:     TRISDbits.TRISD0 = 0;
  9449   0060DC  9095               	bcf	149,0,c	;volatile
  9450   0060DE                     
  9451                           ; BSR set to: 15
  9452                           ;mainEncoder.c: 415:     LATDbits.LATD0 = 0;
  9453   0060DE  908C               	bcf	140,0,c	;volatile
  9454   0060E0                     
  9455                           ; BSR set to: 15
  9456                           ;mainEncoder.c: 418:     TRISCbits.TRISC0 = 1;
  9457   0060E0  8094               	bsf	148,0,c	;volatile
  9458   0060E2                     
  9459                           ; BSR set to: 15
  9460                           ;mainEncoder.c: 419:     TRISCbits.TRISC1 = 0;
  9461   0060E2  9294               	bcf	148,1,c	;volatile
  9462                           
  9463                           ;mainEncoder.c: 422:     ANSELD = 0x00;
  9464   0060E4  0E00               	movlw	0
  9465   0060E6  6F5E               	movwf	94,b	;volatile
  9466   0060E8                     
  9467                           ; BSR set to: 15
  9468   0060E8  0012               	return		;funcret
  9469   0060EA                     __end_of_PORT_Init:
  9470                           	callstack 0
  9471                           
  9472 ;; *************** function _OSCILADOR_Init *****************
  9473 ;; Defined at:
  9474 ;;		line 5 in file "lib_pic/config_mcu.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg, status,2
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used: 1
  9494 ;; Hardware stack levels required when called: 2
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_Hardware_Init
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text40
  9503   00621A                     __ptext40:
  9504                           	callstack 0
  9505   00621A                     _OSCILADOR_Init:
  9506                           	callstack 27
  9507   00621A                     
  9508                           ;lib_pic/config_mcu.c: 7:     OSCCONbits.IRCF = 0b111;
  9509   00621A  0E70               	movlw	112
  9510   00621C  12D3               	iorwf	211,f,c	;volatile
  9511                           
  9512                           ;lib_pic/config_mcu.c: 8:     OSCCONbits.SCS = 0b10;
  9513   00621E  50D3               	movf	211,w,c	;volatile
  9514   006220  0BFC               	andlw	-4
  9515   006222  0902               	iorlw	2
  9516   006224  6ED3               	movwf	211,c	;volatile
  9517   006226  0012               	return		;funcret
  9518   006228                     __end_of_OSCILADOR_Init:
  9519                           	callstack 0
  9520                           
  9521 ;; *************** function _Lcd_Init *****************
  9522 ;; Defined at:
  9523 ;;		line 88 in file "lib_pic/lcd.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;		None
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;		None
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      void 
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9539 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9541 ;;Total ram usage:        1 bytes
  9542 ;; Hardware stack levels used: 1
  9543 ;; Hardware stack levels required when called: 4
  9544 ;; This function calls:
  9545 ;;		_Lcd_Cmd
  9546 ;;		_Lcd_Port
  9547 ;; This function is called by:
  9548 ;;		_Hardware_Init
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text41
  9553   0059A8                     __ptext41:
  9554                           	callstack 0
  9555   0059A8                     _Lcd_Init:
  9556                           	callstack 25
  9557   0059A8                     
  9558                           ;lib_pic/lcd.c: 91:  TRISD &= ~(0xF0);
  9559   0059A8  0E0F               	movlw	15
  9560   0059AA  1695               	andwf	149,f,c	;volatile
  9561                           
  9562                           ;lib_pic/lcd.c: 92:  TRISD &= ~((1<<3)|(1<<2));
  9563   0059AC  0EF3               	movlw	243
  9564   0059AE  1695               	andwf	149,f,c	;volatile
  9565   0059B0                     
  9566                           ;lib_pic/lcd.c: 94:  Lcd_Port(0x00);
  9567   0059B0  0E00               	movlw	0
  9568   0059B2  EC0E  F02E         	call	_Lcd_Port
  9569   0059B6                     
  9570                           ;lib_pic/lcd.c: 95:  _delay((unsigned long)((20)*(16000000UL/4000.0)));
  9571   0059B6  0E68               	movlw	104
  9572   0059B8  6E04               	movwf	??_Lcd_Init^0,c
  9573   0059BA  0EE4               	movlw	228
  9574   0059BC                     u5497:
  9575   0059BC  2EE8               	decfsz	wreg,f,c
  9576   0059BE  D7FE               	bra	u5497
  9577   0059C0  2E04               	decfsz	??_Lcd_Init^0,f,c
  9578   0059C2  D7FC               	bra	u5497
  9579   0059C4  D000               	nop2	
  9580   0059C6                     
  9581                           ;lib_pic/lcd.c: 96:  Lcd_Cmd(0x03);
  9582   0059C6  0E03               	movlw	3
  9583   0059C8  EC85  F030         	call	_Lcd_Cmd
  9584   0059CC                     
  9585                           ;lib_pic/lcd.c: 97:  _delay((unsigned long)((5)*(16000000UL/4000.0)));
  9586   0059CC  0E1A               	movlw	26
  9587   0059CE  6E04               	movwf	??_Lcd_Init^0,c
  9588   0059D0  0EF8               	movlw	248
  9589   0059D2                     u5507:
  9590   0059D2  2EE8               	decfsz	wreg,f,c
  9591   0059D4  D7FE               	bra	u5507
  9592   0059D6  2E04               	decfsz	??_Lcd_Init^0,f,c
  9593   0059D8  D7FC               	bra	u5507
  9594   0059DA  D000               	nop2	
  9595   0059DC                     
  9596                           ;lib_pic/lcd.c: 98:  Lcd_Cmd(0x03);
  9597   0059DC  0E03               	movlw	3
  9598   0059DE  EC85  F030         	call	_Lcd_Cmd
  9599   0059E2                     
  9600                           ;lib_pic/lcd.c: 99:  _delay((unsigned long)((11)*(16000000UL/4000.0)));
  9601   0059E2  0E3A               	movlw	58
  9602   0059E4  6E04               	movwf	??_Lcd_Init^0,c
  9603   0059E6  0E23               	movlw	35
  9604   0059E8                     u5517:
  9605   0059E8  2EE8               	decfsz	wreg,f,c
  9606   0059EA  D7FE               	bra	u5517
  9607   0059EC  2E04               	decfsz	??_Lcd_Init^0,f,c
  9608   0059EE  D7FC               	bra	u5517
  9609   0059F0  F000               	nop	
  9610   0059F2                     
  9611                           ;lib_pic/lcd.c: 100:  Lcd_Cmd(0x03);
  9612   0059F2  0E03               	movlw	3
  9613   0059F4  EC85  F030         	call	_Lcd_Cmd
  9614   0059F8                     
  9615                           ;lib_pic/lcd.c: 102:  Lcd_Cmd(0x02);
  9616   0059F8  0E02               	movlw	2
  9617   0059FA  EC85  F030         	call	_Lcd_Cmd
  9618   0059FE                     
  9619                           ;lib_pic/lcd.c: 103:  Lcd_Cmd(0x02);
  9620   0059FE  0E02               	movlw	2
  9621   005A00  EC85  F030         	call	_Lcd_Cmd
  9622   005A04                     
  9623                           ;lib_pic/lcd.c: 104:  Lcd_Cmd(0x08);
  9624   005A04  0E08               	movlw	8
  9625   005A06  EC85  F030         	call	_Lcd_Cmd
  9626   005A0A                     
  9627                           ;lib_pic/lcd.c: 105:  Lcd_Cmd(0x00);
  9628   005A0A  0E00               	movlw	0
  9629   005A0C  EC85  F030         	call	_Lcd_Cmd
  9630   005A10                     
  9631                           ;lib_pic/lcd.c: 106:  Lcd_Cmd(0x0C);
  9632   005A10  0E0C               	movlw	12
  9633   005A12  EC85  F030         	call	_Lcd_Cmd
  9634   005A16                     
  9635                           ;lib_pic/lcd.c: 107:  Lcd_Cmd(0x00);
  9636   005A16  0E00               	movlw	0
  9637   005A18  EC85  F030         	call	_Lcd_Cmd
  9638   005A1C                     
  9639                           ;lib_pic/lcd.c: 108:  Lcd_Cmd(0x06);
  9640   005A1C  0E06               	movlw	6
  9641   005A1E  EC85  F030         	call	_Lcd_Cmd
  9642   005A22  0012               	return		;funcret
  9643   005A24                     __end_of_Lcd_Init:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _Lcd_Cmd *****************
  9647 ;; Defined at:
  9648 ;;		line 33 in file "lib_pic/lcd.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  a               1    wreg     unsigned char 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  a               1    2[COMRAM] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0
  9663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9664 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9665 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9666 ;;Total ram usage:        2 bytes
  9667 ;; Hardware stack levels used: 1
  9668 ;; Hardware stack levels required when called: 3
  9669 ;; This function calls:
  9670 ;;		_Lcd_Port
  9671 ;; This function is called by:
  9672 ;;		_Lcd_Clear
  9673 ;;		_Lcd_Set_Cursor
  9674 ;;		_Lcd_Init
  9675 ;;		_Lcd_Shift_Right
  9676 ;;		_Lcd_Shift_Left
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text42
  9681   00610A                     __ptext42:
  9682                           	callstack 0
  9683   00610A                     _Lcd_Cmd:
  9684                           	callstack 26
  9685                           
  9686                           ;incstack = 0
  9687                           ;Lcd_Cmd@a stored from wreg
  9688   00610A  6E03               	movwf	Lcd_Cmd@a^0,c
  9689   00610C                     
  9690                           ;lib_pic/lcd.c: 33: void Lcd_Cmd(unsigned char a);lib_pic/lcd.c: 34: {;lib_pic/lcd.c: 35
      +                          :  LATD &= ~(1<<2);
  9691   00610C  948C               	bcf	140,2,c	;volatile
  9692   00610E                     
  9693                           ;lib_pic/lcd.c: 36:  Lcd_Port(a);
  9694   00610E  5003               	movf	Lcd_Cmd@a^0,w,c
  9695   006110  EC0E  F02E         	call	_Lcd_Port
  9696   006114                     
  9697                           ;lib_pic/lcd.c: 37:  LATD |= (1<<3);
  9698   006114  868C               	bsf	140,3,c	;volatile
  9699   006116                     
  9700                           ;lib_pic/lcd.c: 38:     _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9701   006116  0E15               	movlw	21
  9702   006118  6E02               	movwf	??_Lcd_Cmd^0,c
  9703   00611A  0EC6               	movlw	198
  9704   00611C                     u5527:
  9705   00611C  2EE8               	decfsz	wreg,f,c
  9706   00611E  D7FE               	bra	u5527
  9707   006120  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  9708   006122  D7FC               	bra	u5527
  9709   006124  D000               	nop2	
  9710   006126                     
  9711                           ;lib_pic/lcd.c: 39:  LATD &= ~(1<<3);
  9712   006126  968C               	bcf	140,3,c	;volatile
  9713   006128  0012               	return		;funcret
  9714   00612A                     __end_of_Lcd_Cmd:
  9715                           	callstack 0
  9716                           
  9717 ;; *************** function _Lcd_Port *****************
  9718 ;; Defined at:
  9719 ;;		line 5 in file "lib_pic/lcd.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  a               1    wreg     unsigned char 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  a               1    0[COMRAM] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0
  9734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9736 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9737 ;;Total ram usage:        1 bytes
  9738 ;; Hardware stack levels used: 1
  9739 ;; Hardware stack levels required when called: 2
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_Lcd_Cmd
  9744 ;;		_Lcd_Init
  9745 ;;		_Lcd_Write_Char
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text43
  9750   005C1C                     __ptext43:
  9751                           	callstack 0
  9752   005C1C                     _Lcd_Port:
  9753                           	callstack 26
  9754                           
  9755                           ;incstack = 0
  9756                           ;Lcd_Port@a stored from wreg
  9757   005C1C  6E01               	movwf	Lcd_Port@a^0,c
  9758   005C1E                     
  9759                           ;lib_pic/lcd.c: 5: void Lcd_Port(unsigned char a);lib_pic/lcd.c: 6: {;lib_pic/lcd.c: 7: 
      +                           if(a & 1)
  9760   005C1E  A001               	btfss	Lcd_Port@a^0,0,c
  9761   005C20  EF14  F02E         	goto	u4551
  9762   005C24  EF16  F02E         	goto	u4550
  9763   005C28                     u4551:
  9764   005C28  EF19  F02E         	goto	l5148
  9765   005C2C                     u4550:
  9766   005C2C                     
  9767                           ;lib_pic/lcd.c: 9:   LATD |= (1<<4);
  9768   005C2C  888C               	bsf	140,4,c	;volatile
  9769   005C2E  EF1A  F02E         	goto	l5150
  9770   005C32                     l5148:
  9771                           
  9772                           ;lib_pic/lcd.c: 12:   LATD &= ~(1<<4);
  9773   005C32  988C               	bcf	140,4,c	;volatile
  9774   005C34                     l5150:
  9775                           
  9776                           ;lib_pic/lcd.c: 13:  if(a & 2)
  9777   005C34  A201               	btfss	Lcd_Port@a^0,1,c
  9778   005C36  EF1F  F02E         	goto	u4561
  9779   005C3A  EF21  F02E         	goto	u4560
  9780   005C3E                     u4561:
  9781   005C3E  EF24  F02E         	goto	l5154
  9782   005C42                     u4560:
  9783   005C42                     
  9784                           ;lib_pic/lcd.c: 15:   LATD |= (1<<5);
  9785   005C42  8A8C               	bsf	140,5,c	;volatile
  9786   005C44  EF25  F02E         	goto	l5156
  9787   005C48                     l5154:
  9788                           
  9789                           ;lib_pic/lcd.c: 18:   LATD &= ~(1<<5);
  9790   005C48  9A8C               	bcf	140,5,c	;volatile
  9791   005C4A                     l5156:
  9792                           
  9793                           ;lib_pic/lcd.c: 19:  if(a & 4)
  9794   005C4A  A401               	btfss	Lcd_Port@a^0,2,c
  9795   005C4C  EF2A  F02E         	goto	u4571
  9796   005C50  EF2C  F02E         	goto	u4570
  9797   005C54                     u4571:
  9798   005C54  EF2F  F02E         	goto	l5160
  9799   005C58                     u4570:
  9800   005C58                     
  9801                           ;lib_pic/lcd.c: 21:   LATD |= (1<<6);
  9802   005C58  8C8C               	bsf	140,6,c	;volatile
  9803   005C5A  EF30  F02E         	goto	l5162
  9804   005C5E                     l5160:
  9805                           
  9806                           ;lib_pic/lcd.c: 24:   LATD &= ~(1<<6);
  9807   005C5E  9C8C               	bcf	140,6,c	;volatile
  9808   005C60                     l5162:
  9809                           
  9810                           ;lib_pic/lcd.c: 25:  if(a & 8)
  9811   005C60  A601               	btfss	Lcd_Port@a^0,3,c
  9812   005C62  EF35  F02E         	goto	u4581
  9813   005C66  EF37  F02E         	goto	u4580
  9814   005C6A                     u4581:
  9815   005C6A  EF3A  F02E         	goto	l5166
  9816   005C6E                     u4580:
  9817   005C6E                     
  9818                           ;lib_pic/lcd.c: 27:   LATD |= (1<<7);
  9819   005C6E  8E8C               	bsf	140,7,c	;volatile
  9820   005C70  EF3B  F02E         	goto	l156
  9821   005C74                     l5166:
  9822                           
  9823                           ;lib_pic/lcd.c: 30:   LATD &= ~(1<<7);
  9824   005C74  9E8C               	bcf	140,7,c	;volatile
  9825   005C76                     l156:
  9826   005C76  0012               	return		;funcret
  9827   005C78                     __end_of_Lcd_Port:
  9828                           	callstack 0
  9829                           
  9830 ;; *************** function _Key_Init *****************
  9831 ;; Defined at:
  9832 ;;		line 9 in file "lib_pic/keypad_4x4.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;		None
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;		None
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, status,2, status,0
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9846 ;;      Params:         0       0       0       0       0       0       0       0       0
  9847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9850 ;;Total ram usage:        0 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 2
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_Hardware_Init
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text44
  9861   006228                     __ptext44:
  9862                           	callstack 0
  9863   006228                     _Key_Init:
  9864                           	callstack 27
  9865   006228                     
  9866                           ;lib_pic/keypad_4x4.c: 12:  TRISB &= ~((1<<3)|(1<<2)|(1<<1)|(1<<0));
  9867   006228  0EF0               	movlw	240
  9868   00622A  1693               	andwf	147,f,c	;volatile
  9869                           
  9870                           ;lib_pic/keypad_4x4.c: 13:  TRISB |= (1<<7)|(1<<6)|(1<<5)|(1<<4);
  9871   00622C  0EF0               	movlw	240
  9872   00622E  1293               	iorwf	147,f,c	;volatile
  9873                           
  9874                           ;lib_pic/keypad_4x4.c: 15:  LATB |= (1<<3)|(1<<2)|(1<<1)|(1<<0);
  9875   006230  0E0F               	movlw	15
  9876   006232  128A               	iorwf	138,f,c	;volatile
  9877   006234  0012               	return		;funcret
  9878   006236                     __end_of_Key_Init:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _INTERRUPT_Init *****************
  9882 ;; Defined at:
  9883 ;;		line 453 in file "mainEncoder.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		None
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9900 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9901 ;;Total ram usage:        0 bytes
  9902 ;; Hardware stack levels used: 1
  9903 ;; Hardware stack levels required when called: 2
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_Hardware_Init
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text45
  9912   00623E                     __ptext45:
  9913                           	callstack 0
  9914   00623E                     _INTERRUPT_Init:
  9915                           	callstack 27
  9916   00623E                     
  9917                           ;mainEncoder.c: 456:     RCONbits.IPEN = 1;
  9918   00623E  8ED0               	bsf	208,7,c	;volatile
  9919                           
  9920                           ;mainEncoder.c: 458:     INTCONbits.GIEH = 1;
  9921   006240  8EF2               	bsf	242,7,c	;volatile
  9922                           
  9923                           ;mainEncoder.c: 460:     INTCONbits.GIEL = 1;
  9924   006242  8CF2               	bsf	242,6,c	;volatile
  9925   006244  0012               	return		;funcret
  9926   006246                     __end_of_INTERRUPT_Init:
  9927                           	callstack 0
  9928                           
  9929 ;; *************** function _EUSART_SerialBegin *****************
  9930 ;; Defined at:
  9931 ;;		line 5 in file "lib_pic/eusart.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  baudios         4   13[COMRAM] unsigned long 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  n               2   17[COMRAM] unsigned short 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9945 ;;      Params:         4       0       0       0       0       0       0       0       0
  9946 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9948 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9949 ;;Total ram usage:        6 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; Hardware stack levels required when called: 3
  9952 ;; This function calls:
  9953 ;;		___lldiv
  9954 ;; This function is called by:
  9955 ;;		_Hardware_Init
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text46
  9960   005AF4                     __ptext46:
  9961                           	callstack 0
  9962   005AF4                     _EUSART_SerialBegin:
  9963                           	callstack 26
  9964   005AF4                     
  9965                           ;lib_pic/eusart.c: 10:     ANSELCbits.ANSC6 = 0;
  9966   005AF4  010F               	movlb	15	; () banked
  9967   005AF6  9D5D               	bcf	93,6,b	;volatile
  9968   005AF8                     
  9969                           ; BSR set to: 15
  9970                           ;lib_pic/eusart.c: 11:     TRISCbits.TRISC6 = 0;
  9971   005AF8  9C94               	bcf	148,6,c	;volatile
  9972   005AFA                     
  9973                           ; BSR set to: 15
  9974                           ;lib_pic/eusart.c: 12:     ANSELCbits.ANSC7 = 0;
  9975   005AFA  9F5D               	bcf	93,7,b	;volatile
  9976   005AFC                     
  9977                           ; BSR set to: 15
  9978                           ;lib_pic/eusart.c: 13:     TRISCbits.TRISC7 = 1;
  9979   005AFC  8E94               	bsf	148,7,c	;volatile
  9980                           
  9981                           ;lib_pic/eusart.c: 16:     TXSTA1 = 0b00100100;
  9982   005AFE  0E24               	movlw	36
  9983   005B00  6EAC               	movwf	172,c	;volatile
  9984                           
  9985                           ;lib_pic/eusart.c: 18:     RCSTA1 = 0b10010000;
  9986   005B02  0E90               	movlw	144
  9987   005B04  6EAB               	movwf	171,c	;volatile
  9988                           
  9989                           ;lib_pic/eusart.c: 20:     BAUDCON1 = 0b00001000;
  9990   005B06  0E08               	movlw	8
  9991   005B08  6EB8               	movwf	184,c	;volatile
  9992   005B0A                     
  9993                           ; BSR set to: 15
  9994                           ;lib_pic/eusart.c: 23:     n = (uint16_t)(((16000000UL/baudios)/4UL)-1UL);
  9995   005B0A  0E00               	movlw	0
  9996   005B0C  6E01               	movwf	___lldiv@dividend^0,c
  9997   005B0E  0E24               	movlw	36
  9998   005B10  6E02               	movwf	(___lldiv@dividend+1)^0,c
  9999   005B12  0EF4               	movlw	244
 10000   005B14  6E03               	movwf	(___lldiv@dividend+2)^0,c
 10001   005B16  0E00               	movlw	0
 10002   005B18  6E04               	movwf	(___lldiv@dividend+3)^0,c
 10003   005B1A  C00E  F005         	movff	EUSART_SerialBegin@baudios,___lldiv@divisor
 10004   005B1E  C00F  F006         	movff	EUSART_SerialBegin@baudios+1,___lldiv@divisor+1
 10005   005B22  C010  F007         	movff	EUSART_SerialBegin@baudios+2,___lldiv@divisor+2
 10006   005B26  C011  F008         	movff	EUSART_SerialBegin@baudios+3,___lldiv@divisor+3
 10007   005B2A  EC3C  F028         	call	___lldiv	;wreg free
 10008   005B2E  0E03               	movlw	3
 10009   005B30  EF9F  F02D         	goto	u4900
 10010   005B34                     u4905:
 10011   005B34  90D8               	bcf	status,0,c
 10012   005B36  3204               	rrcf	(?___lldiv+3)^0,f,c
 10013   005B38  3203               	rrcf	(?___lldiv+2)^0,f,c
 10014   005B3A  3202               	rrcf	(?___lldiv+1)^0,f,c
 10015   005B3C  3201               	rrcf	?___lldiv^0,f,c
 10016   005B3E                     u4900:
 10017   005B3E  2EE8               	decfsz	wreg,f,c
 10018   005B40  EF9A  F02D         	goto	u4905
 10019   005B44  0EFF               	movlw	255
 10020   005B46  2401               	addwf	?___lldiv^0,w,c
 10021   005B48  6E12               	movwf	EUSART_SerialBegin@n^0,c
 10022   005B4A  0EFF               	movlw	255
 10023   005B4C  2002               	addwfc	(?___lldiv+1)^0,w,c
 10024   005B4E  6E13               	movwf	(EUSART_SerialBegin@n+1)^0,c
 10025   005B50                     
 10026                           ;lib_pic/eusart.c: 25:     SPBRG1 = (uint8_t)n;
 10027   005B50  C012  FFAF         	movff	EUSART_SerialBegin@n,4015	;volatile
 10028   005B54                     
 10029                           ;lib_pic/eusart.c: 26:     SPBRGH1 = (uint8_t)(n >> 8);
 10030   005B54  5013               	movf	(EUSART_SerialBegin@n+1)^0,w,c
 10031   005B56  6EB0               	movwf	176,c	;volatile
 10032   005B58  0012               	return		;funcret
 10033   005B5A                     __end_of_EUSART_SerialBegin:
 10034                           	callstack 0
 10035                           
 10036 ;; *************** function ___lldiv *****************
 10037 ;; Defined at:
 10038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  dividend        4    0[COMRAM] unsigned long 
 10041 ;;  divisor         4    4[COMRAM] unsigned long 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  quotient        4    8[COMRAM] unsigned long 
 10044 ;;  counter         1   12[COMRAM] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  4    0[COMRAM] unsigned long 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10054 ;;      Params:         8       0       0       0       0       0       0       0       0
 10055 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10057 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10058 ;;Total ram usage:       13 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 2
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_EUSART_SerialBegin
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           	psect	text47
 10069   005078                     __ptext47:
 10070                           	callstack 0
 10071   005078                     ___lldiv:
 10072                           	callstack 26
 10073   005078  0E00               	movlw	0
 10074   00507A  6E09               	movwf	___lldiv@quotient^0,c
 10075   00507C  0E00               	movlw	0
 10076   00507E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 10077   005080  0E00               	movlw	0
 10078   005082  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 10079   005084  0E00               	movlw	0
 10080   005086  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 10081   005088  5005               	movf	___lldiv@divisor^0,w,c
 10082   00508A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 10083   00508C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 10084   00508E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 10085   005090  B4D8               	btfsc	status,2,c
 10086   005092  EF4D  F028         	goto	u4781
 10087   005096  EF4F  F028         	goto	u4780
 10088   00509A                     u4781:
 10089   00509A  EF85  F028         	goto	l544
 10090   00509E                     u4780:
 10091   00509E  0E01               	movlw	1
 10092   0050A0  6E0D               	movwf	___lldiv@counter^0,c
 10093   0050A2  EF59  F028         	goto	l5480
 10094   0050A6                     l5478:
 10095   0050A6  90D8               	bcf	status,0,c
 10096   0050A8  3605               	rlcf	___lldiv@divisor^0,f,c
 10097   0050AA  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 10098   0050AC  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 10099   0050AE  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 10100   0050B0  2A0D               	incf	___lldiv@counter^0,f,c
 10101   0050B2                     l5480:
 10102   0050B2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 10103   0050B4  EF5E  F028         	goto	u4791
 10104   0050B8  EF60  F028         	goto	u4790
 10105   0050BC                     u4791:
 10106   0050BC  EF53  F028         	goto	l5478
 10107   0050C0                     u4790:
 10108   0050C0                     l5482:
 10109   0050C0  90D8               	bcf	status,0,c
 10110   0050C2  3609               	rlcf	___lldiv@quotient^0,f,c
 10111   0050C4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 10112   0050C6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 10113   0050C8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 10114   0050CA  5005               	movf	___lldiv@divisor^0,w,c
 10115   0050CC  5C01               	subwf	___lldiv@dividend^0,w,c
 10116   0050CE  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10117   0050D0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 10118   0050D2  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10119   0050D4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 10120   0050D6  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10121   0050D8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 10122   0050DA  A0D8               	btfss	status,0,c
 10123   0050DC  EF72  F028         	goto	u4801
 10124   0050E0  EF74  F028         	goto	u4800
 10125   0050E4                     u4801:
 10126   0050E4  EF7D  F028         	goto	l5490
 10127   0050E8                     u4800:
 10128   0050E8  5005               	movf	___lldiv@divisor^0,w,c
 10129   0050EA  5E01               	subwf	___lldiv@dividend^0,f,c
 10130   0050EC  5006               	movf	(___lldiv@divisor+1)^0,w,c
 10131   0050EE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 10132   0050F0  5007               	movf	(___lldiv@divisor+2)^0,w,c
 10133   0050F2  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 10134   0050F4  5008               	movf	(___lldiv@divisor+3)^0,w,c
 10135   0050F6  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 10136   0050F8  8009               	bsf	___lldiv@quotient^0,0,c
 10137   0050FA                     l5490:
 10138   0050FA  90D8               	bcf	status,0,c
 10139   0050FC  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 10140   0050FE  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 10141   005100  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 10142   005102  3205               	rrcf	___lldiv@divisor^0,f,c
 10143   005104  2E0D               	decfsz	___lldiv@counter^0,f,c
 10144   005106  EF60  F028         	goto	l5482
 10145   00510A                     l544:
 10146   00510A  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10147   00510E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10148   005112  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10149   005116  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10150   00511A  0012               	return		;funcret
 10151   00511C                     __end_of___lldiv:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function _CCPR2_ModoPWM_Init *****************
 10155 ;; Defined at:
 10156 ;;		line 504 in file "mainEncoder.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10170 ;;      Params:         0       0       0       0       0       0       0       0       0
 10171 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10173 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10174 ;;Total ram usage:        0 bytes
 10175 ;; Hardware stack levels used: 1
 10176 ;; Hardware stack levels required when called: 2
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_Hardware_Init
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text48
 10185   00616A                     __ptext48:
 10186                           	callstack 0
 10187   00616A                     _CCPR2_ModoPWM_Init:
 10188                           	callstack 27
 10189   00616A                     
 10190                           ;mainEncoder.c: 506:     PR2 = 0xF9;
 10191   00616A  0EF9               	movlw	249
 10192   00616C  6EBB               	movwf	187,c	;volatile
 10193                           
 10194                           ;mainEncoder.c: 507:     CCPR2L = 0;
 10195   00616E  0E00               	movlw	0
 10196   006170  6E90               	movwf	144,c	;volatile
 10197                           
 10198                           ;mainEncoder.c: 508:     CCP2CONbits.CCP2M = 0b1100;
 10199   006172  5097               	movf	151,w,c	;volatile
 10200   006174  0BF0               	andlw	-16
 10201   006176  090C               	iorlw	12
 10202   006178  6E97               	movwf	151,c	;volatile
 10203   00617A                     
 10204                           ;mainEncoder.c: 510:     T2CONbits.TMR2ON = 1;
 10205   00617A  84BA               	bsf	186,2,c	;volatile
 10206   00617C  0012               	return		;funcret
 10207   00617E                     __end_of_CCPR2_ModoPWM_Init:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _EUSART_WriteString *****************
 10211 ;; Defined at:
 10212 ;;		line 35 in file "lib_pic/eusart.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  ptrString       2    1[COMRAM] PTR unsigned char 
 10215 ;;		 -> strtiempo(20), strpwm(20), strRPM(20), 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  1    wreg      void 
 10220 ;; Registers used:
 10221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10227 ;;      Params:         2       0       0       0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10230 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10231 ;;Total ram usage:        2 bytes
 10232 ;; Hardware stack levels used: 1
 10233 ;; Hardware stack levels required when called: 3
 10234 ;; This function calls:
 10235 ;;		_EUSART_WriteChar
 10236 ;; This function is called by:
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text49
 10242   006022                     __ptext49:
 10243                           	callstack 0
 10244   006022                     _EUSART_WriteString:
 10245                           	callstack 27
 10246   006022                     
 10247                           ;lib_pic/eusart.c: 35: void EUSART_WriteString(char *ptrString);lib_pic/eusart.c: 36: {;
      +                          lib_pic/eusart.c: 37:     while(*ptrString != '\0')
 10248   006022  EF1C  F030         	goto	l5970
 10249   006026                     l5966:
 10250                           
 10251                           ;lib_pic/eusart.c: 38:     {;lib_pic/eusart.c: 39:         EUSART_WriteChar(*ptrString);
 10252   006026  C002  FFD9         	movff	EUSART_WriteString@ptrString,fsr2l
 10253   00602A  C003  FFDA         	movff	EUSART_WriteString@ptrString+1,fsr2h
 10254   00602E  50DF               	movf	indf2,w,c
 10255   006030  ECA0  F030         	call	_EUSART_WriteChar
 10256   006034                     
 10257                           ;lib_pic/eusart.c: 40:         ptrString++;
 10258   006034  4A02               	infsnz	EUSART_WriteString@ptrString^0,f,c
 10259   006036  2A03               	incf	(EUSART_WriteString@ptrString+1)^0,f,c
 10260   006038                     l5970:
 10261                           
 10262                           ;lib_pic/eusart.c: 37:     while(*ptrString != '\0')
 10263   006038  C002  FFD9         	movff	EUSART_WriteString@ptrString,fsr2l
 10264   00603C  C003  FFDA         	movff	EUSART_WriteString@ptrString+1,fsr2h
 10265   006040  50DF               	movf	indf2,w,c
 10266   006042  A4D8               	btfss	status,2,c
 10267   006044  EF26  F030         	goto	u5061
 10268   006048  EF28  F030         	goto	u5060
 10269   00604C                     u5061:
 10270   00604C  EF13  F030         	goto	l5966
 10271   006050                     u5060:
 10272   006050  0012               	return		;funcret
 10273   006052                     __end_of_EUSART_WriteString:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _EUSART_WriteChar *****************
 10277 ;; Defined at:
 10278 ;;		line 29 in file "lib_pic/eusart.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  data            1    wreg     unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  data            1    0[COMRAM] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0
 10293 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10294 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10295 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10296 ;;Total ram usage:        1 bytes
 10297 ;; Hardware stack levels used: 1
 10298 ;; Hardware stack levels required when called: 2
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_EUSART_WriteString
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text50
 10307   006140                     __ptext50:
 10308                           	callstack 0
 10309   006140                     _EUSART_WriteChar:
 10310                           	callstack 27
 10311                           
 10312                           ;incstack = 0
 10313                           ;EUSART_WriteChar@data stored from wreg
 10314   006140  6E01               	movwf	EUSART_WriteChar@data^0,c
 10315   006142                     l109:
 10316   006142  A2AC               	btfss	172,1,c	;volatile
 10317   006144  EFA6  F030         	goto	u4911
 10318   006148  EFA8  F030         	goto	u4910
 10319   00614C                     u4911:
 10320   00614C  EFA1  F030         	goto	l109
 10321   006150                     u4910:
 10322   006150                     
 10323                           ;lib_pic/eusart.c: 32:     TXREG1 = data;
 10324   006150  C001  FFAD         	movff	EUSART_WriteChar@data,4013	;volatile
 10325   006154  0012               	return		;funcret
 10326   006156                     __end_of_EUSART_WriteChar:
 10327                           	callstack 0
 10328                           
 10329 ;; *************** function _Control_velocidad_difusoInferenceEngine *****************
 10330 ;; Defined at:
 10331 ;;		line 361 in file "lib_pic/Control_velocidad_difuso.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  error           4   54[BANK0 ] void 
 10334 ;;  CambioError     4   58[BANK0 ] void 
 10335 ;;  _d_Salida       2   62[BANK0 ] PTR 
 10336 ;;		 -> salida(4), 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  Salida          4   84[COMRAM] PTR 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10348 ;;      Params:         0      10       0       0       0       0       0       0       0
 10349 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10351 ;;      Totals:         4      10       0       0       0       0       0       0       0
 10352 ;;Total ram usage:       14 bytes
 10353 ;; Hardware stack levels used: 1
 10354 ;; Hardware stack levels required when called: 7
 10355 ;; This function calls:
 10356 ;;		_RL_reglas_controlador
 10357 ;; This function is called by:
 10358 ;;		_main
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text51
 10363   005E1C                     __ptext51:
 10364                           	callstack 0
 10365   005E1C                     _Control_velocidad_difusoInferenceEngine:
 10366                           	callstack 23
 10367   005E1C                     
 10368                           ;lib_pic/Control_velocidad_difuso.c: 362:  double Salida;;lib_pic/Control_velocidad_difu
      +                          so.c: 363:  RL_reglas_controlador(error, CambioError, &Salida);
 10369   005E1C  C096  F08C         	movff	Control_velocidad_difusoInferenceEngine@error,RL_reglas_controlador@error
 10370   005E20  C097  F08D         	movff	Control_velocidad_difusoInferenceEngine@error+1,RL_reglas_controlador@error+1
 10371   005E24  C098  F08E         	movff	Control_velocidad_difusoInferenceEngine@error+2,RL_reglas_controlador@error+2
 10372   005E28  C099  F08F         	movff	Control_velocidad_difusoInferenceEngine@error+3,RL_reglas_controlador@error+3
 10373   005E2C  C09A  F090         	movff	Control_velocidad_difusoInferenceEngine@CambioError,RL_reglas_controlador@CambioE
      +                          rror
 10374   005E30  C09B  F091         	movff	Control_velocidad_difusoInferenceEngine@CambioError+1,RL_reglas_controlador@Cambi
      +                          oError+1
 10375   005E34  C09C  F092         	movff	Control_velocidad_difusoInferenceEngine@CambioError+2,RL_reglas_controlador@Cambi
      +                          oError+2
 10376   005E38  C09D  F093         	movff	Control_velocidad_difusoInferenceEngine@CambioError+3,RL_reglas_controlador@Cambi
      +                          oError+3
 10377   005E3C  0E55               	movlw	low Control_velocidad_difusoInferenceEngine@Salida
 10378   005E3E  0100               	movlb	0	; () banked
 10379   005E40  6F94               	movwf	RL_reglas_controlador@Salida& (0+255),b
 10380   005E42  0E00               	movlw	high Control_velocidad_difusoInferenceEngine@Salida
 10381   005E44  6F95               	movwf	(RL_reglas_controlador@Salida+1)& (0+255),b
 10382   005E46  EC2E  F000         	call	_RL_reglas_controlador	;wreg free
 10383   005E4A                     
 10384                           ;lib_pic/Control_velocidad_difuso.c: 364:  *_d_Salida = Salida;
 10385   005E4A  C09E  FFD9         	movff	Control_velocidad_difusoInferenceEngine@_d_Salida,fsr2l
 10386   005E4E  C09F  FFDA         	movff	Control_velocidad_difusoInferenceEngine@_d_Salida+1,fsr2h
 10387   005E52  C055  FFDE         	movff	Control_velocidad_difusoInferenceEngine@Salida,postinc2
 10388   005E56  C056  FFDE         	movff	Control_velocidad_difusoInferenceEngine@Salida+1,postinc2
 10389   005E5A  C057  FFDE         	movff	Control_velocidad_difusoInferenceEngine@Salida+2,postinc2
 10390   005E5E  C058  FFDE         	movff	Control_velocidad_difusoInferenceEngine@Salida+3,postinc2
 10391   005E62  0012               	return		;funcret
 10392   005E64                     __end_of_Control_velocidad_difusoInferenceEngine:
 10393                           	callstack 0
 10394                           
 10395 ;; *************** function _RL_reglas_controlador *****************
 10396 ;; Defined at:
 10397 ;;		line 279 in file "lib_pic/Control_velocidad_difuso.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  error           4   44[BANK0 ] void 
 10400 ;;  CambioError     4   48[BANK0 ] void 
 10401 ;;  Salida          2   52[BANK0 ] PTR 
 10402 ;;		 -> Control_velocidad_difusoInferenceEngine@Salida(4), 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  _Salida_conc   56   40[BANK1 ] struct .[7]
 10405 ;;  _CambioError   28  174[BANK1 ] [7]
 10406 ;;  _error_eq      28  146[BANK1 ] [7]
 10407 ;;  _Salida_degr   28    0[BANK1 ] [7]
 10408 ;;  _Salida        26  104[BANK1 ] struct .
 10409 ;;  _rl             4  130[BANK1 ] struct .
 10410 ;;  _Salida_i       2  202[BANK1 ] int 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10420 ;;      Params:         0      10       0       0       0       0       0       0       0
 10421 ;;      Locals:         0       0     204       0       0       0       0       0       0
 10422 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10423 ;;      Totals:         2      10     204       0       0       0       0       0       0
 10424 ;;Total ram usage:      216 bytes
 10425 ;; Hardware stack levels used: 1
 10426 ;; Hardware stack levels required when called: 6
 10427 ;; This function calls:
 10428 ;;		_OP_operador_And
 10429 ;;		_OP_operador_Defuz
 10430 ;;		_OP_operador_Or
 10431 ;;		_TP_CambioError_ceNG_equal
 10432 ;;		_TP_CambioError_ceNM_equal
 10433 ;;		_TP_CambioError_ceNP_equal
 10434 ;;		_TP_CambioError_cePG_equal
 10435 ;;		_TP_CambioError_cePM_equal
 10436 ;;		_TP_CambioError_cePP_equal
 10437 ;;		_TP_CambioError_ceZ_equal
 10438 ;;		_TP_error_eNG_equal
 10439 ;;		_TP_error_eNM_equal
 10440 ;;		_TP_error_eNP_equal
 10441 ;;		_TP_error_ePG_equal
 10442 ;;		_TP_error_ePM_equal
 10443 ;;		_TP_error_ePP_equal
 10444 ;;		_TP_error_eZ_equal
 10445 ;; This function is called by:
 10446 ;;		_Control_velocidad_difusoInferenceEngine
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text52
 10451   00005C                     __ptext52:
 10452                           	callstack 0
 10453   00005C                     _RL_reglas_controlador:
 10454                           	callstack 23
 10455   00005C                     
 10456                           ;lib_pic/Control_velocidad_difuso.c: 280:  double _rl;;lib_pic/Control_velocidad_difuso.
      +                          c: 282:  double _Salida_degree[7];;lib_pic/Control_velocidad_difuso.c: 283:  Consequent 
      +                          _Salida_conc[7];;lib_pic/Control_velocidad_difuso.c: 284:  FuzzyNumber _Salida;;lib_pic/
      +                          Control_velocidad_difuso.c: 285:  _Salida.min = -1.0;
 10457   00005C  0E00               	movlw	0
 10458   00005E  0101               	movlb	1	; () banked
 10459   000060  6F68               	movwf	RL_reglas_controlador@_Salida& (0+255),b
 10460   000062  0E00               	movlw	0
 10461   000064  6F69               	movwf	(RL_reglas_controlador@_Salida+1)& (0+255),b
 10462   000066  0E80               	movlw	128
 10463   000068  6F6A               	movwf	(RL_reglas_controlador@_Salida+2)& (0+255),b
 10464   00006A  0EBF               	movlw	191
 10465   00006C  6F6B               	movwf	(RL_reglas_controlador@_Salida+3)& (0+255),b
 10466                           
 10467                           ;lib_pic/Control_velocidad_difuso.c: 286:  _Salida.max = 1.0;
 10468   00006E  0E00               	movlw	0
 10469   000070  6F6C               	movwf	(RL_reglas_controlador@_Salida+4)& (0+255),b
 10470   000072  0E00               	movlw	0
 10471   000074  6F6D               	movwf	(RL_reglas_controlador@_Salida+5)& (0+255),b
 10472   000076  0E80               	movlw	128
 10473   000078  6F6E               	movwf	(RL_reglas_controlador@_Salida+6)& (0+255),b
 10474   00007A  0E3F               	movlw	63
 10475   00007C  6F6F               	movwf	(RL_reglas_controlador@_Salida+7)& (0+255),b
 10476                           
 10477                           ;lib_pic/Control_velocidad_difuso.c: 287:  _Salida.step = 0.00784313725490196;
 10478   00007E  0E81               	movlw	129
 10479   000080  6F70               	movwf	(RL_reglas_controlador@_Salida+8)& (0+255),b
 10480   000082  0E80               	movlw	128
 10481   000084  6F71               	movwf	(RL_reglas_controlador@_Salida+9)& (0+255),b
 10482   000086  0E00               	movlw	0
 10483   000088  6F72               	movwf	(RL_reglas_controlador@_Salida+10)& (0+255),b
 10484   00008A  0E3C               	movlw	60
 10485   00008C  6F73               	movwf	(RL_reglas_controlador@_Salida+11)& (0+255),b
 10486                           
 10487                           ;lib_pic/Control_velocidad_difuso.c: 288:  _Salida.length = 7;
 10488   00008E  0E00               	movlw	0
 10489   000090  6F79               	movwf	(RL_reglas_controlador@_Salida+17)& (0+255),b
 10490   000092  0E07               	movlw	7
 10491   000094  6F78               	movwf	(RL_reglas_controlador@_Salida+16)& (0+255),b
 10492   000096                     
 10493                           ; BSR set to: 1
 10494                           ;lib_pic/Control_velocidad_difuso.c: 289:  _Salida.degree = _Salida_degree;
 10495   000096  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 10496   000098  6F7A               	movwf	(RL_reglas_controlador@_Salida+18)& (0+255),b
 10497   00009A  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 10498   00009C  6F7B               	movwf	(RL_reglas_controlador@_Salida+19)& (0+255),b
 10499   00009E                     
 10500                           ; BSR set to: 1
 10501                           ;lib_pic/Control_velocidad_difuso.c: 290:  _Salida.conc = _Salida_conc;
 10502   00009E  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 10503   0000A0  6F80               	movwf	(RL_reglas_controlador@_Salida+24)& (0+255),b
 10504   0000A2  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 10505   0000A4  6F81               	movwf	(RL_reglas_controlador@_Salida+25)& (0+255),b
 10506                           
 10507                           ;lib_pic/Control_velocidad_difuso.c: 291:  int _Salida_i = 0;
 10508   0000A6  0E00               	movlw	0
 10509   0000A8  6FCB               	movwf	(RL_reglas_controlador@_Salida_i+1)& (0+255),b
 10510   0000AA  0E00               	movlw	0
 10511   0000AC  6FCA               	movwf	RL_reglas_controlador@_Salida_i& (0+255),b
 10512   0000AE                     
 10513                           ; BSR set to: 1
 10514                           ;lib_pic/Control_velocidad_difuso.c: 293:  double _error_eq[7];;lib_pic/Control_velocida
      +                          d_difuso.c: 294:  _error_eq[0] = TP_error_eNG_equal(error);
 10515   0000AE  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_eNG_equal@x
 10516   0000B2  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_eNG_equal@x+1
 10517   0000B6  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_eNG_equal@x+2
 10518   0000BA  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_eNG_equal@x+3
 10519   0000BE  EC75  F02A         	call	_TP_error_eNG_equal	;wreg free
 10520   0000C2  C07C  F192         	movff	?_TP_error_eNG_equal,RL_reglas_controlador@_error_eq
 10521   0000C6  C07D  F193         	movff	?_TP_error_eNG_equal+1,RL_reglas_controlador@_error_eq+1
 10522   0000CA  C07E  F194         	movff	?_TP_error_eNG_equal+2,RL_reglas_controlador@_error_eq+2
 10523   0000CE  C07F  F195         	movff	?_TP_error_eNG_equal+3,RL_reglas_controlador@_error_eq+3
 10524   0000D2                     
 10525                           ;lib_pic/Control_velocidad_difuso.c: 295:  _error_eq[1] = TP_error_eNM_equal(error);
 10526   0000D2  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_eNM_equal@x
 10527   0000D6  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_eNM_equal@x+1
 10528   0000DA  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_eNM_equal@x+2
 10529   0000DE  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_eNM_equal@x+3
 10530   0000E2  EC31  F02A         	call	_TP_error_eNM_equal	;wreg free
 10531   0000E6  C07C  F196         	movff	?_TP_error_eNM_equal,RL_reglas_controlador@_error_eq+4
 10532   0000EA  C07D  F197         	movff	?_TP_error_eNM_equal+1,RL_reglas_controlador@_error_eq+5
 10533   0000EE  C07E  F198         	movff	?_TP_error_eNM_equal+2,RL_reglas_controlador@_error_eq+6
 10534   0000F2  C07F  F199         	movff	?_TP_error_eNM_equal+3,RL_reglas_controlador@_error_eq+7
 10535   0000F6                     
 10536                           ;lib_pic/Control_velocidad_difuso.c: 296:  _error_eq[2] = TP_error_eNP_equal(error);
 10537   0000F6  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_eNP_equal@x
 10538   0000FA  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_eNP_equal@x+1
 10539   0000FE  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_eNP_equal@x+2
 10540   000102  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_eNP_equal@x+3
 10541   000106  ECED  F029         	call	_TP_error_eNP_equal	;wreg free
 10542   00010A  C07C  F19A         	movff	?_TP_error_eNP_equal,RL_reglas_controlador@_error_eq+8
 10543   00010E  C07D  F19B         	movff	?_TP_error_eNP_equal+1,RL_reglas_controlador@_error_eq+9
 10544   000112  C07E  F19C         	movff	?_TP_error_eNP_equal+2,RL_reglas_controlador@_error_eq+10
 10545   000116  C07F  F19D         	movff	?_TP_error_eNP_equal+3,RL_reglas_controlador@_error_eq+11
 10546   00011A                     
 10547                           ;lib_pic/Control_velocidad_difuso.c: 297:  _error_eq[3] = TP_error_eZ_equal(error);
 10548   00011A  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_eZ_equal@x
 10549   00011E  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_eZ_equal@x+1
 10550   000122  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_eZ_equal@x+2
 10551   000126  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_eZ_equal@x+3
 10552   00012A  ECDD  F028         	call	_TP_error_eZ_equal	;wreg free
 10553   00012E  C07C  F19E         	movff	?_TP_error_eZ_equal,RL_reglas_controlador@_error_eq+12
 10554   000132  C07D  F19F         	movff	?_TP_error_eZ_equal+1,RL_reglas_controlador@_error_eq+13
 10555   000136  C07E  F1A0         	movff	?_TP_error_eZ_equal+2,RL_reglas_controlador@_error_eq+14
 10556   00013A  C07F  F1A1         	movff	?_TP_error_eZ_equal+3,RL_reglas_controlador@_error_eq+15
 10557   00013E                     
 10558                           ;lib_pic/Control_velocidad_difuso.c: 298:  _error_eq[4] = TP_error_ePP_equal(error);
 10559   00013E  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_ePP_equal@x
 10560   000142  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_ePP_equal@x+1
 10561   000146  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_ePP_equal@x+2
 10562   00014A  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_ePP_equal@x+3
 10563   00014E  EC21  F029         	call	_TP_error_ePP_equal	;wreg free
 10564   000152  C07C  F1A2         	movff	?_TP_error_ePP_equal,RL_reglas_controlador@_error_eq+16
 10565   000156  C07D  F1A3         	movff	?_TP_error_ePP_equal+1,RL_reglas_controlador@_error_eq+17
 10566   00015A  C07E  F1A4         	movff	?_TP_error_ePP_equal+2,RL_reglas_controlador@_error_eq+18
 10567   00015E  C07F  F1A5         	movff	?_TP_error_ePP_equal+3,RL_reglas_controlador@_error_eq+19
 10568   000162                     
 10569                           ;lib_pic/Control_velocidad_difuso.c: 299:  _error_eq[5] = TP_error_ePM_equal(error);
 10570   000162  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_ePM_equal@x
 10571   000166  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_ePM_equal@x+1
 10572   00016A  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_ePM_equal@x+2
 10573   00016E  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_ePM_equal@x+3
 10574   000172  EC65  F029         	call	_TP_error_ePM_equal	;wreg free
 10575   000176  C07C  F1A6         	movff	?_TP_error_ePM_equal,RL_reglas_controlador@_error_eq+20
 10576   00017A  C07D  F1A7         	movff	?_TP_error_ePM_equal+1,RL_reglas_controlador@_error_eq+21
 10577   00017E  C07E  F1A8         	movff	?_TP_error_ePM_equal+2,RL_reglas_controlador@_error_eq+22
 10578   000182  C07F  F1A9         	movff	?_TP_error_ePM_equal+3,RL_reglas_controlador@_error_eq+23
 10579   000186                     
 10580                           ;lib_pic/Control_velocidad_difuso.c: 300:  _error_eq[6] = TP_error_ePG_equal(error);
 10581   000186  C08C  F07C         	movff	RL_reglas_controlador@error,TP_error_ePG_equal@x
 10582   00018A  C08D  F07D         	movff	RL_reglas_controlador@error+1,TP_error_ePG_equal@x+1
 10583   00018E  C08E  F07E         	movff	RL_reglas_controlador@error+2,TP_error_ePG_equal@x+2
 10584   000192  C08F  F07F         	movff	RL_reglas_controlador@error+3,TP_error_ePG_equal@x+3
 10585   000196  ECA9  F029         	call	_TP_error_ePG_equal	;wreg free
 10586   00019A  C07C  F1AA         	movff	?_TP_error_ePG_equal,RL_reglas_controlador@_error_eq+24
 10587   00019E  C07D  F1AB         	movff	?_TP_error_ePG_equal+1,RL_reglas_controlador@_error_eq+25
 10588   0001A2  C07E  F1AC         	movff	?_TP_error_ePG_equal+2,RL_reglas_controlador@_error_eq+26
 10589   0001A6  C07F  F1AD         	movff	?_TP_error_ePG_equal+3,RL_reglas_controlador@_error_eq+27
 10590   0001AA                     
 10591                           ;lib_pic/Control_velocidad_difuso.c: 302:  double _CambioError_eq[7];;lib_pic/Control_ve
      +                          locidad_difuso.c: 303:  _CambioError_eq[0] = TP_CambioError_ceNG_equal(CambioError);
 10592   0001AA  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_ceNG_equal@x
 10593   0001AE  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_ceNG_equal@x+1
 10594   0001B2  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_ceNG_equal@x+2
 10595   0001B6  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_ceNG_equal@x+3
 10596   0001BA  EC51  F02C         	call	_TP_CambioError_ceNG_equal	;wreg free
 10597   0001BE  C07C  F1AE         	movff	?_TP_CambioError_ceNG_equal,RL_reglas_controlador@_CambioError_eq
 10598   0001C2  C07D  F1AF         	movff	?_TP_CambioError_ceNG_equal+1,RL_reglas_controlador@_CambioError_eq+1
 10599   0001C6  C07E  F1B0         	movff	?_TP_CambioError_ceNG_equal+2,RL_reglas_controlador@_CambioError_eq+2
 10600   0001CA  C07F  F1B1         	movff	?_TP_CambioError_ceNG_equal+3,RL_reglas_controlador@_CambioError_eq+3
 10601   0001CE                     
 10602                           ;lib_pic/Control_velocidad_difuso.c: 304:  _CambioError_eq[1] = TP_CambioError_ceNM_equa
      +                          l(CambioError);
 10603   0001CE  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_ceNM_equal@x
 10604   0001D2  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_ceNM_equal@x+1
 10605   0001D6  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_ceNM_equal@x+2
 10606   0001DA  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_ceNM_equal@x+3
 10607   0001DE  EC0D  F02C         	call	_TP_CambioError_ceNM_equal	;wreg free
 10608   0001E2  C07C  F1B2         	movff	?_TP_CambioError_ceNM_equal,RL_reglas_controlador@_CambioError_eq+4
 10609   0001E6  C07D  F1B3         	movff	?_TP_CambioError_ceNM_equal+1,RL_reglas_controlador@_CambioError_eq+5
 10610   0001EA  C07E  F1B4         	movff	?_TP_CambioError_ceNM_equal+2,RL_reglas_controlador@_CambioError_eq+6
 10611   0001EE  C07F  F1B5         	movff	?_TP_CambioError_ceNM_equal+3,RL_reglas_controlador@_CambioError_eq+7
 10612   0001F2                     
 10613                           ;lib_pic/Control_velocidad_difuso.c: 305:  _CambioError_eq[2] = TP_CambioError_ceNP_equa
      +                          l(CambioError);
 10614   0001F2  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_ceNP_equal@x
 10615   0001F6  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_ceNP_equal@x+1
 10616   0001FA  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_ceNP_equal@x+2
 10617   0001FE  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_ceNP_equal@x+3
 10618   000202  ECC9  F02B         	call	_TP_CambioError_ceNP_equal	;wreg free
 10619   000206  C07C  F1B6         	movff	?_TP_CambioError_ceNP_equal,RL_reglas_controlador@_CambioError_eq+8
 10620   00020A  C07D  F1B7         	movff	?_TP_CambioError_ceNP_equal+1,RL_reglas_controlador@_CambioError_eq+9
 10621   00020E  C07E  F1B8         	movff	?_TP_CambioError_ceNP_equal+2,RL_reglas_controlador@_CambioError_eq+10
 10622   000212  C07F  F1B9         	movff	?_TP_CambioError_ceNP_equal+3,RL_reglas_controlador@_CambioError_eq+11
 10623   000216                     
 10624                           ;lib_pic/Control_velocidad_difuso.c: 306:  _CambioError_eq[3] = TP_CambioError_ceZ_equal
      +                          (CambioError);
 10625   000216  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_ceZ_equal@x
 10626   00021A  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_ceZ_equal@x+1
 10627   00021E  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_ceZ_equal@x+2
 10628   000222  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_ceZ_equal@x+3
 10629   000226  ECB9  F02A         	call	_TP_CambioError_ceZ_equal	;wreg free
 10630   00022A  C07C  F1BA         	movff	?_TP_CambioError_ceZ_equal,RL_reglas_controlador@_CambioError_eq+12
 10631   00022E  C07D  F1BB         	movff	?_TP_CambioError_ceZ_equal+1,RL_reglas_controlador@_CambioError_eq+13
 10632   000232  C07E  F1BC         	movff	?_TP_CambioError_ceZ_equal+2,RL_reglas_controlador@_CambioError_eq+14
 10633   000236  C07F  F1BD         	movff	?_TP_CambioError_ceZ_equal+3,RL_reglas_controlador@_CambioError_eq+15
 10634   00023A                     
 10635                           ;lib_pic/Control_velocidad_difuso.c: 307:  _CambioError_eq[4] = TP_CambioError_cePP_equa
      +                          l(CambioError);
 10636   00023A  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_cePP_equal@x
 10637   00023E  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_cePP_equal@x+1
 10638   000242  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_cePP_equal@x+2
 10639   000246  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_cePP_equal@x+3
 10640   00024A  ECFD  F02A         	call	_TP_CambioError_cePP_equal	;wreg free
 10641   00024E  C07C  F1BE         	movff	?_TP_CambioError_cePP_equal,RL_reglas_controlador@_CambioError_eq+16
 10642   000252  C07D  F1BF         	movff	?_TP_CambioError_cePP_equal+1,RL_reglas_controlador@_CambioError_eq+17
 10643   000256  C07E  F1C0         	movff	?_TP_CambioError_cePP_equal+2,RL_reglas_controlador@_CambioError_eq+18
 10644   00025A  C07F  F1C1         	movff	?_TP_CambioError_cePP_equal+3,RL_reglas_controlador@_CambioError_eq+19
 10645   00025E                     
 10646                           ;lib_pic/Control_velocidad_difuso.c: 308:  _CambioError_eq[5] = TP_CambioError_cePM_equa
      +                          l(CambioError);
 10647   00025E  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_cePM_equal@x
 10648   000262  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_cePM_equal@x+1
 10649   000266  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_cePM_equal@x+2
 10650   00026A  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_cePM_equal@x+3
 10651   00026E  EC41  F02B         	call	_TP_CambioError_cePM_equal	;wreg free
 10652   000272  C07C  F1C2         	movff	?_TP_CambioError_cePM_equal,RL_reglas_controlador@_CambioError_eq+20
 10653   000276  C07D  F1C3         	movff	?_TP_CambioError_cePM_equal+1,RL_reglas_controlador@_CambioError_eq+21
 10654   00027A  C07E  F1C4         	movff	?_TP_CambioError_cePM_equal+2,RL_reglas_controlador@_CambioError_eq+22
 10655   00027E  C07F  F1C5         	movff	?_TP_CambioError_cePM_equal+3,RL_reglas_controlador@_CambioError_eq+23
 10656   000282                     
 10657                           ;lib_pic/Control_velocidad_difuso.c: 309:  _CambioError_eq[6] = TP_CambioError_cePG_equa
      +                          l(CambioError);
 10658   000282  C090  F07C         	movff	RL_reglas_controlador@CambioError,TP_CambioError_cePG_equal@x
 10659   000286  C091  F07D         	movff	RL_reglas_controlador@CambioError+1,TP_CambioError_cePG_equal@x+1
 10660   00028A  C092  F07E         	movff	RL_reglas_controlador@CambioError+2,TP_CambioError_cePG_equal@x+2
 10661   00028E  C093  F07F         	movff	RL_reglas_controlador@CambioError+3,TP_CambioError_cePG_equal@x+3
 10662   000292  EC85  F02B         	call	_TP_CambioError_cePG_equal	;wreg free
 10663   000296  C07C  F1C6         	movff	?_TP_CambioError_cePG_equal,RL_reglas_controlador@_CambioError_eq+24
 10664   00029A  C07D  F1C7         	movff	?_TP_CambioError_cePG_equal+1,RL_reglas_controlador@_CambioError_eq+25
 10665   00029E  C07E  F1C8         	movff	?_TP_CambioError_cePG_equal+2,RL_reglas_controlador@_CambioError_eq+26
 10666   0002A2  C07F  F1C9         	movff	?_TP_CambioError_cePG_equal+3,RL_reglas_controlador@_CambioError_eq+27
 10667   0002A6                     
 10668                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10669   0002A6  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 10670   0002AA  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 10671   0002AE  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 10672   0002B2  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 10673   0002B6  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 10674   0002BA  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 10675   0002BE  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 10676   0002C2  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 10677   0002C6  EC68  F02E         	call	_OP_operador_And	;wreg free
 10678   0002CA  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 10679   0002CE  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 10680   0002D2  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 10681   0002D6  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 10682   0002DA  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 10683   0002DE  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 10684   0002E2  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 10685   0002E6  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 10686   0002EA  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 10687   0002EE  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 10688   0002F2  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 10689   0002F6  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 10690   0002FA  EC68  F02E         	call	_OP_operador_And	;wreg free
 10691   0002FE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10692   000302  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10693   000306  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10694   00030A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10695   00030E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10696   000312  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 10697   000316  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 10698   00031A  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 10699   00031E  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 10700   000322                     
 10701                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10702   000322  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 10703   000326  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 10704   00032A  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 10705   00032E  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 10706   000332  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 10707   000336  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 10708   00033A  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 10709   00033E  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 10710   000342  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 10711   000346  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 10712   00034A  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 10713   00034E  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 10714   000352  EC68  F02E         	call	_OP_operador_And	;wreg free
 10715   000356  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10716   00035A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10717   00035E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10718   000362  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10719   000366  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10720   00036A  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 10721   00036E  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 10722   000372  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 10723   000376  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 10724   00037A                     
 10725                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10726   00037A  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 10727   00037E  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 10728   000382  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 10729   000386  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 10730   00038A  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 10731   00038E  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 10732   000392  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 10733   000396  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 10734   00039A  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 10735   00039E  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 10736   0003A2  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 10737   0003A6  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 10738   0003AA  EC68  F02E         	call	_OP_operador_And	;wreg free
 10739   0003AE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10740   0003B2  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10741   0003B6  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10742   0003BA  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10743   0003BE  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10744   0003C2  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 10745   0003C6  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 10746   0003CA  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 10747   0003CE  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 10748   0003D2                     
 10749                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10750   0003D2  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 10751   0003D6  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 10752   0003DA  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 10753   0003DE  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 10754   0003E2  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 10755   0003E6  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 10756   0003EA  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 10757   0003EE  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 10758   0003F2  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 10759   0003F6  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 10760   0003FA  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 10761   0003FE  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 10762   000402  EC68  F02E         	call	_OP_operador_And	;wreg free
 10763   000406  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10764   00040A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10765   00040E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10766   000412  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10767   000416  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10768   00041A  C032  F164         	movff	?_OP_operador_Or,_RL_reglas_controlador$2380
 10769   00041E  C033  F165         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2380+1
 10770   000422  C034  F166         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2380+2
 10771   000426  C035  F167         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2380+3
 10772   00042A                     
 10773                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10774   00042A  C164  F032         	movff	_RL_reglas_controlador$2380,OP_operador_Or@a
 10775   00042E  C165  F033         	movff	_RL_reglas_controlador$2380+1,OP_operador_Or@a+1
 10776   000432  C166  F034         	movff	_RL_reglas_controlador$2380+2,OP_operador_Or@a+2
 10777   000436  C167  F035         	movff	_RL_reglas_controlador$2380+3,OP_operador_Or@a+3
 10778   00043A  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 10779   00043E  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 10780   000442  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 10781   000446  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 10782   00044A  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 10783   00044E  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 10784   000452  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 10785   000456  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 10786   00045A  EC68  F02E         	call	_OP_operador_And	;wreg free
 10787   00045E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10788   000462  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10789   000466  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10790   00046A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10791   00046E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10792   000472  C032  F160         	movff	?_OP_operador_Or,_RL_reglas_controlador$2381
 10793   000476  C033  F161         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2381+1
 10794   00047A  C034  F162         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2381+2
 10795   00047E  C035  F163         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2381+3
 10796   000482                     
 10797                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10798   000482  C160  F032         	movff	_RL_reglas_controlador$2381,OP_operador_Or@a
 10799   000486  C161  F033         	movff	_RL_reglas_controlador$2381+1,OP_operador_Or@a+1
 10800   00048A  C162  F034         	movff	_RL_reglas_controlador$2381+2,OP_operador_Or@a+2
 10801   00048E  C163  F035         	movff	_RL_reglas_controlador$2381+3,OP_operador_Or@a+3
 10802   000492  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 10803   000496  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 10804   00049A  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 10805   00049E  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 10806   0004A2  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 10807   0004A6  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 10808   0004AA  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 10809   0004AE  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 10810   0004B2  EC68  F02E         	call	_OP_operador_And	;wreg free
 10811   0004B6  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10812   0004BA  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10813   0004BE  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10814   0004C2  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10815   0004C6  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10816   0004CA  C032  F11C         	movff	?_OP_operador_Or,_RL_reglas_controlador$2382
 10817   0004CE  C033  F11D         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2382+1
 10818   0004D2  C034  F11E         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2382+2
 10819   0004D6  C035  F11F         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2382+3
 10820   0004DA                     
 10821                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10822   0004DA  C11C  F032         	movff	_RL_reglas_controlador$2382,OP_operador_Or@a
 10823   0004DE  C11D  F033         	movff	_RL_reglas_controlador$2382+1,OP_operador_Or@a+1
 10824   0004E2  C11E  F034         	movff	_RL_reglas_controlador$2382+2,OP_operador_Or@a+2
 10825   0004E6  C11F  F035         	movff	_RL_reglas_controlador$2382+3,OP_operador_Or@a+3
 10826   0004EA  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 10827   0004EE  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 10828   0004F2  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 10829   0004F6  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 10830   0004FA  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 10831   0004FE  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 10832   000502  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 10833   000506  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 10834   00050A  EC68  F02E         	call	_OP_operador_And	;wreg free
 10835   00050E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10836   000512  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10837   000516  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10838   00051A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10839   00051E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10840   000522  C032  F120         	movff	?_OP_operador_Or,_RL_reglas_controlador$2383
 10841   000526  C033  F121         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2383+1
 10842   00052A  C034  F122         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2383+2
 10843   00052E  C035  F123         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2383+3
 10844   000532                     
 10845                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10846   000532  C120  F032         	movff	_RL_reglas_controlador$2383,OP_operador_Or@a
 10847   000536  C121  F033         	movff	_RL_reglas_controlador$2383+1,OP_operador_Or@a+1
 10848   00053A  C122  F034         	movff	_RL_reglas_controlador$2383+2,OP_operador_Or@a+2
 10849   00053E  C123  F035         	movff	_RL_reglas_controlador$2383+3,OP_operador_Or@a+3
 10850   000542  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 10851   000546  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 10852   00054A  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 10853   00054E  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 10854   000552  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 10855   000556  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 10856   00055A  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 10857   00055E  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 10858   000562  EC68  F02E         	call	_OP_operador_And	;wreg free
 10859   000566  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10860   00056A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10861   00056E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10862   000572  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10863   000576  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10864   00057A  C032  F124         	movff	?_OP_operador_Or,_RL_reglas_controlador$2384
 10865   00057E  C033  F125         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2384+1
 10866   000582  C034  F126         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2384+2
 10867   000586  C035  F127         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2384+3
 10868   00058A                     
 10869                           ;lib_pic/Control_velocidad_difuso.c: 311:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[0],_CambioError_eq[1]),OP_operador_And(_error_eq[0],_C
      +                          ambioError_eq[0])),OP_operador_And(_error_eq[0],_CambioError_eq[2])),OP_operador_And(_er
      +                          ror_eq[0],_CambioError_eq[3])),OP_operador_And(_error_eq[1],_CambioError_eq[0])),OP_oper
      +                          ador_And(_error_eq[1],_CambioError_eq[1])),OP_operador_And(_error_eq[1],_CambioError_eq[
      +                          2])),OP_operador_And(_error_eq[2],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_Cam
      +                          bioError_eq[0])),OP_operador_And(_error_eq[2],_CambioError_eq[1]));
 10870   00058A  C124  F032         	movff	_RL_reglas_controlador$2384,OP_operador_Or@a
 10871   00058E  C125  F033         	movff	_RL_reglas_controlador$2384+1,OP_operador_Or@a+1
 10872   000592  C126  F034         	movff	_RL_reglas_controlador$2384+2,OP_operador_Or@a+2
 10873   000596  C127  F035         	movff	_RL_reglas_controlador$2384+3,OP_operador_Or@a+3
 10874   00059A  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 10875   00059E  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 10876   0005A2  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 10877   0005A6  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 10878   0005AA  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 10879   0005AE  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 10880   0005B2  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 10881   0005B6  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 10882   0005BA  EC68  F02E         	call	_OP_operador_And	;wreg free
 10883   0005BE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10884   0005C2  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10885   0005C6  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10886   0005CA  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10887   0005CE  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10888   0005D2  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 10889   0005D6  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 10890   0005DA  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 10891   0005DE  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 10892   0005E2                     
 10893                           ;lib_pic/Control_velocidad_difuso.c: 312:  _Salida_degree[_Salida_i] = _rl;
 10894   0005E2  C182  F100         	movff	RL_reglas_controlador@_rl,RL_reglas_controlador@_Salida_degree
 10895   0005E6  C183  F101         	movff	RL_reglas_controlador@_rl+1,RL_reglas_controlador@_Salida_degree+1
 10896   0005EA  C184  F102         	movff	RL_reglas_controlador@_rl+2,RL_reglas_controlador@_Salida_degree+2
 10897   0005EE  C185  F103         	movff	RL_reglas_controlador@_rl+3,RL_reglas_controlador@_Salida_degree+3
 10898   0005F2                     
 10899                           ;lib_pic/Control_velocidad_difuso.c: 313:  _Salida_conc[_Salida_i].equal = TP_salida_sNG
      +                          _equal;
 10900   0005F2  0E00               	movlw	0
 10901   0005F4  0101               	movlb	1	; () banked
 10902   0005F6  6F28               	movwf	RL_reglas_controlador@_Salida_conc& (0+255),b
 10903   0005F8  0E00               	movlw	0
 10904   0005FA  6F29               	movwf	(RL_reglas_controlador@_Salida_conc+1)& (0+255),b
 10905   0005FC                     
 10906                           ; BSR set to: 1
 10907                           ;lib_pic/Control_velocidad_difuso.c: 314:  _Salida_conc[_Salida_i].center = TP_salida_sN
      +                          G_center;
 10908   0005FC  0ED8               	movlw	low _TP_salida_sNG_center
 10909   0005FE  6F2A               	movwf	(RL_reglas_controlador@_Salida_conc+2)& (0+255),b
 10910   000600  0E61               	movlw	high _TP_salida_sNG_center
 10911   000602  6F2B               	movwf	(RL_reglas_controlador@_Salida_conc+3)& (0+255),b
 10912   000604                     
 10913                           ; BSR set to: 1
 10914                           ;lib_pic/Control_velocidad_difuso.c: 315:  _Salida_i++;
 10915   000604  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 10916   000606  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 10917   000608                     
 10918                           ; BSR set to: 1
 10919                           ;lib_pic/Control_velocidad_difuso.c: 317:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[3]),OP_operador_And(_e
      +                          rror_eq[0],_CambioError_eq[4])),OP_operador_And(_error_eq[2],_CambioError_eq[2])),OP_ope
      +                          rador_And(_error_eq[4],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_CambioError_eq
      +                          [1]));
 10920   000608  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 10921   00060C  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 10922   000610  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 10923   000614  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 10924   000618  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 10925   00061C  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 10926   000620  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 10927   000624  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 10928   000628  EC68  F02E         	call	_OP_operador_And	;wreg free
 10929   00062C  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 10930   000630  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 10931   000634  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 10932   000638  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 10933   00063C  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 10934   000640  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 10935   000644  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 10936   000648  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 10937   00064C  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 10938   000650  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 10939   000654  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 10940   000658  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 10941   00065C  EC68  F02E         	call	_OP_operador_And	;wreg free
 10942   000660  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10943   000664  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10944   000668  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10945   00066C  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10946   000670  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10947   000674  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 10948   000678  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 10949   00067C  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 10950   000680  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 10951   000684                     
 10952                           ;lib_pic/Control_velocidad_difuso.c: 317:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[3]),OP_operador_And(_e
      +                          rror_eq[0],_CambioError_eq[4])),OP_operador_And(_error_eq[2],_CambioError_eq[2])),OP_ope
      +                          rador_And(_error_eq[4],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_CambioError_eq
      +                          [1]));
 10953   000684  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 10954   000688  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 10955   00068C  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 10956   000690  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 10957   000694  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 10958   000698  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 10959   00069C  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 10960   0006A0  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 10961   0006A4  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 10962   0006A8  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 10963   0006AC  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 10964   0006B0  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 10965   0006B4  EC68  F02E         	call	_OP_operador_And	;wreg free
 10966   0006B8  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10967   0006BC  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10968   0006C0  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10969   0006C4  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10970   0006C8  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10971   0006CC  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 10972   0006D0  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 10973   0006D4  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 10974   0006D8  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 10975   0006DC                     
 10976                           ;lib_pic/Control_velocidad_difuso.c: 317:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[3]),OP_operador_And(_e
      +                          rror_eq[0],_CambioError_eq[4])),OP_operador_And(_error_eq[2],_CambioError_eq[2])),OP_ope
      +                          rador_And(_error_eq[4],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_CambioError_eq
      +                          [1]));
 10977   0006DC  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 10978   0006E0  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 10979   0006E4  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 10980   0006E8  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 10981   0006EC  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 10982   0006F0  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 10983   0006F4  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 10984   0006F8  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 10985   0006FC  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 10986   000700  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 10987   000704  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 10988   000708  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 10989   00070C  EC68  F02E         	call	_OP_operador_And	;wreg free
 10990   000710  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 10991   000714  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 10992   000718  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 10993   00071C  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 10994   000720  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 10995   000724  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 10996   000728  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 10997   00072C  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 10998   000730  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 10999   000734                     
 11000                           ;lib_pic/Control_velocidad_difuso.c: 317:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[3]),OP_operador_And(_e
      +                          rror_eq[0],_CambioError_eq[4])),OP_operador_And(_error_eq[2],_CambioError_eq[2])),OP_ope
      +                          rador_And(_error_eq[4],_CambioError_eq[0])),OP_operador_And(_error_eq[3],_CambioError_eq
      +                          [1]));
 11001   000734  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 11002   000738  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 11003   00073C  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 11004   000740  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 11005   000744  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11006   000748  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11007   00074C  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11008   000750  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11009   000754  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 11010   000758  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 11011   00075C  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 11012   000760  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 11013   000764  EC68  F02E         	call	_OP_operador_And	;wreg free
 11014   000768  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11015   00076C  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11016   000770  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11017   000774  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11018   000778  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11019   00077C  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 11020   000780  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 11021   000784  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 11022   000788  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 11023   00078C                     
 11024                           ;lib_pic/Control_velocidad_difuso.c: 318:  _Salida_degree[_Salida_i] = _rl;
 11025   00078C  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 11026   00078E  6E53               	movwf	??_RL_reglas_controlador^0,c
 11027   000790  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 11028   000792  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 11029   000794  90D8               	bcf	status,0,c
 11030   000796  0101               	movlb	1	; () banked
 11031   000798  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 11032   00079A  6ED9               	movwf	fsr2l,c
 11033   00079C  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 11034   00079E  6EDA               	movwf	fsr2h,c
 11035   0007A0  90D8               	bcf	status,0,c
 11036   0007A2  36D9               	rlcf	fsr2l,f,c
 11037   0007A4  36DA               	rlcf	fsr2h,f,c
 11038   0007A6  5053               	movf	??_RL_reglas_controlador^0,w,c
 11039   0007A8  26D9               	addwf	fsr2l,f,c
 11040   0007AA  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 11041   0007AC  22DA               	addwfc	fsr2h,f,c
 11042   0007AE  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 11043   0007B2  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 11044   0007B6  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 11045   0007BA  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 11046   0007BE                     
 11047                           ; BSR set to: 1
 11048                           ;lib_pic/Control_velocidad_difuso.c: 319:  _Salida_conc[_Salida_i].equal = TP_salida_sNM
      +                          _equal;
 11049   0007BE  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11050   0007C2  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11051   0007C6  90D8               	bcf	status,0,c
 11052   0007C8  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11053   0007CA  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11054   0007CC  90D8               	bcf	status,0,c
 11055   0007CE  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11056   0007D0  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11057   0007D2  90D8               	bcf	status,0,c
 11058   0007D4  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11059   0007D6  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11060   0007D8  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11061   0007DA  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11062   0007DC  6ED9               	movwf	fsr2l,c
 11063   0007DE  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11064   0007E0  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11065   0007E2  6EDA               	movwf	fsr2h,c
 11066   0007E4  0E00               	movlw	0
 11067   0007E6  6EDE               	movwf	postinc2,c
 11068   0007E8  0E00               	movlw	0
 11069   0007EA  6EDD               	movwf	postdec2,c
 11070   0007EC                     
 11071                           ; BSR set to: 1
 11072                           ;lib_pic/Control_velocidad_difuso.c: 320:  _Salida_conc[_Salida_i].center = TP_salida_sN
      +                          M_center;
 11073   0007EC  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11074   0007F0  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11075   0007F4  90D8               	bcf	status,0,c
 11076   0007F6  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11077   0007F8  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11078   0007FA  90D8               	bcf	status,0,c
 11079   0007FC  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11080   0007FE  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11081   000800  90D8               	bcf	status,0,c
 11082   000802  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11083   000804  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11084   000806  0E02               	movlw	2
 11085   000808  2653               	addwf	??_RL_reglas_controlador^0,f,c
 11086   00080A  0E00               	movlw	0
 11087   00080C  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 11088   00080E  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11089   000810  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11090   000812  6ED9               	movwf	fsr2l,c
 11091   000814  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11092   000816  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11093   000818  6EDA               	movwf	fsr2h,c
 11094   00081A  0EC6               	movlw	low _TP_salida_sNM_center
 11095   00081C  6EDE               	movwf	postinc2,c
 11096   00081E  0E61               	movlw	high _TP_salida_sNM_center
 11097   000820  6EDD               	movwf	postdec2,c
 11098   000822                     
 11099                           ; BSR set to: 1
 11100                           ;lib_pic/Control_velocidad_difuso.c: 321:  _Salida_i++;
 11101   000822  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 11102   000824  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 11103   000826                     
 11104                           ; BSR set to: 1
 11105                           ;lib_pic/Control_velocidad_difuso.c: 323:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[4]),OP_
      +                          operador_And(_error_eq[0],_CambioError_eq[5])),OP_operador_And(_error_eq[2],_CambioError
      +                          _eq[3])),OP_operador_And(_error_eq[3],_CambioError_eq[2])),OP_operador_And(_error_eq[5],
      +                          _CambioError_eq[0])),OP_operador_And(_error_eq[4],_CambioError_eq[1]));
 11106   000826  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 11107   00082A  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 11108   00082E  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 11109   000832  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 11110   000836  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 11111   00083A  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 11112   00083E  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 11113   000842  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 11114   000846  EC68  F02E         	call	_OP_operador_And	;wreg free
 11115   00084A  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 11116   00084E  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 11117   000852  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 11118   000856  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 11119   00085A  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 11120   00085E  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 11121   000862  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 11122   000866  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 11123   00086A  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 11124   00086E  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 11125   000872  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 11126   000876  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 11127   00087A  EC68  F02E         	call	_OP_operador_And	;wreg free
 11128   00087E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11129   000882  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11130   000886  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11131   00088A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11132   00088E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11133   000892  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 11134   000896  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 11135   00089A  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 11136   00089E  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 11137   0008A2                     
 11138                           ;lib_pic/Control_velocidad_difuso.c: 323:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[4]),OP_
      +                          operador_And(_error_eq[0],_CambioError_eq[5])),OP_operador_And(_error_eq[2],_CambioError
      +                          _eq[3])),OP_operador_And(_error_eq[3],_CambioError_eq[2])),OP_operador_And(_error_eq[5],
      +                          _CambioError_eq[0])),OP_operador_And(_error_eq[4],_CambioError_eq[1]));
 11139   0008A2  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 11140   0008A6  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 11141   0008AA  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 11142   0008AE  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 11143   0008B2  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 11144   0008B6  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 11145   0008BA  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 11146   0008BE  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 11147   0008C2  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 11148   0008C6  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 11149   0008CA  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 11150   0008CE  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 11151   0008D2  EC68  F02E         	call	_OP_operador_And	;wreg free
 11152   0008D6  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11153   0008DA  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11154   0008DE  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11155   0008E2  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11156   0008E6  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11157   0008EA  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 11158   0008EE  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 11159   0008F2  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 11160   0008F6  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 11161   0008FA                     
 11162                           ;lib_pic/Control_velocidad_difuso.c: 323:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[4]),OP_
      +                          operador_And(_error_eq[0],_CambioError_eq[5])),OP_operador_And(_error_eq[2],_CambioError
      +                          _eq[3])),OP_operador_And(_error_eq[3],_CambioError_eq[2])),OP_operador_And(_error_eq[5],
      +                          _CambioError_eq[0])),OP_operador_And(_error_eq[4],_CambioError_eq[1]));
 11163   0008FA  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 11164   0008FE  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 11165   000902  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 11166   000906  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 11167   00090A  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11168   00090E  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11169   000912  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11170   000916  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11171   00091A  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 11172   00091E  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 11173   000922  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 11174   000926  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 11175   00092A  EC68  F02E         	call	_OP_operador_And	;wreg free
 11176   00092E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11177   000932  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11178   000936  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11179   00093A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11180   00093E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11181   000942  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 11182   000946  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 11183   00094A  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 11184   00094E  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 11185   000952                     
 11186                           ;lib_pic/Control_velocidad_difuso.c: 323:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[4]),OP_
      +                          operador_And(_error_eq[0],_CambioError_eq[5])),OP_operador_And(_error_eq[2],_CambioError
      +                          _eq[3])),OP_operador_And(_error_eq[3],_CambioError_eq[2])),OP_operador_And(_error_eq[5],
      +                          _CambioError_eq[0])),OP_operador_And(_error_eq[4],_CambioError_eq[1]));
 11187   000952  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 11188   000956  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 11189   00095A  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 11190   00095E  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 11191   000962  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 11192   000966  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 11193   00096A  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 11194   00096E  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 11195   000972  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 11196   000976  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 11197   00097A  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 11198   00097E  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 11199   000982  EC68  F02E         	call	_OP_operador_And	;wreg free
 11200   000986  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11201   00098A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11202   00098E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11203   000992  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11204   000996  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11205   00099A  C032  F164         	movff	?_OP_operador_Or,_RL_reglas_controlador$2380
 11206   00099E  C033  F165         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2380+1
 11207   0009A2  C034  F166         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2380+2
 11208   0009A6  C035  F167         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2380+3
 11209   0009AA                     
 11210                           ;lib_pic/Control_velocidad_difuso.c: 323:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioError_eq[4]),OP_
      +                          operador_And(_error_eq[0],_CambioError_eq[5])),OP_operador_And(_error_eq[2],_CambioError
      +                          _eq[3])),OP_operador_And(_error_eq[3],_CambioError_eq[2])),OP_operador_And(_error_eq[5],
      +                          _CambioError_eq[0])),OP_operador_And(_error_eq[4],_CambioError_eq[1]));
 11211   0009AA  C164  F032         	movff	_RL_reglas_controlador$2380,OP_operador_Or@a
 11212   0009AE  C165  F033         	movff	_RL_reglas_controlador$2380+1,OP_operador_Or@a+1
 11213   0009B2  C166  F034         	movff	_RL_reglas_controlador$2380+2,OP_operador_Or@a+2
 11214   0009B6  C167  F035         	movff	_RL_reglas_controlador$2380+3,OP_operador_Or@a+3
 11215   0009BA  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11216   0009BE  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11217   0009C2  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11218   0009C6  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11219   0009CA  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 11220   0009CE  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 11221   0009D2  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 11222   0009D6  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 11223   0009DA  EC68  F02E         	call	_OP_operador_And	;wreg free
 11224   0009DE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11225   0009E2  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11226   0009E6  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11227   0009EA  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11228   0009EE  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11229   0009F2  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 11230   0009F6  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 11231   0009FA  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 11232   0009FE  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 11233   000A02                     
 11234                           ;lib_pic/Control_velocidad_difuso.c: 324:  _Salida_degree[_Salida_i] = _rl;
 11235   000A02  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 11236   000A04  6E53               	movwf	??_RL_reglas_controlador^0,c
 11237   000A06  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 11238   000A08  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 11239   000A0A  90D8               	bcf	status,0,c
 11240   000A0C  0101               	movlb	1	; () banked
 11241   000A0E  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 11242   000A10  6ED9               	movwf	fsr2l,c
 11243   000A12  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 11244   000A14  6EDA               	movwf	fsr2h,c
 11245   000A16  90D8               	bcf	status,0,c
 11246   000A18  36D9               	rlcf	fsr2l,f,c
 11247   000A1A  36DA               	rlcf	fsr2h,f,c
 11248   000A1C  5053               	movf	??_RL_reglas_controlador^0,w,c
 11249   000A1E  26D9               	addwf	fsr2l,f,c
 11250   000A20  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 11251   000A22  22DA               	addwfc	fsr2h,f,c
 11252   000A24  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 11253   000A28  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 11254   000A2C  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 11255   000A30  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 11256   000A34                     
 11257                           ; BSR set to: 1
 11258                           ;lib_pic/Control_velocidad_difuso.c: 325:  _Salida_conc[_Salida_i].equal = TP_salida_sNP
      +                          _equal;
 11259   000A34  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11260   000A38  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11261   000A3C  90D8               	bcf	status,0,c
 11262   000A3E  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11263   000A40  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11264   000A42  90D8               	bcf	status,0,c
 11265   000A44  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11266   000A46  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11267   000A48  90D8               	bcf	status,0,c
 11268   000A4A  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11269   000A4C  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11270   000A4E  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11271   000A50  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11272   000A52  6ED9               	movwf	fsr2l,c
 11273   000A54  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11274   000A56  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11275   000A58  6EDA               	movwf	fsr2h,c
 11276   000A5A  0E00               	movlw	0
 11277   000A5C  6EDE               	movwf	postinc2,c
 11278   000A5E  0E00               	movlw	0
 11279   000A60  6EDD               	movwf	postdec2,c
 11280   000A62                     
 11281                           ; BSR set to: 1
 11282                           ;lib_pic/Control_velocidad_difuso.c: 326:  _Salida_conc[_Salida_i].center = TP_salida_sN
      +                          P_center;
 11283   000A62  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11284   000A66  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11285   000A6A  90D8               	bcf	status,0,c
 11286   000A6C  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11287   000A6E  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11288   000A70  90D8               	bcf	status,0,c
 11289   000A72  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11290   000A74  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11291   000A76  90D8               	bcf	status,0,c
 11292   000A78  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11293   000A7A  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11294   000A7C  0E02               	movlw	2
 11295   000A7E  2653               	addwf	??_RL_reglas_controlador^0,f,c
 11296   000A80  0E00               	movlw	0
 11297   000A82  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 11298   000A84  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11299   000A86  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11300   000A88  6ED9               	movwf	fsr2l,c
 11301   000A8A  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11302   000A8C  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11303   000A8E  6EDA               	movwf	fsr2h,c
 11304   000A90  0EB4               	movlw	low _TP_salida_sNP_center
 11305   000A92  6EDE               	movwf	postinc2,c
 11306   000A94  0E61               	movlw	high _TP_salida_sNP_center
 11307   000A96  6EDD               	movwf	postdec2,c
 11308   000A98                     
 11309                           ; BSR set to: 1
 11310                           ;lib_pic/Control_velocidad_difuso.c: 327:  _Salida_i++;
 11311   000A98  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 11312   000A9A  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 11313   000A9C                     
 11314                           ; BSR set to: 1
 11315                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11316   000A9C  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 11317   000AA0  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 11318   000AA4  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 11319   000AA8  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 11320   000AAC  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 11321   000AB0  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 11322   000AB4  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 11323   000AB8  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 11324   000ABC  EC68  F02E         	call	_OP_operador_And	;wreg free
 11325   000AC0  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 11326   000AC4  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 11327   000AC8  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 11328   000ACC  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 11329   000AD0  C192  F02A         	movff	RL_reglas_controlador@_error_eq,OP_operador_And@a
 11330   000AD4  C193  F02B         	movff	RL_reglas_controlador@_error_eq+1,OP_operador_And@a+1
 11331   000AD8  C194  F02C         	movff	RL_reglas_controlador@_error_eq+2,OP_operador_And@a+2
 11332   000ADC  C195  F02D         	movff	RL_reglas_controlador@_error_eq+3,OP_operador_And@a+3
 11333   000AE0  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 11334   000AE4  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 11335   000AE8  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 11336   000AEC  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 11337   000AF0  EC68  F02E         	call	_OP_operador_And	;wreg free
 11338   000AF4  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11339   000AF8  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11340   000AFC  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11341   000B00  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11342   000B04  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11343   000B08  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 11344   000B0C  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 11345   000B10  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 11346   000B14  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 11347   000B18                     
 11348                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11349   000B18  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 11350   000B1C  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 11351   000B20  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 11352   000B24  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 11353   000B28  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 11354   000B2C  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 11355   000B30  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 11356   000B34  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 11357   000B38  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 11358   000B3C  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 11359   000B40  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 11360   000B44  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 11361   000B48  EC68  F02E         	call	_OP_operador_And	;wreg free
 11362   000B4C  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11363   000B50  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11364   000B54  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11365   000B58  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11366   000B5C  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11367   000B60  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 11368   000B64  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 11369   000B68  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 11370   000B6C  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 11371   000B70                     
 11372                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11373   000B70  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 11374   000B74  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 11375   000B78  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 11376   000B7C  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 11377   000B80  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11378   000B84  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11379   000B88  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11380   000B8C  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11381   000B90  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 11382   000B94  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 11383   000B98  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 11384   000B9C  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 11385   000BA0  EC68  F02E         	call	_OP_operador_And	;wreg free
 11386   000BA4  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11387   000BA8  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11388   000BAC  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11389   000BB0  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11390   000BB4  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11391   000BB8  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 11392   000BBC  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 11393   000BC0  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 11394   000BC4  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 11395   000BC8                     
 11396                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11397   000BC8  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 11398   000BCC  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 11399   000BD0  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 11400   000BD4  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 11401   000BD8  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11402   000BDC  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11403   000BE0  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11404   000BE4  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11405   000BE8  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 11406   000BEC  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 11407   000BF0  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 11408   000BF4  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 11409   000BF8  EC68  F02E         	call	_OP_operador_And	;wreg free
 11410   000BFC  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11411   000C00  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11412   000C04  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11413   000C08  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11414   000C0C  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11415   000C10  C032  F164         	movff	?_OP_operador_Or,_RL_reglas_controlador$2380
 11416   000C14  C033  F165         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2380+1
 11417   000C18  C034  F166         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2380+2
 11418   000C1C  C035  F167         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2380+3
 11419   000C20                     
 11420                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11421   000C20  C164  F032         	movff	_RL_reglas_controlador$2380,OP_operador_Or@a
 11422   000C24  C165  F033         	movff	_RL_reglas_controlador$2380+1,OP_operador_Or@a+1
 11423   000C28  C166  F034         	movff	_RL_reglas_controlador$2380+2,OP_operador_Or@a+2
 11424   000C2C  C167  F035         	movff	_RL_reglas_controlador$2380+3,OP_operador_Or@a+3
 11425   000C30  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 11426   000C34  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 11427   000C38  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 11428   000C3C  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 11429   000C40  C1AE  F02E         	movff	RL_reglas_controlador@_CambioError_eq,OP_operador_And@b
 11430   000C44  C1AF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+1,OP_operador_And@b+1
 11431   000C48  C1B0  F030         	movff	RL_reglas_controlador@_CambioError_eq+2,OP_operador_And@b+2
 11432   000C4C  C1B1  F031         	movff	RL_reglas_controlador@_CambioError_eq+3,OP_operador_And@b+3
 11433   000C50  EC68  F02E         	call	_OP_operador_And	;wreg free
 11434   000C54  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11435   000C58  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11436   000C5C  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11437   000C60  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11438   000C64  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11439   000C68  C032  F160         	movff	?_OP_operador_Or,_RL_reglas_controlador$2381
 11440   000C6C  C033  F161         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2381+1
 11441   000C70  C034  F162         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2381+2
 11442   000C74  C035  F163         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2381+3
 11443   000C78                     
 11444                           ;lib_pic/Control_velocidad_difuso.c: 329:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[1],_CambioE
      +                          rror_eq[5]),OP_operador_And(_error_eq[0],_CambioError_eq[6])),OP_operador_And(_error_eq[
      +                          2],_CambioError_eq[4])),OP_operador_And(_error_eq[3],_CambioError_eq[3])),OP_operador_An
      +                          d(_error_eq[4],_CambioError_eq[2])),OP_operador_And(_error_eq[6],_CambioError_eq[0])),OP
      +                          _operador_And(_error_eq[5],_CambioError_eq[1]));
 11445   000C78  C160  F032         	movff	_RL_reglas_controlador$2381,OP_operador_Or@a
 11446   000C7C  C161  F033         	movff	_RL_reglas_controlador$2381+1,OP_operador_Or@a+1
 11447   000C80  C162  F034         	movff	_RL_reglas_controlador$2381+2,OP_operador_Or@a+2
 11448   000C84  C163  F035         	movff	_RL_reglas_controlador$2381+3,OP_operador_Or@a+3
 11449   000C88  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 11450   000C8C  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 11451   000C90  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 11452   000C94  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 11453   000C98  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 11454   000C9C  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 11455   000CA0  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 11456   000CA4  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 11457   000CA8  EC68  F02E         	call	_OP_operador_And	;wreg free
 11458   000CAC  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11459   000CB0  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11460   000CB4  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11461   000CB8  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11462   000CBC  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11463   000CC0  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 11464   000CC4  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 11465   000CC8  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 11466   000CCC  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 11467   000CD0                     
 11468                           ;lib_pic/Control_velocidad_difuso.c: 330:  _Salida_degree[_Salida_i] = _rl;
 11469   000CD0  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 11470   000CD2  6E53               	movwf	??_RL_reglas_controlador^0,c
 11471   000CD4  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 11472   000CD6  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 11473   000CD8  90D8               	bcf	status,0,c
 11474   000CDA  0101               	movlb	1	; () banked
 11475   000CDC  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 11476   000CDE  6ED9               	movwf	fsr2l,c
 11477   000CE0  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 11478   000CE2  6EDA               	movwf	fsr2h,c
 11479   000CE4  90D8               	bcf	status,0,c
 11480   000CE6  36D9               	rlcf	fsr2l,f,c
 11481   000CE8  36DA               	rlcf	fsr2h,f,c
 11482   000CEA  5053               	movf	??_RL_reglas_controlador^0,w,c
 11483   000CEC  26D9               	addwf	fsr2l,f,c
 11484   000CEE  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 11485   000CF0  22DA               	addwfc	fsr2h,f,c
 11486   000CF2  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 11487   000CF6  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 11488   000CFA  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 11489   000CFE  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 11490   000D02                     
 11491                           ; BSR set to: 1
 11492                           ;lib_pic/Control_velocidad_difuso.c: 331:  _Salida_conc[_Salida_i].equal = TP_salida_sZ_
      +                          equal;
 11493   000D02  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11494   000D06  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11495   000D0A  90D8               	bcf	status,0,c
 11496   000D0C  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11497   000D0E  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11498   000D10  90D8               	bcf	status,0,c
 11499   000D12  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11500   000D14  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11501   000D16  90D8               	bcf	status,0,c
 11502   000D18  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11503   000D1A  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11504   000D1C  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11505   000D1E  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11506   000D20  6ED9               	movwf	fsr2l,c
 11507   000D22  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11508   000D24  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11509   000D26  6EDA               	movwf	fsr2h,c
 11510   000D28  0E00               	movlw	0
 11511   000D2A  6EDE               	movwf	postinc2,c
 11512   000D2C  0E00               	movlw	0
 11513   000D2E  6EDD               	movwf	postdec2,c
 11514   000D30                     
 11515                           ; BSR set to: 1
 11516                           ;lib_pic/Control_velocidad_difuso.c: 332:  _Salida_conc[_Salida_i].center = TP_salida_sZ
      +                          _center;
 11517   000D30  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11518   000D34  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11519   000D38  90D8               	bcf	status,0,c
 11520   000D3A  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11521   000D3C  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11522   000D3E  90D8               	bcf	status,0,c
 11523   000D40  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11524   000D42  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11525   000D44  90D8               	bcf	status,0,c
 11526   000D46  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11527   000D48  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11528   000D4A  0E02               	movlw	2
 11529   000D4C  2653               	addwf	??_RL_reglas_controlador^0,f,c
 11530   000D4E  0E00               	movlw	0
 11531   000D50  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 11532   000D52  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11533   000D54  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11534   000D56  6ED9               	movwf	fsr2l,c
 11535   000D58  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11536   000D5A  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11537   000D5C  6EDA               	movwf	fsr2h,c
 11538   000D5E  0EEA               	movlw	low _TP_salida_sZ_center
 11539   000D60  6EDE               	movwf	postinc2,c
 11540   000D62  0E61               	movlw	high _TP_salida_sZ_center
 11541   000D64  6EDD               	movwf	postdec2,c
 11542   000D66                     
 11543                           ; BSR set to: 1
 11544                           ;lib_pic/Control_velocidad_difuso.c: 333:  _Salida_i++;
 11545   000D66  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 11546   000D68  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 11547   000D6A                     
 11548                           ; BSR set to: 1
 11549                           ;lib_pic/Control_velocidad_difuso.c: 335:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[2],_CambioError_eq[5]),OP_
      +                          operador_And(_error_eq[1],_CambioError_eq[6])),OP_operador_And(_error_eq[3],_CambioError
      +                          _eq[4])),OP_operador_And(_error_eq[4],_CambioError_eq[3])),OP_operador_And(_error_eq[6],
      +                          _CambioError_eq[1])),OP_operador_And(_error_eq[5],_CambioError_eq[2]));
 11550   000D6A  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 11551   000D6E  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 11552   000D72  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 11553   000D76  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 11554   000D7A  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 11555   000D7E  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 11556   000D82  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 11557   000D86  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 11558   000D8A  EC68  F02E         	call	_OP_operador_And	;wreg free
 11559   000D8E  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 11560   000D92  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 11561   000D96  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 11562   000D9A  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 11563   000D9E  C196  F02A         	movff	RL_reglas_controlador@_error_eq+4,OP_operador_And@a
 11564   000DA2  C197  F02B         	movff	RL_reglas_controlador@_error_eq+5,OP_operador_And@a+1
 11565   000DA6  C198  F02C         	movff	RL_reglas_controlador@_error_eq+6,OP_operador_And@a+2
 11566   000DAA  C199  F02D         	movff	RL_reglas_controlador@_error_eq+7,OP_operador_And@a+3
 11567   000DAE  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 11568   000DB2  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 11569   000DB6  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 11570   000DBA  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 11571   000DBE  EC68  F02E         	call	_OP_operador_And	;wreg free
 11572   000DC2  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11573   000DC6  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11574   000DCA  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11575   000DCE  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11576   000DD2  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11577   000DD6  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 11578   000DDA  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 11579   000DDE  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 11580   000DE2  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 11581   000DE6                     
 11582                           ;lib_pic/Control_velocidad_difuso.c: 335:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[2],_CambioError_eq[5]),OP_
      +                          operador_And(_error_eq[1],_CambioError_eq[6])),OP_operador_And(_error_eq[3],_CambioError
      +                          _eq[4])),OP_operador_And(_error_eq[4],_CambioError_eq[3])),OP_operador_And(_error_eq[6],
      +                          _CambioError_eq[1])),OP_operador_And(_error_eq[5],_CambioError_eq[2]));
 11583   000DE6  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 11584   000DEA  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 11585   000DEE  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 11586   000DF2  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 11587   000DF6  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11588   000DFA  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11589   000DFE  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11590   000E02  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11591   000E06  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 11592   000E0A  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 11593   000E0E  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 11594   000E12  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 11595   000E16  EC68  F02E         	call	_OP_operador_And	;wreg free
 11596   000E1A  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11597   000E1E  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11598   000E22  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11599   000E26  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11600   000E2A  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11601   000E2E  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 11602   000E32  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 11603   000E36  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 11604   000E3A  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 11605   000E3E                     
 11606                           ;lib_pic/Control_velocidad_difuso.c: 335:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[2],_CambioError_eq[5]),OP_
      +                          operador_And(_error_eq[1],_CambioError_eq[6])),OP_operador_And(_error_eq[3],_CambioError
      +                          _eq[4])),OP_operador_And(_error_eq[4],_CambioError_eq[3])),OP_operador_And(_error_eq[6],
      +                          _CambioError_eq[1])),OP_operador_And(_error_eq[5],_CambioError_eq[2]));
 11607   000E3E  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 11608   000E42  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 11609   000E46  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 11610   000E4A  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 11611   000E4E  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11612   000E52  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11613   000E56  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11614   000E5A  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11615   000E5E  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 11616   000E62  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 11617   000E66  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 11618   000E6A  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 11619   000E6E  EC68  F02E         	call	_OP_operador_And	;wreg free
 11620   000E72  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11621   000E76  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11622   000E7A  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11623   000E7E  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11624   000E82  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11625   000E86  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 11626   000E8A  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 11627   000E8E  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 11628   000E92  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 11629   000E96                     
 11630                           ;lib_pic/Control_velocidad_difuso.c: 335:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[2],_CambioError_eq[5]),OP_
      +                          operador_And(_error_eq[1],_CambioError_eq[6])),OP_operador_And(_error_eq[3],_CambioError
      +                          _eq[4])),OP_operador_And(_error_eq[4],_CambioError_eq[3])),OP_operador_And(_error_eq[6],
      +                          _CambioError_eq[1])),OP_operador_And(_error_eq[5],_CambioError_eq[2]));
 11631   000E96  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 11632   000E9A  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 11633   000E9E  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 11634   000EA2  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 11635   000EA6  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 11636   000EAA  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 11637   000EAE  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 11638   000EB2  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 11639   000EB6  C1B2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+4,OP_operador_And@b
 11640   000EBA  C1B3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+5,OP_operador_And@b+1
 11641   000EBE  C1B4  F030         	movff	RL_reglas_controlador@_CambioError_eq+6,OP_operador_And@b+2
 11642   000EC2  C1B5  F031         	movff	RL_reglas_controlador@_CambioError_eq+7,OP_operador_And@b+3
 11643   000EC6  EC68  F02E         	call	_OP_operador_And	;wreg free
 11644   000ECA  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11645   000ECE  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11646   000ED2  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11647   000ED6  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11648   000EDA  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11649   000EDE  C032  F164         	movff	?_OP_operador_Or,_RL_reglas_controlador$2380
 11650   000EE2  C033  F165         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2380+1
 11651   000EE6  C034  F166         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2380+2
 11652   000EEA  C035  F167         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2380+3
 11653   000EEE                     
 11654                           ;lib_pic/Control_velocidad_difuso.c: 335:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_And(_error_eq[2],_CambioError_eq[5]),OP_
      +                          operador_And(_error_eq[1],_CambioError_eq[6])),OP_operador_And(_error_eq[3],_CambioError
      +                          _eq[4])),OP_operador_And(_error_eq[4],_CambioError_eq[3])),OP_operador_And(_error_eq[6],
      +                          _CambioError_eq[1])),OP_operador_And(_error_eq[5],_CambioError_eq[2]));
 11655   000EEE  C164  F032         	movff	_RL_reglas_controlador$2380,OP_operador_Or@a
 11656   000EF2  C165  F033         	movff	_RL_reglas_controlador$2380+1,OP_operador_Or@a+1
 11657   000EF6  C166  F034         	movff	_RL_reglas_controlador$2380+2,OP_operador_Or@a+2
 11658   000EFA  C167  F035         	movff	_RL_reglas_controlador$2380+3,OP_operador_Or@a+3
 11659   000EFE  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 11660   000F02  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 11661   000F06  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 11662   000F0A  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 11663   000F0E  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 11664   000F12  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 11665   000F16  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 11666   000F1A  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 11667   000F1E  EC68  F02E         	call	_OP_operador_And	;wreg free
 11668   000F22  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11669   000F26  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11670   000F2A  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11671   000F2E  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11672   000F32  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11673   000F36  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 11674   000F3A  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 11675   000F3E  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 11676   000F42  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 11677   000F46                     
 11678                           ;lib_pic/Control_velocidad_difuso.c: 336:  _Salida_degree[_Salida_i] = _rl;
 11679   000F46  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 11680   000F48  6E53               	movwf	??_RL_reglas_controlador^0,c
 11681   000F4A  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 11682   000F4C  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 11683   000F4E  90D8               	bcf	status,0,c
 11684   000F50  0101               	movlb	1	; () banked
 11685   000F52  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 11686   000F54  6ED9               	movwf	fsr2l,c
 11687   000F56  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 11688   000F58  6EDA               	movwf	fsr2h,c
 11689   000F5A  90D8               	bcf	status,0,c
 11690   000F5C  36D9               	rlcf	fsr2l,f,c
 11691   000F5E  36DA               	rlcf	fsr2h,f,c
 11692   000F60  5053               	movf	??_RL_reglas_controlador^0,w,c
 11693   000F62  26D9               	addwf	fsr2l,f,c
 11694   000F64  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 11695   000F66  22DA               	addwfc	fsr2h,f,c
 11696   000F68  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 11697   000F6C  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 11698   000F70  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 11699   000F74  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 11700   000F78                     
 11701                           ; BSR set to: 1
 11702                           ;lib_pic/Control_velocidad_difuso.c: 337:  _Salida_conc[_Salida_i].equal = TP_salida_sPP
      +                          _equal;
 11703   000F78  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11704   000F7C  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11705   000F80  90D8               	bcf	status,0,c
 11706   000F82  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11707   000F84  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11708   000F86  90D8               	bcf	status,0,c
 11709   000F88  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11710   000F8A  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11711   000F8C  90D8               	bcf	status,0,c
 11712   000F8E  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11713   000F90  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11714   000F92  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11715   000F94  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11716   000F96  6ED9               	movwf	fsr2l,c
 11717   000F98  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11718   000F9A  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11719   000F9C  6EDA               	movwf	fsr2h,c
 11720   000F9E  0E00               	movlw	0
 11721   000FA0  6EDE               	movwf	postinc2,c
 11722   000FA2  0E00               	movlw	0
 11723   000FA4  6EDD               	movwf	postdec2,c
 11724   000FA6                     
 11725                           ; BSR set to: 1
 11726                           ;lib_pic/Control_velocidad_difuso.c: 338:  _Salida_conc[_Salida_i].center = TP_salida_sP
      +                          P_center;
 11727   000FA6  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11728   000FAA  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11729   000FAE  90D8               	bcf	status,0,c
 11730   000FB0  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11731   000FB2  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11732   000FB4  90D8               	bcf	status,0,c
 11733   000FB6  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11734   000FB8  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11735   000FBA  90D8               	bcf	status,0,c
 11736   000FBC  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11737   000FBE  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11738   000FC0  0E02               	movlw	2
 11739   000FC2  2653               	addwf	??_RL_reglas_controlador^0,f,c
 11740   000FC4  0E00               	movlw	0
 11741   000FC6  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 11742   000FC8  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11743   000FCA  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11744   000FCC  6ED9               	movwf	fsr2l,c
 11745   000FCE  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11746   000FD0  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11747   000FD2  6EDA               	movwf	fsr2h,c
 11748   000FD4  0EA2               	movlw	low _TP_salida_sPP_center
 11749   000FD6  6EDE               	movwf	postinc2,c
 11750   000FD8  0E61               	movlw	high _TP_salida_sPP_center
 11751   000FDA  6EDD               	movwf	postdec2,c
 11752   000FDC                     
 11753                           ; BSR set to: 1
 11754                           ;lib_pic/Control_velocidad_difuso.c: 339:  _Salida_i++;
 11755   000FDC  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 11756   000FDE  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 11757   000FE0                     
 11758                           ; BSR set to: 1
 11759                           ;lib_pic/Control_velocidad_difuso.c: 341:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[3],_CambioError_eq[5]),OP_operador_And(_e
      +                          rror_eq[2],_CambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[4])),OP_ope
      +                          rador_And(_error_eq[6],_CambioError_eq[2])),OP_operador_And(_error_eq[5],_CambioError_eq
      +                          [3]));
 11760   000FE0  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11761   000FE4  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11762   000FE8  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11763   000FEC  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11764   000FF0  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 11765   000FF4  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 11766   000FF8  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 11767   000FFC  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 11768   001000  EC68  F02E         	call	_OP_operador_And	;wreg free
 11769   001004  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 11770   001008  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 11771   00100C  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 11772   001010  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 11773   001014  C19A  F02A         	movff	RL_reglas_controlador@_error_eq+8,OP_operador_And@a
 11774   001018  C19B  F02B         	movff	RL_reglas_controlador@_error_eq+9,OP_operador_And@a+1
 11775   00101C  C19C  F02C         	movff	RL_reglas_controlador@_error_eq+10,OP_operador_And@a+2
 11776   001020  C19D  F02D         	movff	RL_reglas_controlador@_error_eq+11,OP_operador_And@a+3
 11777   001024  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 11778   001028  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 11779   00102C  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 11780   001030  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 11781   001034  EC68  F02E         	call	_OP_operador_And	;wreg free
 11782   001038  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11783   00103C  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11784   001040  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11785   001044  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11786   001048  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11787   00104C  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 11788   001050  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 11789   001054  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 11790   001058  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 11791   00105C                     
 11792                           ;lib_pic/Control_velocidad_difuso.c: 341:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[3],_CambioError_eq[5]),OP_operador_And(_e
      +                          rror_eq[2],_CambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[4])),OP_ope
      +                          rador_And(_error_eq[6],_CambioError_eq[2])),OP_operador_And(_error_eq[5],_CambioError_eq
      +                          [3]));
 11793   00105C  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 11794   001060  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 11795   001064  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 11796   001068  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 11797   00106C  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11798   001070  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11799   001074  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11800   001078  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11801   00107C  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 11802   001080  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 11803   001084  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 11804   001088  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 11805   00108C  EC68  F02E         	call	_OP_operador_And	;wreg free
 11806   001090  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11807   001094  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11808   001098  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11809   00109C  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11810   0010A0  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11811   0010A4  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 11812   0010A8  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 11813   0010AC  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 11814   0010B0  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 11815   0010B4                     
 11816                           ;lib_pic/Control_velocidad_difuso.c: 341:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[3],_CambioError_eq[5]),OP_operador_And(_e
      +                          rror_eq[2],_CambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[4])),OP_ope
      +                          rador_And(_error_eq[6],_CambioError_eq[2])),OP_operador_And(_error_eq[5],_CambioError_eq
      +                          [3]));
 11817   0010B4  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 11818   0010B8  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 11819   0010BC  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 11820   0010C0  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 11821   0010C4  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 11822   0010C8  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 11823   0010CC  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 11824   0010D0  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 11825   0010D4  C1B6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+8,OP_operador_And@b
 11826   0010D8  C1B7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+9,OP_operador_And@b+1
 11827   0010DC  C1B8  F030         	movff	RL_reglas_controlador@_CambioError_eq+10,OP_operador_And@b+2
 11828   0010E0  C1B9  F031         	movff	RL_reglas_controlador@_CambioError_eq+11,OP_operador_And@b+3
 11829   0010E4  EC68  F02E         	call	_OP_operador_And	;wreg free
 11830   0010E8  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11831   0010EC  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11832   0010F0  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11833   0010F4  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11834   0010F8  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11835   0010FC  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 11836   001100  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 11837   001104  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 11838   001108  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 11839   00110C                     
 11840                           ;lib_pic/Control_velocidad_difuso.c: 341:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_And(_error_eq[3],_CambioError_eq[5]),OP_operador_And(_e
      +                          rror_eq[2],_CambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[4])),OP_ope
      +                          rador_And(_error_eq[6],_CambioError_eq[2])),OP_operador_And(_error_eq[5],_CambioError_eq
      +                          [3]));
 11841   00110C  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 11842   001110  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 11843   001114  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 11844   001118  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 11845   00111C  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 11846   001120  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 11847   001124  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 11848   001128  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 11849   00112C  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 11850   001130  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 11851   001134  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 11852   001138  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 11853   00113C  EC68  F02E         	call	_OP_operador_And	;wreg free
 11854   001140  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11855   001144  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11856   001148  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11857   00114C  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11858   001150  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11859   001154  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 11860   001158  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 11861   00115C  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 11862   001160  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 11863   001164                     
 11864                           ;lib_pic/Control_velocidad_difuso.c: 342:  _Salida_degree[_Salida_i] = _rl;
 11865   001164  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 11866   001166  6E53               	movwf	??_RL_reglas_controlador^0,c
 11867   001168  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 11868   00116A  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 11869   00116C  90D8               	bcf	status,0,c
 11870   00116E  0101               	movlb	1	; () banked
 11871   001170  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 11872   001172  6ED9               	movwf	fsr2l,c
 11873   001174  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 11874   001176  6EDA               	movwf	fsr2h,c
 11875   001178  90D8               	bcf	status,0,c
 11876   00117A  36D9               	rlcf	fsr2l,f,c
 11877   00117C  36DA               	rlcf	fsr2h,f,c
 11878   00117E  5053               	movf	??_RL_reglas_controlador^0,w,c
 11879   001180  26D9               	addwf	fsr2l,f,c
 11880   001182  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 11881   001184  22DA               	addwfc	fsr2h,f,c
 11882   001186  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 11883   00118A  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 11884   00118E  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 11885   001192  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 11886   001196                     
 11887                           ; BSR set to: 1
 11888                           ;lib_pic/Control_velocidad_difuso.c: 343:  _Salida_conc[_Salida_i].equal = TP_salida_sPM
      +                          _equal;
 11889   001196  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11890   00119A  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11891   00119E  90D8               	bcf	status,0,c
 11892   0011A0  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11893   0011A2  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11894   0011A4  90D8               	bcf	status,0,c
 11895   0011A6  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11896   0011A8  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11897   0011AA  90D8               	bcf	status,0,c
 11898   0011AC  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11899   0011AE  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11900   0011B0  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11901   0011B2  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11902   0011B4  6ED9               	movwf	fsr2l,c
 11903   0011B6  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11904   0011B8  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11905   0011BA  6EDA               	movwf	fsr2h,c
 11906   0011BC  0E00               	movlw	0
 11907   0011BE  6EDE               	movwf	postinc2,c
 11908   0011C0  0E00               	movlw	0
 11909   0011C2  6EDD               	movwf	postdec2,c
 11910   0011C4                     
 11911                           ; BSR set to: 1
 11912                           ;lib_pic/Control_velocidad_difuso.c: 344:  _Salida_conc[_Salida_i].center = TP_salida_sP
      +                          M_center;
 11913   0011C4  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 11914   0011C8  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 11915   0011CC  90D8               	bcf	status,0,c
 11916   0011CE  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11917   0011D0  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11918   0011D2  90D8               	bcf	status,0,c
 11919   0011D4  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11920   0011D6  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11921   0011D8  90D8               	bcf	status,0,c
 11922   0011DA  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 11923   0011DC  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 11924   0011DE  0E02               	movlw	2
 11925   0011E0  2653               	addwf	??_RL_reglas_controlador^0,f,c
 11926   0011E2  0E00               	movlw	0
 11927   0011E4  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 11928   0011E6  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 11929   0011E8  2453               	addwf	??_RL_reglas_controlador^0,w,c
 11930   0011EA  6ED9               	movwf	fsr2l,c
 11931   0011EC  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 11932   0011EE  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 11933   0011F0  6EDA               	movwf	fsr2h,c
 11934   0011F2  0E90               	movlw	low _TP_salida_sPM_center
 11935   0011F4  6EDE               	movwf	postinc2,c
 11936   0011F6  0E61               	movlw	high _TP_salida_sPM_center
 11937   0011F8  6EDD               	movwf	postdec2,c
 11938   0011FA                     
 11939                           ; BSR set to: 1
 11940                           ;lib_pic/Control_velocidad_difuso.c: 345:  _Salida_i++;
 11941   0011FA  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 11942   0011FC  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 11943   0011FE                     
 11944                           ; BSR set to: 1
 11945                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 11946   0011FE  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11947   001202  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11948   001206  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11949   00120A  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11950   00120E  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 11951   001212  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 11952   001216  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 11953   00121A  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 11954   00121E  EC68  F02E         	call	_OP_operador_And	;wreg free
 11955   001222  C02A  F032         	movff	?_OP_operador_And,OP_operador_Or@a
 11956   001226  C02B  F033         	movff	?_OP_operador_And+1,OP_operador_Or@a+1
 11957   00122A  C02C  F034         	movff	?_OP_operador_And+2,OP_operador_Or@a+2
 11958   00122E  C02D  F035         	movff	?_OP_operador_And+3,OP_operador_Or@a+3
 11959   001232  C19E  F02A         	movff	RL_reglas_controlador@_error_eq+12,OP_operador_And@a
 11960   001236  C19F  F02B         	movff	RL_reglas_controlador@_error_eq+13,OP_operador_And@a+1
 11961   00123A  C1A0  F02C         	movff	RL_reglas_controlador@_error_eq+14,OP_operador_And@a+2
 11962   00123E  C1A1  F02D         	movff	RL_reglas_controlador@_error_eq+15,OP_operador_And@a+3
 11963   001242  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 11964   001246  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 11965   00124A  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 11966   00124E  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 11967   001252  EC68  F02E         	call	_OP_operador_And	;wreg free
 11968   001256  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11969   00125A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11970   00125E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11971   001262  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11972   001266  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11973   00126A  C032  F186         	movff	?_OP_operador_Or,_RL_reglas_controlador$2377
 11974   00126E  C033  F187         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2377+1
 11975   001272  C034  F188         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2377+2
 11976   001276  C035  F189         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2377+3
 11977   00127A                     
 11978                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 11979   00127A  C186  F032         	movff	_RL_reglas_controlador$2377,OP_operador_Or@a
 11980   00127E  C187  F033         	movff	_RL_reglas_controlador$2377+1,OP_operador_Or@a+1
 11981   001282  C188  F034         	movff	_RL_reglas_controlador$2377+2,OP_operador_Or@a+2
 11982   001286  C189  F035         	movff	_RL_reglas_controlador$2377+3,OP_operador_Or@a+3
 11983   00128A  C1A2  F02A         	movff	RL_reglas_controlador@_error_eq+16,OP_operador_And@a
 11984   00128E  C1A3  F02B         	movff	RL_reglas_controlador@_error_eq+17,OP_operador_And@a+1
 11985   001292  C1A4  F02C         	movff	RL_reglas_controlador@_error_eq+18,OP_operador_And@a+2
 11986   001296  C1A5  F02D         	movff	RL_reglas_controlador@_error_eq+19,OP_operador_And@a+3
 11987   00129A  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 11988   00129E  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 11989   0012A2  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 11990   0012A6  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 11991   0012AA  EC68  F02E         	call	_OP_operador_And	;wreg free
 11992   0012AE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 11993   0012B2  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 11994   0012B6  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 11995   0012BA  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 11996   0012BE  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 11997   0012C2  C032  F18A         	movff	?_OP_operador_Or,_RL_reglas_controlador$2378
 11998   0012C6  C033  F18B         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2378+1
 11999   0012CA  C034  F18C         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2378+2
 12000   0012CE  C035  F18D         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2378+3
 12001   0012D2                     
 12002                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12003   0012D2  C18A  F032         	movff	_RL_reglas_controlador$2378,OP_operador_Or@a
 12004   0012D6  C18B  F033         	movff	_RL_reglas_controlador$2378+1,OP_operador_Or@a+1
 12005   0012DA  C18C  F034         	movff	_RL_reglas_controlador$2378+2,OP_operador_Or@a+2
 12006   0012DE  C18D  F035         	movff	_RL_reglas_controlador$2378+3,OP_operador_Or@a+3
 12007   0012E2  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 12008   0012E6  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 12009   0012EA  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 12010   0012EE  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 12011   0012F2  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 12012   0012F6  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 12013   0012FA  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 12014   0012FE  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 12015   001302  EC68  F02E         	call	_OP_operador_And	;wreg free
 12016   001306  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12017   00130A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12018   00130E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12019   001312  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12020   001316  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12021   00131A  C032  F18E         	movff	?_OP_operador_Or,_RL_reglas_controlador$2379
 12022   00131E  C033  F18F         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2379+1
 12023   001322  C034  F190         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2379+2
 12024   001326  C035  F191         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2379+3
 12025   00132A                     
 12026                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12027   00132A  C18E  F032         	movff	_RL_reglas_controlador$2379,OP_operador_Or@a
 12028   00132E  C18F  F033         	movff	_RL_reglas_controlador$2379+1,OP_operador_Or@a+1
 12029   001332  C190  F034         	movff	_RL_reglas_controlador$2379+2,OP_operador_Or@a+2
 12030   001336  C191  F035         	movff	_RL_reglas_controlador$2379+3,OP_operador_Or@a+3
 12031   00133A  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 12032   00133E  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 12033   001342  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 12034   001346  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 12035   00134A  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 12036   00134E  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 12037   001352  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 12038   001356  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 12039   00135A  EC68  F02E         	call	_OP_operador_And	;wreg free
 12040   00135E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12041   001362  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12042   001366  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12043   00136A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12044   00136E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12045   001372  C032  F164         	movff	?_OP_operador_Or,_RL_reglas_controlador$2380
 12046   001376  C033  F165         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2380+1
 12047   00137A  C034  F166         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2380+2
 12048   00137E  C035  F167         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2380+3
 12049   001382                     
 12050                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12051   001382  C164  F032         	movff	_RL_reglas_controlador$2380,OP_operador_Or@a
 12052   001386  C165  F033         	movff	_RL_reglas_controlador$2380+1,OP_operador_Or@a+1
 12053   00138A  C166  F034         	movff	_RL_reglas_controlador$2380+2,OP_operador_Or@a+2
 12054   00138E  C167  F035         	movff	_RL_reglas_controlador$2380+3,OP_operador_Or@a+3
 12055   001392  C1A6  F02A         	movff	RL_reglas_controlador@_error_eq+20,OP_operador_And@a
 12056   001396  C1A7  F02B         	movff	RL_reglas_controlador@_error_eq+21,OP_operador_And@a+1
 12057   00139A  C1A8  F02C         	movff	RL_reglas_controlador@_error_eq+22,OP_operador_And@a+2
 12058   00139E  C1A9  F02D         	movff	RL_reglas_controlador@_error_eq+23,OP_operador_And@a+3
 12059   0013A2  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 12060   0013A6  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 12061   0013AA  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 12062   0013AE  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 12063   0013B2  EC68  F02E         	call	_OP_operador_And	;wreg free
 12064   0013B6  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12065   0013BA  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12066   0013BE  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12067   0013C2  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12068   0013C6  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12069   0013CA  C032  F160         	movff	?_OP_operador_Or,_RL_reglas_controlador$2381
 12070   0013CE  C033  F161         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2381+1
 12071   0013D2  C034  F162         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2381+2
 12072   0013D6  C035  F163         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2381+3
 12073   0013DA                     
 12074                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12075   0013DA  C160  F032         	movff	_RL_reglas_controlador$2381,OP_operador_Or@a
 12076   0013DE  C161  F033         	movff	_RL_reglas_controlador$2381+1,OP_operador_Or@a+1
 12077   0013E2  C162  F034         	movff	_RL_reglas_controlador$2381+2,OP_operador_Or@a+2
 12078   0013E6  C163  F035         	movff	_RL_reglas_controlador$2381+3,OP_operador_Or@a+3
 12079   0013EA  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 12080   0013EE  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 12081   0013F2  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 12082   0013F6  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 12083   0013FA  C1BA  F02E         	movff	RL_reglas_controlador@_CambioError_eq+12,OP_operador_And@b
 12084   0013FE  C1BB  F02F         	movff	RL_reglas_controlador@_CambioError_eq+13,OP_operador_And@b+1
 12085   001402  C1BC  F030         	movff	RL_reglas_controlador@_CambioError_eq+14,OP_operador_And@b+2
 12086   001406  C1BD  F031         	movff	RL_reglas_controlador@_CambioError_eq+15,OP_operador_And@b+3
 12087   00140A  EC68  F02E         	call	_OP_operador_And	;wreg free
 12088   00140E  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12089   001412  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12090   001416  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12091   00141A  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12092   00141E  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12093   001422  C032  F11C         	movff	?_OP_operador_Or,_RL_reglas_controlador$2382
 12094   001426  C033  F11D         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2382+1
 12095   00142A  C034  F11E         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2382+2
 12096   00142E  C035  F11F         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2382+3
 12097   001432                     
 12098                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12099   001432  C11C  F032         	movff	_RL_reglas_controlador$2382,OP_operador_Or@a
 12100   001436  C11D  F033         	movff	_RL_reglas_controlador$2382+1,OP_operador_Or@a+1
 12101   00143A  C11E  F034         	movff	_RL_reglas_controlador$2382+2,OP_operador_Or@a+2
 12102   00143E  C11F  F035         	movff	_RL_reglas_controlador$2382+3,OP_operador_Or@a+3
 12103   001442  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 12104   001446  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 12105   00144A  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 12106   00144E  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 12107   001452  C1BE  F02E         	movff	RL_reglas_controlador@_CambioError_eq+16,OP_operador_And@b
 12108   001456  C1BF  F02F         	movff	RL_reglas_controlador@_CambioError_eq+17,OP_operador_And@b+1
 12109   00145A  C1C0  F030         	movff	RL_reglas_controlador@_CambioError_eq+18,OP_operador_And@b+2
 12110   00145E  C1C1  F031         	movff	RL_reglas_controlador@_CambioError_eq+19,OP_operador_And@b+3
 12111   001462  EC68  F02E         	call	_OP_operador_And	;wreg free
 12112   001466  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12113   00146A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12114   00146E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12115   001472  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12116   001476  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12117   00147A  C032  F120         	movff	?_OP_operador_Or,_RL_reglas_controlador$2383
 12118   00147E  C033  F121         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2383+1
 12119   001482  C034  F122         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2383+2
 12120   001486  C035  F123         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2383+3
 12121   00148A                     
 12122                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12123   00148A  C120  F032         	movff	_RL_reglas_controlador$2383,OP_operador_Or@a
 12124   00148E  C121  F033         	movff	_RL_reglas_controlador$2383+1,OP_operador_Or@a+1
 12125   001492  C122  F034         	movff	_RL_reglas_controlador$2383+2,OP_operador_Or@a+2
 12126   001496  C123  F035         	movff	_RL_reglas_controlador$2383+3,OP_operador_Or@a+3
 12127   00149A  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 12128   00149E  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 12129   0014A2  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 12130   0014A6  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 12131   0014AA  C1C6  F02E         	movff	RL_reglas_controlador@_CambioError_eq+24,OP_operador_And@b
 12132   0014AE  C1C7  F02F         	movff	RL_reglas_controlador@_CambioError_eq+25,OP_operador_And@b+1
 12133   0014B2  C1C8  F030         	movff	RL_reglas_controlador@_CambioError_eq+26,OP_operador_And@b+2
 12134   0014B6  C1C9  F031         	movff	RL_reglas_controlador@_CambioError_eq+27,OP_operador_And@b+3
 12135   0014BA  EC68  F02E         	call	_OP_operador_And	;wreg free
 12136   0014BE  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12137   0014C2  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12138   0014C6  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12139   0014CA  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12140   0014CE  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12141   0014D2  C032  F124         	movff	?_OP_operador_Or,_RL_reglas_controlador$2384
 12142   0014D6  C033  F125         	movff	?_OP_operador_Or+1,_RL_reglas_controlador$2384+1
 12143   0014DA  C034  F126         	movff	?_OP_operador_Or+2,_RL_reglas_controlador$2384+2
 12144   0014DE  C035  F127         	movff	?_OP_operador_Or+3,_RL_reglas_controlador$2384+3
 12145   0014E2                     
 12146                           ;lib_pic/Control_velocidad_difuso.c: 347:  _rl = OP_operador_Or(OP_operador_Or(OP_operad
      +                          or_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_operador_Or(OP_oper
      +                          ador_Or(OP_operador_And(_error_eq[4],_CambioError_eq[5]),OP_operador_And(_error_eq[3],_C
      +                          ambioError_eq[6])),OP_operador_And(_error_eq[4],_CambioError_eq[6])),OP_operador_And(_er
      +                          ror_eq[5],_CambioError_eq[4])),OP_operador_And(_error_eq[5],_CambioError_eq[5])),OP_oper
      +                          ador_And(_error_eq[5],_CambioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[
      +                          3])),OP_operador_And(_error_eq[6],_CambioError_eq[4])),OP_operador_And(_error_eq[6],_Cam
      +                          bioError_eq[6])),OP_operador_And(_error_eq[6],_CambioError_eq[5]));
 12147   0014E2  C124  F032         	movff	_RL_reglas_controlador$2384,OP_operador_Or@a
 12148   0014E6  C125  F033         	movff	_RL_reglas_controlador$2384+1,OP_operador_Or@a+1
 12149   0014EA  C126  F034         	movff	_RL_reglas_controlador$2384+2,OP_operador_Or@a+2
 12150   0014EE  C127  F035         	movff	_RL_reglas_controlador$2384+3,OP_operador_Or@a+3
 12151   0014F2  C1AA  F02A         	movff	RL_reglas_controlador@_error_eq+24,OP_operador_And@a
 12152   0014F6  C1AB  F02B         	movff	RL_reglas_controlador@_error_eq+25,OP_operador_And@a+1
 12153   0014FA  C1AC  F02C         	movff	RL_reglas_controlador@_error_eq+26,OP_operador_And@a+2
 12154   0014FE  C1AD  F02D         	movff	RL_reglas_controlador@_error_eq+27,OP_operador_And@a+3
 12155   001502  C1C2  F02E         	movff	RL_reglas_controlador@_CambioError_eq+20,OP_operador_And@b
 12156   001506  C1C3  F02F         	movff	RL_reglas_controlador@_CambioError_eq+21,OP_operador_And@b+1
 12157   00150A  C1C4  F030         	movff	RL_reglas_controlador@_CambioError_eq+22,OP_operador_And@b+2
 12158   00150E  C1C5  F031         	movff	RL_reglas_controlador@_CambioError_eq+23,OP_operador_And@b+3
 12159   001512  EC68  F02E         	call	_OP_operador_And	;wreg free
 12160   001516  C02A  F036         	movff	?_OP_operador_And,OP_operador_Or@b
 12161   00151A  C02B  F037         	movff	?_OP_operador_And+1,OP_operador_Or@b+1
 12162   00151E  C02C  F038         	movff	?_OP_operador_And+2,OP_operador_Or@b+2
 12163   001522  C02D  F039         	movff	?_OP_operador_And+3,OP_operador_Or@b+3
 12164   001526  EC3C  F02E         	call	_OP_operador_Or	;wreg free
 12165   00152A  C032  F182         	movff	?_OP_operador_Or,RL_reglas_controlador@_rl
 12166   00152E  C033  F183         	movff	?_OP_operador_Or+1,RL_reglas_controlador@_rl+1
 12167   001532  C034  F184         	movff	?_OP_operador_Or+2,RL_reglas_controlador@_rl+2
 12168   001536  C035  F185         	movff	?_OP_operador_Or+3,RL_reglas_controlador@_rl+3
 12169   00153A                     
 12170                           ;lib_pic/Control_velocidad_difuso.c: 348:  _Salida_degree[_Salida_i] = _rl;
 12171   00153A  0E00               	movlw	low RL_reglas_controlador@_Salida_degree
 12172   00153C  6E53               	movwf	??_RL_reglas_controlador^0,c
 12173   00153E  0E01               	movlw	high RL_reglas_controlador@_Salida_degree
 12174   001540  6E54               	movwf	(??_RL_reglas_controlador+1)^0,c
 12175   001542  90D8               	bcf	status,0,c
 12176   001544  0101               	movlb	1	; () banked
 12177   001546  35CA               	rlcf	RL_reglas_controlador@_Salida_i& (0+255),w,b
 12178   001548  6ED9               	movwf	fsr2l,c
 12179   00154A  35CB               	rlcf	(RL_reglas_controlador@_Salida_i+1)& (0+255),w,b
 12180   00154C  6EDA               	movwf	fsr2h,c
 12181   00154E  90D8               	bcf	status,0,c
 12182   001550  36D9               	rlcf	fsr2l,f,c
 12183   001552  36DA               	rlcf	fsr2h,f,c
 12184   001554  5053               	movf	??_RL_reglas_controlador^0,w,c
 12185   001556  26D9               	addwf	fsr2l,f,c
 12186   001558  5054               	movf	(??_RL_reglas_controlador+1)^0,w,c
 12187   00155A  22DA               	addwfc	fsr2h,f,c
 12188   00155C  C182  FFDE         	movff	RL_reglas_controlador@_rl,postinc2
 12189   001560  C183  FFDE         	movff	RL_reglas_controlador@_rl+1,postinc2
 12190   001564  C184  FFDE         	movff	RL_reglas_controlador@_rl+2,postinc2
 12191   001568  C185  FFDE         	movff	RL_reglas_controlador@_rl+3,postinc2
 12192   00156C                     
 12193                           ; BSR set to: 1
 12194                           ;lib_pic/Control_velocidad_difuso.c: 349:  _Salida_conc[_Salida_i].equal = TP_salida_sPG
      +                          _equal;
 12195   00156C  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 12196   001570  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 12197   001574  90D8               	bcf	status,0,c
 12198   001576  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12199   001578  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12200   00157A  90D8               	bcf	status,0,c
 12201   00157C  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12202   00157E  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12203   001580  90D8               	bcf	status,0,c
 12204   001582  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12205   001584  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12206   001586  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 12207   001588  2453               	addwf	??_RL_reglas_controlador^0,w,c
 12208   00158A  6ED9               	movwf	fsr2l,c
 12209   00158C  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 12210   00158E  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 12211   001590  6EDA               	movwf	fsr2h,c
 12212   001592  0E00               	movlw	0
 12213   001594  6EDE               	movwf	postinc2,c
 12214   001596  0E00               	movlw	0
 12215   001598  6EDD               	movwf	postdec2,c
 12216   00159A                     
 12217                           ; BSR set to: 1
 12218                           ;lib_pic/Control_velocidad_difuso.c: 350:  _Salida_conc[_Salida_i].center = TP_salida_sP
      +                          G_center;
 12219   00159A  C1CA  F053         	movff	RL_reglas_controlador@_Salida_i,??_RL_reglas_controlador
 12220   00159E  C1CB  F054         	movff	RL_reglas_controlador@_Salida_i+1,??_RL_reglas_controlador+1
 12221   0015A2  90D8               	bcf	status,0,c
 12222   0015A4  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12223   0015A6  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12224   0015A8  90D8               	bcf	status,0,c
 12225   0015AA  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12226   0015AC  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12227   0015AE  90D8               	bcf	status,0,c
 12228   0015B0  3653               	rlcf	??_RL_reglas_controlador^0,f,c
 12229   0015B2  3654               	rlcf	(??_RL_reglas_controlador+1)^0,f,c
 12230   0015B4  0E02               	movlw	2
 12231   0015B6  2653               	addwf	??_RL_reglas_controlador^0,f,c
 12232   0015B8  0E00               	movlw	0
 12233   0015BA  2254               	addwfc	(??_RL_reglas_controlador+1)^0,f,c
 12234   0015BC  0E28               	movlw	low RL_reglas_controlador@_Salida_conc
 12235   0015BE  2453               	addwf	??_RL_reglas_controlador^0,w,c
 12236   0015C0  6ED9               	movwf	fsr2l,c
 12237   0015C2  0E01               	movlw	high RL_reglas_controlador@_Salida_conc
 12238   0015C4  2054               	addwfc	(??_RL_reglas_controlador+1)^0,w,c
 12239   0015C6  6EDA               	movwf	fsr2h,c
 12240   0015C8  0E7E               	movlw	low _TP_salida_sPG_center
 12241   0015CA  6EDE               	movwf	postinc2,c
 12242   0015CC  0E61               	movlw	high _TP_salida_sPG_center
 12243   0015CE  6EDD               	movwf	postdec2,c
 12244   0015D0                     
 12245                           ; BSR set to: 1
 12246                           ;lib_pic/Control_velocidad_difuso.c: 351:  _Salida_i++;
 12247   0015D0  4BCA               	infsnz	RL_reglas_controlador@_Salida_i& (0+255),f,b
 12248   0015D2  2BCB               	incf	(RL_reglas_controlador@_Salida_i+1)& (0+255),f,b
 12249   0015D4                     
 12250                           ; BSR set to: 1
 12251                           ;lib_pic/Control_velocidad_difuso.c: 353:  *Salida = OP_operador_Defuz(_Salida);
 12252   0015D4  EE21  F068         	lfsr	2,RL_reglas_controlador@_Salida
 12253   0015D8  EE00  F060         	lfsr	0,OP_operador_Defuz@mf
 12254   0015DC  0E19               	movlw	25
 12255   0015DE                     u4991:
 12256   0015DE  CFDB FFEB          	movff	plusw2,plusw0
 12257   0015E2  06E8               	decf	wreg,f,c
 12258   0015E4  E2FC               	bc	u4991
 12259   0015E6  EC9E  F01C         	call	_OP_operador_Defuz	;wreg free
 12260   0015EA  C094  FFD9         	movff	RL_reglas_controlador@Salida,fsr2l
 12261   0015EE  C095  FFDA         	movff	RL_reglas_controlador@Salida+1,fsr2h
 12262   0015F2  0100               	movlb	0	; () banked
 12263   0015F4  C060  FFDE         	movff	?_OP_operador_Defuz,postinc2
 12264   0015F8  C061  FFDE         	movff	?_OP_operador_Defuz+1,postinc2
 12265   0015FC  C062  FFDE         	movff	?_OP_operador_Defuz+2,postinc2
 12266   001600  C063  FFDE         	movff	?_OP_operador_Defuz+3,postinc2
 12267   001604                     
 12268                           ; BSR set to: 0
 12269   001604  0012               	return		;funcret
 12270   001606                     __end_of_RL_reglas_controlador:
 12271                           	callstack 0
 12272                           
 12273 ;; *************** function _TP_error_eZ_equal *****************
 12274 ;; Defined at:
 12275 ;;		line 99 in file "lib_pic/Control_velocidad_difuso.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  x               4   28[BANK0 ] void 
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  4   28[BANK0 ] void 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0, cstack
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12289 ;;      Params:         0       4       0       0       0       0       0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12292 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12293 ;;Total ram usage:        4 bytes
 12294 ;; Hardware stack levels used: 1
 12295 ;; Hardware stack levels required when called: 5
 12296 ;; This function calls:
 12297 ;;		_MF_xfsg_triangle_equal
 12298 ;; This function is called by:
 12299 ;;		_RL_reglas_controlador
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           	psect	text53
 12304   0051BA                     __ptext53:
 12305                           	callstack 0
 12306   0051BA                     _TP_error_eZ_equal:
 12307                           	callstack 23
 12308   0051BA                     
 12309                           ;lib_pic/Control_velocidad_difuso.c: 100:    return MF_xfsg_triangle_equal(x,-120.0,120.
      +                          0,0.9411764705882353,-30.0,0.0,30.0);
 12310   0051BA  C07C  F060         	movff	TP_error_eZ_equal@x,MF_xfsg_triangle_equal@x
 12311   0051BE  C07D  F061         	movff	TP_error_eZ_equal@x+1,MF_xfsg_triangle_equal@x+1
 12312   0051C2  C07E  F062         	movff	TP_error_eZ_equal@x+2,MF_xfsg_triangle_equal@x+2
 12313   0051C6  C07F  F063         	movff	TP_error_eZ_equal@x+3,MF_xfsg_triangle_equal@x+3
 12314   0051CA  0E00               	movlw	0
 12315   0051CC  0100               	movlb	0	; () banked
 12316   0051CE  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12317   0051D0  0E00               	movlw	0
 12318   0051D2  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12319   0051D4  0EF0               	movlw	240
 12320   0051D6  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12321   0051D8  0EC2               	movlw	194
 12322   0051DA  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12323   0051DC  0E00               	movlw	0
 12324   0051DE  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12325   0051E0  0E00               	movlw	0
 12326   0051E2  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12327   0051E4  0EF0               	movlw	240
 12328   0051E6  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12329   0051E8  0E42               	movlw	66
 12330   0051EA  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12331   0051EC  0EF1               	movlw	241
 12332   0051EE  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12333   0051F0  0EF0               	movlw	240
 12334   0051F2  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12335   0051F4  0E70               	movlw	112
 12336   0051F6  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12337   0051F8  0E3F               	movlw	63
 12338   0051FA  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12339   0051FC  0E00               	movlw	0
 12340   0051FE  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12341   005200  0E00               	movlw	0
 12342   005202  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12343   005204  0EF0               	movlw	240
 12344   005206  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12345   005208  0EC1               	movlw	193
 12346   00520A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12347   00520C  0E00               	movlw	0
 12348   00520E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12349   005210  0E00               	movlw	0
 12350   005212  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12351   005214  0E00               	movlw	0
 12352   005216  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12353   005218  0E00               	movlw	0
 12354   00521A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12355   00521C  0E00               	movlw	0
 12356   00521E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12357   005220  0E00               	movlw	0
 12358   005222  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12359   005224  0EF0               	movlw	240
 12360   005226  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12361   005228  0E41               	movlw	65
 12362   00522A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12363   00522C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12364   005230  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_eZ_equal
 12365   005234  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_eZ_equal+1
 12366   005238  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_eZ_equal+2
 12367   00523C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_eZ_equal+3
 12368   005240  0012               	return		;funcret
 12369   005242                     __end_of_TP_error_eZ_equal:
 12370                           	callstack 0
 12371                           
 12372 ;; *************** function _TP_error_ePP_equal *****************
 12373 ;; Defined at:
 12374 ;;		line 107 in file "lib_pic/Control_velocidad_difuso.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  x               4   28[BANK0 ] void 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  4   28[BANK0 ] void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12388 ;;      Params:         0       4       0       0       0       0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12391 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12392 ;;Total ram usage:        4 bytes
 12393 ;; Hardware stack levels used: 1
 12394 ;; Hardware stack levels required when called: 5
 12395 ;; This function calls:
 12396 ;;		_MF_xfsg_triangle_equal
 12397 ;; This function is called by:
 12398 ;;		_RL_reglas_controlador
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text54
 12403   005242                     __ptext54:
 12404                           	callstack 0
 12405   005242                     _TP_error_ePP_equal:
 12406                           	callstack 23
 12407   005242                     
 12408                           ;lib_pic/Control_velocidad_difuso.c: 108:    return MF_xfsg_triangle_equal(x,-120.0,120.
      +                          0,0.9411764705882353,0.0,30.0,60.0);
 12409   005242  C07C  F060         	movff	TP_error_ePP_equal@x,MF_xfsg_triangle_equal@x
 12410   005246  C07D  F061         	movff	TP_error_ePP_equal@x+1,MF_xfsg_triangle_equal@x+1
 12411   00524A  C07E  F062         	movff	TP_error_ePP_equal@x+2,MF_xfsg_triangle_equal@x+2
 12412   00524E  C07F  F063         	movff	TP_error_ePP_equal@x+3,MF_xfsg_triangle_equal@x+3
 12413   005252  0E00               	movlw	0
 12414   005254  0100               	movlb	0	; () banked
 12415   005256  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12416   005258  0E00               	movlw	0
 12417   00525A  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12418   00525C  0EF0               	movlw	240
 12419   00525E  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12420   005260  0EC2               	movlw	194
 12421   005262  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12422   005264  0E00               	movlw	0
 12423   005266  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12424   005268  0E00               	movlw	0
 12425   00526A  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12426   00526C  0EF0               	movlw	240
 12427   00526E  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12428   005270  0E42               	movlw	66
 12429   005272  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12430   005274  0EF1               	movlw	241
 12431   005276  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12432   005278  0EF0               	movlw	240
 12433   00527A  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12434   00527C  0E70               	movlw	112
 12435   00527E  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12436   005280  0E3F               	movlw	63
 12437   005282  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12438   005284  0E00               	movlw	0
 12439   005286  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12440   005288  0E00               	movlw	0
 12441   00528A  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12442   00528C  0E00               	movlw	0
 12443   00528E  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12444   005290  0E00               	movlw	0
 12445   005292  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12446   005294  0E00               	movlw	0
 12447   005296  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12448   005298  0E00               	movlw	0
 12449   00529A  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12450   00529C  0EF0               	movlw	240
 12451   00529E  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12452   0052A0  0E41               	movlw	65
 12453   0052A2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12454   0052A4  0E00               	movlw	0
 12455   0052A6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12456   0052A8  0E00               	movlw	0
 12457   0052AA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12458   0052AC  0E70               	movlw	112
 12459   0052AE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12460   0052B0  0E42               	movlw	66
 12461   0052B2  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12462   0052B4  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12463   0052B8  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_ePP_equal
 12464   0052BC  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_ePP_equal+1
 12465   0052C0  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_ePP_equal+2
 12466   0052C4  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_ePP_equal+3
 12467   0052C8  0012               	return		;funcret
 12468   0052CA                     __end_of_TP_error_ePP_equal:
 12469                           	callstack 0
 12470                           
 12471 ;; *************** function _TP_error_ePM_equal *****************
 12472 ;; Defined at:
 12473 ;;		line 115 in file "lib_pic/Control_velocidad_difuso.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  x               4   28[BANK0 ] void 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  4   28[BANK0 ] void 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2, status,0, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12487 ;;      Params:         0       4       0       0       0       0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12490 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12491 ;;Total ram usage:        4 bytes
 12492 ;; Hardware stack levels used: 1
 12493 ;; Hardware stack levels required when called: 5
 12494 ;; This function calls:
 12495 ;;		_MF_xfsg_triangle_equal
 12496 ;; This function is called by:
 12497 ;;		_RL_reglas_controlador
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text55
 12502   0052CA                     __ptext55:
 12503                           	callstack 0
 12504   0052CA                     _TP_error_ePM_equal:
 12505                           	callstack 23
 12506   0052CA                     
 12507                           ;lib_pic/Control_velocidad_difuso.c: 116:    return MF_xfsg_triangle_equal(x,-120.0,120.
      +                          0,0.9411764705882353,30.0,60.0,90.0);
 12508   0052CA  C07C  F060         	movff	TP_error_ePM_equal@x,MF_xfsg_triangle_equal@x
 12509   0052CE  C07D  F061         	movff	TP_error_ePM_equal@x+1,MF_xfsg_triangle_equal@x+1
 12510   0052D2  C07E  F062         	movff	TP_error_ePM_equal@x+2,MF_xfsg_triangle_equal@x+2
 12511   0052D6  C07F  F063         	movff	TP_error_ePM_equal@x+3,MF_xfsg_triangle_equal@x+3
 12512   0052DA  0E00               	movlw	0
 12513   0052DC  0100               	movlb	0	; () banked
 12514   0052DE  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12515   0052E0  0E00               	movlw	0
 12516   0052E2  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12517   0052E4  0EF0               	movlw	240
 12518   0052E6  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12519   0052E8  0EC2               	movlw	194
 12520   0052EA  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12521   0052EC  0E00               	movlw	0
 12522   0052EE  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12523   0052F0  0E00               	movlw	0
 12524   0052F2  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12525   0052F4  0EF0               	movlw	240
 12526   0052F6  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12527   0052F8  0E42               	movlw	66
 12528   0052FA  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12529   0052FC  0EF1               	movlw	241
 12530   0052FE  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12531   005300  0EF0               	movlw	240
 12532   005302  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12533   005304  0E70               	movlw	112
 12534   005306  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12535   005308  0E3F               	movlw	63
 12536   00530A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12537   00530C  0E00               	movlw	0
 12538   00530E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12539   005310  0E00               	movlw	0
 12540   005312  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12541   005314  0EF0               	movlw	240
 12542   005316  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12543   005318  0E41               	movlw	65
 12544   00531A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12545   00531C  0E00               	movlw	0
 12546   00531E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12547   005320  0E00               	movlw	0
 12548   005322  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12549   005324  0E70               	movlw	112
 12550   005326  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12551   005328  0E42               	movlw	66
 12552   00532A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12553   00532C  0E00               	movlw	0
 12554   00532E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12555   005330  0E00               	movlw	0
 12556   005332  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12557   005334  0EB4               	movlw	180
 12558   005336  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12559   005338  0E42               	movlw	66
 12560   00533A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12561   00533C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12562   005340  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_ePM_equal
 12563   005344  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_ePM_equal+1
 12564   005348  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_ePM_equal+2
 12565   00534C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_ePM_equal+3
 12566   005350  0012               	return		;funcret
 12567   005352                     __end_of_TP_error_ePM_equal:
 12568                           	callstack 0
 12569                           
 12570 ;; *************** function _TP_error_ePG_equal *****************
 12571 ;; Defined at:
 12572 ;;		line 123 in file "lib_pic/Control_velocidad_difuso.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;  x               4   28[BANK0 ] void 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  4   28[BANK0 ] void 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0, cstack
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12586 ;;      Params:         0       4       0       0       0       0       0       0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12589 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12590 ;;Total ram usage:        4 bytes
 12591 ;; Hardware stack levels used: 1
 12592 ;; Hardware stack levels required when called: 5
 12593 ;; This function calls:
 12594 ;;		_MF_xfsg_triangle_equal
 12595 ;; This function is called by:
 12596 ;;		_RL_reglas_controlador
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text56
 12601   005352                     __ptext56:
 12602                           	callstack 0
 12603   005352                     _TP_error_ePG_equal:
 12604                           	callstack 23
 12605   005352                     
 12606                           ;lib_pic/Control_velocidad_difuso.c: 124:    return MF_xfsg_triangle_equal(x,-120.0,120.
      +                          0,0.9411764705882353,60.0,90.0,120.0);
 12607   005352  C07C  F060         	movff	TP_error_ePG_equal@x,MF_xfsg_triangle_equal@x
 12608   005356  C07D  F061         	movff	TP_error_ePG_equal@x+1,MF_xfsg_triangle_equal@x+1
 12609   00535A  C07E  F062         	movff	TP_error_ePG_equal@x+2,MF_xfsg_triangle_equal@x+2
 12610   00535E  C07F  F063         	movff	TP_error_ePG_equal@x+3,MF_xfsg_triangle_equal@x+3
 12611   005362  0E00               	movlw	0
 12612   005364  0100               	movlb	0	; () banked
 12613   005366  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12614   005368  0E00               	movlw	0
 12615   00536A  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12616   00536C  0EF0               	movlw	240
 12617   00536E  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12618   005370  0EC2               	movlw	194
 12619   005372  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12620   005374  0E00               	movlw	0
 12621   005376  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12622   005378  0E00               	movlw	0
 12623   00537A  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12624   00537C  0EF0               	movlw	240
 12625   00537E  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12626   005380  0E42               	movlw	66
 12627   005382  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12628   005384  0EF1               	movlw	241
 12629   005386  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12630   005388  0EF0               	movlw	240
 12631   00538A  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12632   00538C  0E70               	movlw	112
 12633   00538E  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12634   005390  0E3F               	movlw	63
 12635   005392  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12636   005394  0E00               	movlw	0
 12637   005396  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12638   005398  0E00               	movlw	0
 12639   00539A  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12640   00539C  0E70               	movlw	112
 12641   00539E  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12642   0053A0  0E42               	movlw	66
 12643   0053A2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12644   0053A4  0E00               	movlw	0
 12645   0053A6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12646   0053A8  0E00               	movlw	0
 12647   0053AA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12648   0053AC  0EB4               	movlw	180
 12649   0053AE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12650   0053B0  0E42               	movlw	66
 12651   0053B2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12652   0053B4  0E00               	movlw	0
 12653   0053B6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12654   0053B8  0E00               	movlw	0
 12655   0053BA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12656   0053BC  0EF0               	movlw	240
 12657   0053BE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12658   0053C0  0E42               	movlw	66
 12659   0053C2  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12660   0053C4  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12661   0053C8  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_ePG_equal
 12662   0053CC  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_ePG_equal+1
 12663   0053D0  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_ePG_equal+2
 12664   0053D4  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_ePG_equal+3
 12665   0053D8  0012               	return		;funcret
 12666   0053DA                     __end_of_TP_error_ePG_equal:
 12667                           	callstack 0
 12668                           
 12669 ;; *************** function _TP_error_eNP_equal *****************
 12670 ;; Defined at:
 12671 ;;		line 91 in file "lib_pic/Control_velocidad_difuso.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  x               4   28[BANK0 ] void 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  4   28[BANK0 ] void 
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0, cstack
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12685 ;;      Params:         0       4       0       0       0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12688 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12689 ;;Total ram usage:        4 bytes
 12690 ;; Hardware stack levels used: 1
 12691 ;; Hardware stack levels required when called: 5
 12692 ;; This function calls:
 12693 ;;		_MF_xfsg_triangle_equal
 12694 ;; This function is called by:
 12695 ;;		_RL_reglas_controlador
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text57
 12700   0053DA                     __ptext57:
 12701                           	callstack 0
 12702   0053DA                     _TP_error_eNP_equal:
 12703                           	callstack 23
 12704   0053DA                     
 12705                           ;lib_pic/Control_velocidad_difuso.c: 92:    return MF_xfsg_triangle_equal(x,-120.0,120.0
      +                          ,0.9411764705882353,-60.0,-30.0,0.0);
 12706   0053DA  C07C  F060         	movff	TP_error_eNP_equal@x,MF_xfsg_triangle_equal@x
 12707   0053DE  C07D  F061         	movff	TP_error_eNP_equal@x+1,MF_xfsg_triangle_equal@x+1
 12708   0053E2  C07E  F062         	movff	TP_error_eNP_equal@x+2,MF_xfsg_triangle_equal@x+2
 12709   0053E6  C07F  F063         	movff	TP_error_eNP_equal@x+3,MF_xfsg_triangle_equal@x+3
 12710   0053EA  0E00               	movlw	0
 12711   0053EC  0100               	movlb	0	; () banked
 12712   0053EE  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12713   0053F0  0E00               	movlw	0
 12714   0053F2  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12715   0053F4  0EF0               	movlw	240
 12716   0053F6  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12717   0053F8  0EC2               	movlw	194
 12718   0053FA  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12719   0053FC  0E00               	movlw	0
 12720   0053FE  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12721   005400  0E00               	movlw	0
 12722   005402  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12723   005404  0EF0               	movlw	240
 12724   005406  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12725   005408  0E42               	movlw	66
 12726   00540A  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12727   00540C  0EF1               	movlw	241
 12728   00540E  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12729   005410  0EF0               	movlw	240
 12730   005412  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12731   005414  0E70               	movlw	112
 12732   005416  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12733   005418  0E3F               	movlw	63
 12734   00541A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12735   00541C  0E00               	movlw	0
 12736   00541E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12737   005420  0E00               	movlw	0
 12738   005422  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12739   005424  0E70               	movlw	112
 12740   005426  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12741   005428  0EC2               	movlw	194
 12742   00542A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12743   00542C  0E00               	movlw	0
 12744   00542E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12745   005430  0E00               	movlw	0
 12746   005432  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12747   005434  0EF0               	movlw	240
 12748   005436  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12749   005438  0EC1               	movlw	193
 12750   00543A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12751   00543C  0E00               	movlw	0
 12752   00543E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12753   005440  0E00               	movlw	0
 12754   005442  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12755   005444  0E00               	movlw	0
 12756   005446  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12757   005448  0E00               	movlw	0
 12758   00544A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12759   00544C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12760   005450  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_eNP_equal
 12761   005454  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_eNP_equal+1
 12762   005458  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_eNP_equal+2
 12763   00545C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_eNP_equal+3
 12764   005460  0012               	return		;funcret
 12765   005462                     __end_of_TP_error_eNP_equal:
 12766                           	callstack 0
 12767                           
 12768 ;; *************** function _TP_error_eNM_equal *****************
 12769 ;; Defined at:
 12770 ;;		line 83 in file "lib_pic/Control_velocidad_difuso.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;  x               4   28[BANK0 ] void 
 12773 ;; Auto vars:     Size  Location     Type
 12774 ;;		None
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  4   28[BANK0 ] void 
 12777 ;; Registers used:
 12778 ;;		wreg, status,2, status,0, cstack
 12779 ;; Tracked objects:
 12780 ;;		On entry : 0/0
 12781 ;;		On exit  : 0/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12784 ;;      Params:         0       4       0       0       0       0       0       0       0
 12785 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12787 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12788 ;;Total ram usage:        4 bytes
 12789 ;; Hardware stack levels used: 1
 12790 ;; Hardware stack levels required when called: 5
 12791 ;; This function calls:
 12792 ;;		_MF_xfsg_triangle_equal
 12793 ;; This function is called by:
 12794 ;;		_RL_reglas_controlador
 12795 ;; This function uses a non-reentrant model
 12796 ;;
 12797                           
 12798                           	psect	text58
 12799   005462                     __ptext58:
 12800                           	callstack 0
 12801   005462                     _TP_error_eNM_equal:
 12802                           	callstack 23
 12803   005462                     
 12804                           ;lib_pic/Control_velocidad_difuso.c: 84:    return MF_xfsg_triangle_equal(x,-120.0,120.0
      +                          ,0.9411764705882353,-90.0,-60.0,-30.0);
 12805   005462  C07C  F060         	movff	TP_error_eNM_equal@x,MF_xfsg_triangle_equal@x
 12806   005466  C07D  F061         	movff	TP_error_eNM_equal@x+1,MF_xfsg_triangle_equal@x+1
 12807   00546A  C07E  F062         	movff	TP_error_eNM_equal@x+2,MF_xfsg_triangle_equal@x+2
 12808   00546E  C07F  F063         	movff	TP_error_eNM_equal@x+3,MF_xfsg_triangle_equal@x+3
 12809   005472  0E00               	movlw	0
 12810   005474  0100               	movlb	0	; () banked
 12811   005476  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12812   005478  0E00               	movlw	0
 12813   00547A  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12814   00547C  0EF0               	movlw	240
 12815   00547E  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12816   005480  0EC2               	movlw	194
 12817   005482  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12818   005484  0E00               	movlw	0
 12819   005486  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12820   005488  0E00               	movlw	0
 12821   00548A  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12822   00548C  0EF0               	movlw	240
 12823   00548E  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12824   005490  0E42               	movlw	66
 12825   005492  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12826   005494  0EF1               	movlw	241
 12827   005496  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12828   005498  0EF0               	movlw	240
 12829   00549A  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12830   00549C  0E70               	movlw	112
 12831   00549E  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12832   0054A0  0E3F               	movlw	63
 12833   0054A2  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12834   0054A4  0E00               	movlw	0
 12835   0054A6  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12836   0054A8  0E00               	movlw	0
 12837   0054AA  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12838   0054AC  0EB4               	movlw	180
 12839   0054AE  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12840   0054B0  0EC2               	movlw	194
 12841   0054B2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12842   0054B4  0E00               	movlw	0
 12843   0054B6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12844   0054B8  0E00               	movlw	0
 12845   0054BA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12846   0054BC  0E70               	movlw	112
 12847   0054BE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12848   0054C0  0EC2               	movlw	194
 12849   0054C2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12850   0054C4  0E00               	movlw	0
 12851   0054C6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12852   0054C8  0E00               	movlw	0
 12853   0054CA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12854   0054CC  0EF0               	movlw	240
 12855   0054CE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12856   0054D0  0EC1               	movlw	193
 12857   0054D2  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12858   0054D4  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12859   0054D8  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_eNM_equal
 12860   0054DC  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_eNM_equal+1
 12861   0054E0  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_eNM_equal+2
 12862   0054E4  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_eNM_equal+3
 12863   0054E8  0012               	return		;funcret
 12864   0054EA                     __end_of_TP_error_eNM_equal:
 12865                           	callstack 0
 12866                           
 12867 ;; *************** function _TP_error_eNG_equal *****************
 12868 ;; Defined at:
 12869 ;;		line 75 in file "lib_pic/Control_velocidad_difuso.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  x               4   28[BANK0 ] void 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  4   28[BANK0 ] void 
 12876 ;; Registers used:
 12877 ;;		wreg, status,2, status,0, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12883 ;;      Params:         0       4       0       0       0       0       0       0       0
 12884 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12885 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12886 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12887 ;;Total ram usage:        4 bytes
 12888 ;; Hardware stack levels used: 1
 12889 ;; Hardware stack levels required when called: 5
 12890 ;; This function calls:
 12891 ;;		_MF_xfsg_triangle_equal
 12892 ;; This function is called by:
 12893 ;;		_RL_reglas_controlador
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           	psect	text59
 12898   0054EA                     __ptext59:
 12899                           	callstack 0
 12900   0054EA                     _TP_error_eNG_equal:
 12901                           	callstack 23
 12902   0054EA                     
 12903                           ;lib_pic/Control_velocidad_difuso.c: 76:    return MF_xfsg_triangle_equal(x,-120.0,120.0
      +                          ,0.9411764705882353,-120.0,-90.0,-60.0);
 12904   0054EA  C07C  F060         	movff	TP_error_eNG_equal@x,MF_xfsg_triangle_equal@x
 12905   0054EE  C07D  F061         	movff	TP_error_eNG_equal@x+1,MF_xfsg_triangle_equal@x+1
 12906   0054F2  C07E  F062         	movff	TP_error_eNG_equal@x+2,MF_xfsg_triangle_equal@x+2
 12907   0054F6  C07F  F063         	movff	TP_error_eNG_equal@x+3,MF_xfsg_triangle_equal@x+3
 12908   0054FA  0E00               	movlw	0
 12909   0054FC  0100               	movlb	0	; () banked
 12910   0054FE  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 12911   005500  0E00               	movlw	0
 12912   005502  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 12913   005504  0EF0               	movlw	240
 12914   005506  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 12915   005508  0EC2               	movlw	194
 12916   00550A  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 12917   00550C  0E00               	movlw	0
 12918   00550E  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 12919   005510  0E00               	movlw	0
 12920   005512  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 12921   005514  0EF0               	movlw	240
 12922   005516  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 12923   005518  0E42               	movlw	66
 12924   00551A  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 12925   00551C  0EF1               	movlw	241
 12926   00551E  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 12927   005520  0EF0               	movlw	240
 12928   005522  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 12929   005524  0E70               	movlw	112
 12930   005526  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 12931   005528  0E3F               	movlw	63
 12932   00552A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 12933   00552C  0E00               	movlw	0
 12934   00552E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 12935   005530  0E00               	movlw	0
 12936   005532  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 12937   005534  0EF0               	movlw	240
 12938   005536  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 12939   005538  0EC2               	movlw	194
 12940   00553A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 12941   00553C  0E00               	movlw	0
 12942   00553E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 12943   005540  0E00               	movlw	0
 12944   005542  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 12945   005544  0EB4               	movlw	180
 12946   005546  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 12947   005548  0EC2               	movlw	194
 12948   00554A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 12949   00554C  0E00               	movlw	0
 12950   00554E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 12951   005550  0E00               	movlw	0
 12952   005552  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 12953   005554  0E70               	movlw	112
 12954   005556  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 12955   005558  0EC2               	movlw	194
 12956   00555A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 12957   00555C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 12958   005560  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_error_eNG_equal
 12959   005564  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_error_eNG_equal+1
 12960   005568  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_error_eNG_equal+2
 12961   00556C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_error_eNG_equal+3
 12962   005570  0012               	return		;funcret
 12963   005572                     __end_of_TP_error_eNG_equal:
 12964                           	callstack 0
 12965                           
 12966 ;; *************** function _TP_CambioError_ceZ_equal *****************
 12967 ;; Defined at:
 12968 ;;		line 159 in file "lib_pic/Control_velocidad_difuso.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  x               4   28[BANK0 ] void 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  4   28[BANK0 ] void 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12982 ;;      Params:         0       4       0       0       0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12985 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12986 ;;Total ram usage:        4 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 5
 12989 ;; This function calls:
 12990 ;;		_MF_xfsg_triangle_equal
 12991 ;; This function is called by:
 12992 ;;		_RL_reglas_controlador
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           	psect	text60
 12997   005572                     __ptext60:
 12998                           	callstack 0
 12999   005572                     _TP_CambioError_ceZ_equal:
 13000                           	callstack 23
 13001   005572                     
 13002                           ;lib_pic/Control_velocidad_difuso.c: 160:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,-2.0,0.0,2.0);
 13003   005572  C07C  F060         	movff	TP_CambioError_ceZ_equal@x,MF_xfsg_triangle_equal@x
 13004   005576  C07D  F061         	movff	TP_CambioError_ceZ_equal@x+1,MF_xfsg_triangle_equal@x+1
 13005   00557A  C07E  F062         	movff	TP_CambioError_ceZ_equal@x+2,MF_xfsg_triangle_equal@x+2
 13006   00557E  C07F  F063         	movff	TP_CambioError_ceZ_equal@x+3,MF_xfsg_triangle_equal@x+3
 13007   005582  0E00               	movlw	0
 13008   005584  0100               	movlb	0	; () banked
 13009   005586  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13010   005588  0E00               	movlw	0
 13011   00558A  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13012   00558C  0E00               	movlw	0
 13013   00558E  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13014   005590  0EC1               	movlw	193
 13015   005592  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13016   005594  0E00               	movlw	0
 13017   005596  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13018   005598  0E00               	movlw	0
 13019   00559A  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13020   00559C  0E00               	movlw	0
 13021   00559E  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13022   0055A0  0E41               	movlw	65
 13023   0055A2  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13024   0055A4  0E81               	movlw	129
 13025   0055A6  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13026   0055A8  0E80               	movlw	128
 13027   0055AA  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13028   0055AC  0E80               	movlw	128
 13029   0055AE  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13030   0055B0  0E3D               	movlw	61
 13031   0055B2  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13032   0055B4  0E00               	movlw	0
 13033   0055B6  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13034   0055B8  0E00               	movlw	0
 13035   0055BA  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13036   0055BC  0E00               	movlw	0
 13037   0055BE  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13038   0055C0  0EC0               	movlw	192
 13039   0055C2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13040   0055C4  0E00               	movlw	0
 13041   0055C6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13042   0055C8  0E00               	movlw	0
 13043   0055CA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13044   0055CC  0E00               	movlw	0
 13045   0055CE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13046   0055D0  0E00               	movlw	0
 13047   0055D2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13048   0055D4  0E00               	movlw	0
 13049   0055D6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13050   0055D8  0E00               	movlw	0
 13051   0055DA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13052   0055DC  0E00               	movlw	0
 13053   0055DE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13054   0055E0  0E40               	movlw	64
 13055   0055E2  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13056   0055E4  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13057   0055E8  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_ceZ_equal
 13058   0055EC  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_ceZ_equal+1
 13059   0055F0  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_ceZ_equal+2
 13060   0055F4  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_ceZ_equal+3
 13061   0055F8  0012               	return		;funcret
 13062   0055FA                     __end_of_TP_CambioError_ceZ_equal:
 13063                           	callstack 0
 13064                           
 13065 ;; *************** function _TP_CambioError_cePP_equal *****************
 13066 ;; Defined at:
 13067 ;;		line 167 in file "lib_pic/Control_velocidad_difuso.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  x               4   28[BANK0 ] void 
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;		None
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  4   28[BANK0 ] void 
 13074 ;; Registers used:
 13075 ;;		wreg, status,2, status,0, cstack
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13081 ;;      Params:         0       4       0       0       0       0       0       0       0
 13082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13084 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13085 ;;Total ram usage:        4 bytes
 13086 ;; Hardware stack levels used: 1
 13087 ;; Hardware stack levels required when called: 5
 13088 ;; This function calls:
 13089 ;;		_MF_xfsg_triangle_equal
 13090 ;; This function is called by:
 13091 ;;		_RL_reglas_controlador
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095                           	psect	text61
 13096   0055FA                     __ptext61:
 13097                           	callstack 0
 13098   0055FA                     _TP_CambioError_cePP_equal:
 13099                           	callstack 23
 13100   0055FA                     
 13101                           ;lib_pic/Control_velocidad_difuso.c: 168:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,0.0,2.0,4.0);
 13102   0055FA  C07C  F060         	movff	TP_CambioError_cePP_equal@x,MF_xfsg_triangle_equal@x
 13103   0055FE  C07D  F061         	movff	TP_CambioError_cePP_equal@x+1,MF_xfsg_triangle_equal@x+1
 13104   005602  C07E  F062         	movff	TP_CambioError_cePP_equal@x+2,MF_xfsg_triangle_equal@x+2
 13105   005606  C07F  F063         	movff	TP_CambioError_cePP_equal@x+3,MF_xfsg_triangle_equal@x+3
 13106   00560A  0E00               	movlw	0
 13107   00560C  0100               	movlb	0	; () banked
 13108   00560E  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13109   005610  0E00               	movlw	0
 13110   005612  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13111   005614  0E00               	movlw	0
 13112   005616  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13113   005618  0EC1               	movlw	193
 13114   00561A  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13115   00561C  0E00               	movlw	0
 13116   00561E  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13117   005620  0E00               	movlw	0
 13118   005622  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13119   005624  0E00               	movlw	0
 13120   005626  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13121   005628  0E41               	movlw	65
 13122   00562A  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13123   00562C  0E81               	movlw	129
 13124   00562E  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13125   005630  0E80               	movlw	128
 13126   005632  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13127   005634  0E80               	movlw	128
 13128   005636  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13129   005638  0E3D               	movlw	61
 13130   00563A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13131   00563C  0E00               	movlw	0
 13132   00563E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13133   005640  0E00               	movlw	0
 13134   005642  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13135   005644  0E00               	movlw	0
 13136   005646  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13137   005648  0E00               	movlw	0
 13138   00564A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13139   00564C  0E00               	movlw	0
 13140   00564E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13141   005650  0E00               	movlw	0
 13142   005652  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13143   005654  0E00               	movlw	0
 13144   005656  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13145   005658  0E40               	movlw	64
 13146   00565A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13147   00565C  0E00               	movlw	0
 13148   00565E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13149   005660  0E00               	movlw	0
 13150   005662  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13151   005664  0E80               	movlw	128
 13152   005666  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13153   005668  0E40               	movlw	64
 13154   00566A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13155   00566C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13156   005670  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_cePP_equal
 13157   005674  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_cePP_equal+1
 13158   005678  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_cePP_equal+2
 13159   00567C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_cePP_equal+3
 13160   005680  0012               	return		;funcret
 13161   005682                     __end_of_TP_CambioError_cePP_equal:
 13162                           	callstack 0
 13163                           
 13164 ;; *************** function _TP_CambioError_cePM_equal *****************
 13165 ;; Defined at:
 13166 ;;		line 175 in file "lib_pic/Control_velocidad_difuso.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  x               4   28[BANK0 ] void 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;		None
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  4   28[BANK0 ] void 
 13173 ;; Registers used:
 13174 ;;		wreg, status,2, status,0, cstack
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13180 ;;      Params:         0       4       0       0       0       0       0       0       0
 13181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13183 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13184 ;;Total ram usage:        4 bytes
 13185 ;; Hardware stack levels used: 1
 13186 ;; Hardware stack levels required when called: 5
 13187 ;; This function calls:
 13188 ;;		_MF_xfsg_triangle_equal
 13189 ;; This function is called by:
 13190 ;;		_RL_reglas_controlador
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text62
 13195   005682                     __ptext62:
 13196                           	callstack 0
 13197   005682                     _TP_CambioError_cePM_equal:
 13198                           	callstack 23
 13199   005682                     
 13200                           ;lib_pic/Control_velocidad_difuso.c: 176:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,2.0,4.0,6.0);
 13201   005682  C07C  F060         	movff	TP_CambioError_cePM_equal@x,MF_xfsg_triangle_equal@x
 13202   005686  C07D  F061         	movff	TP_CambioError_cePM_equal@x+1,MF_xfsg_triangle_equal@x+1
 13203   00568A  C07E  F062         	movff	TP_CambioError_cePM_equal@x+2,MF_xfsg_triangle_equal@x+2
 13204   00568E  C07F  F063         	movff	TP_CambioError_cePM_equal@x+3,MF_xfsg_triangle_equal@x+3
 13205   005692  0E00               	movlw	0
 13206   005694  0100               	movlb	0	; () banked
 13207   005696  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13208   005698  0E00               	movlw	0
 13209   00569A  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13210   00569C  0E00               	movlw	0
 13211   00569E  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13212   0056A0  0EC1               	movlw	193
 13213   0056A2  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13214   0056A4  0E00               	movlw	0
 13215   0056A6  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13216   0056A8  0E00               	movlw	0
 13217   0056AA  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13218   0056AC  0E00               	movlw	0
 13219   0056AE  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13220   0056B0  0E41               	movlw	65
 13221   0056B2  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13222   0056B4  0E81               	movlw	129
 13223   0056B6  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13224   0056B8  0E80               	movlw	128
 13225   0056BA  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13226   0056BC  0E80               	movlw	128
 13227   0056BE  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13228   0056C0  0E3D               	movlw	61
 13229   0056C2  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13230   0056C4  0E00               	movlw	0
 13231   0056C6  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13232   0056C8  0E00               	movlw	0
 13233   0056CA  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13234   0056CC  0E00               	movlw	0
 13235   0056CE  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13236   0056D0  0E40               	movlw	64
 13237   0056D2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13238   0056D4  0E00               	movlw	0
 13239   0056D6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13240   0056D8  0E00               	movlw	0
 13241   0056DA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13242   0056DC  0E80               	movlw	128
 13243   0056DE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13244   0056E0  0E40               	movlw	64
 13245   0056E2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13246   0056E4  0E00               	movlw	0
 13247   0056E6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13248   0056E8  0E00               	movlw	0
 13249   0056EA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13250   0056EC  0EC0               	movlw	192
 13251   0056EE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13252   0056F0  0E40               	movlw	64
 13253   0056F2  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13254   0056F4  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13255   0056F8  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_cePM_equal
 13256   0056FC  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_cePM_equal+1
 13257   005700  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_cePM_equal+2
 13258   005704  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_cePM_equal+3
 13259   005708  0012               	return		;funcret
 13260   00570A                     __end_of_TP_CambioError_cePM_equal:
 13261                           	callstack 0
 13262                           
 13263 ;; *************** function _TP_CambioError_cePG_equal *****************
 13264 ;; Defined at:
 13265 ;;		line 183 in file "lib_pic/Control_velocidad_difuso.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  x               4   28[BANK0 ] void 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;		None
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  4   28[BANK0 ] void 
 13272 ;; Registers used:
 13273 ;;		wreg, status,2, status,0, cstack
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/0
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13279 ;;      Params:         0       4       0       0       0       0       0       0       0
 13280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13282 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13283 ;;Total ram usage:        4 bytes
 13284 ;; Hardware stack levels used: 1
 13285 ;; Hardware stack levels required when called: 5
 13286 ;; This function calls:
 13287 ;;		_MF_xfsg_triangle_equal
 13288 ;; This function is called by:
 13289 ;;		_RL_reglas_controlador
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text63
 13294   00570A                     __ptext63:
 13295                           	callstack 0
 13296   00570A                     _TP_CambioError_cePG_equal:
 13297                           	callstack 23
 13298   00570A                     
 13299                           ;lib_pic/Control_velocidad_difuso.c: 184:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,4.0,6.0,8.0);
 13300   00570A  C07C  F060         	movff	TP_CambioError_cePG_equal@x,MF_xfsg_triangle_equal@x
 13301   00570E  C07D  F061         	movff	TP_CambioError_cePG_equal@x+1,MF_xfsg_triangle_equal@x+1
 13302   005712  C07E  F062         	movff	TP_CambioError_cePG_equal@x+2,MF_xfsg_triangle_equal@x+2
 13303   005716  C07F  F063         	movff	TP_CambioError_cePG_equal@x+3,MF_xfsg_triangle_equal@x+3
 13304   00571A  0E00               	movlw	0
 13305   00571C  0100               	movlb	0	; () banked
 13306   00571E  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13307   005720  0E00               	movlw	0
 13308   005722  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13309   005724  0E00               	movlw	0
 13310   005726  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13311   005728  0EC1               	movlw	193
 13312   00572A  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13313   00572C  0E00               	movlw	0
 13314   00572E  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13315   005730  0E00               	movlw	0
 13316   005732  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13317   005734  0E00               	movlw	0
 13318   005736  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13319   005738  0E41               	movlw	65
 13320   00573A  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13321   00573C  0E81               	movlw	129
 13322   00573E  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13323   005740  0E80               	movlw	128
 13324   005742  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13325   005744  0E80               	movlw	128
 13326   005746  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13327   005748  0E3D               	movlw	61
 13328   00574A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13329   00574C  0E00               	movlw	0
 13330   00574E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13331   005750  0E00               	movlw	0
 13332   005752  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13333   005754  0E80               	movlw	128
 13334   005756  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13335   005758  0E40               	movlw	64
 13336   00575A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13337   00575C  0E00               	movlw	0
 13338   00575E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13339   005760  0E00               	movlw	0
 13340   005762  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13341   005764  0EC0               	movlw	192
 13342   005766  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13343   005768  0E40               	movlw	64
 13344   00576A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13345   00576C  0E00               	movlw	0
 13346   00576E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13347   005770  0E00               	movlw	0
 13348   005772  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13349   005774  0E00               	movlw	0
 13350   005776  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13351   005778  0E41               	movlw	65
 13352   00577A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13353   00577C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13354   005780  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_cePG_equal
 13355   005784  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_cePG_equal+1
 13356   005788  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_cePG_equal+2
 13357   00578C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_cePG_equal+3
 13358   005790  0012               	return		;funcret
 13359   005792                     __end_of_TP_CambioError_cePG_equal:
 13360                           	callstack 0
 13361                           
 13362 ;; *************** function _TP_CambioError_ceNP_equal *****************
 13363 ;; Defined at:
 13364 ;;		line 151 in file "lib_pic/Control_velocidad_difuso.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;  x               4   28[BANK0 ] void 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  4   28[BANK0 ] void 
 13371 ;; Registers used:
 13372 ;;		wreg, status,2, status,0, cstack
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13378 ;;      Params:         0       4       0       0       0       0       0       0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13381 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13382 ;;Total ram usage:        4 bytes
 13383 ;; Hardware stack levels used: 1
 13384 ;; Hardware stack levels required when called: 5
 13385 ;; This function calls:
 13386 ;;		_MF_xfsg_triangle_equal
 13387 ;; This function is called by:
 13388 ;;		_RL_reglas_controlador
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	text64
 13393   005792                     __ptext64:
 13394                           	callstack 0
 13395   005792                     _TP_CambioError_ceNP_equal:
 13396                           	callstack 23
 13397   005792                     
 13398                           ;lib_pic/Control_velocidad_difuso.c: 152:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,-4.0,-2.0,0.0);
 13399   005792  C07C  F060         	movff	TP_CambioError_ceNP_equal@x,MF_xfsg_triangle_equal@x
 13400   005796  C07D  F061         	movff	TP_CambioError_ceNP_equal@x+1,MF_xfsg_triangle_equal@x+1
 13401   00579A  C07E  F062         	movff	TP_CambioError_ceNP_equal@x+2,MF_xfsg_triangle_equal@x+2
 13402   00579E  C07F  F063         	movff	TP_CambioError_ceNP_equal@x+3,MF_xfsg_triangle_equal@x+3
 13403   0057A2  0E00               	movlw	0
 13404   0057A4  0100               	movlb	0	; () banked
 13405   0057A6  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13406   0057A8  0E00               	movlw	0
 13407   0057AA  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13408   0057AC  0E00               	movlw	0
 13409   0057AE  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13410   0057B0  0EC1               	movlw	193
 13411   0057B2  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13412   0057B4  0E00               	movlw	0
 13413   0057B6  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13414   0057B8  0E00               	movlw	0
 13415   0057BA  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13416   0057BC  0E00               	movlw	0
 13417   0057BE  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13418   0057C0  0E41               	movlw	65
 13419   0057C2  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13420   0057C4  0E81               	movlw	129
 13421   0057C6  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13422   0057C8  0E80               	movlw	128
 13423   0057CA  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13424   0057CC  0E80               	movlw	128
 13425   0057CE  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13426   0057D0  0E3D               	movlw	61
 13427   0057D2  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13428   0057D4  0E00               	movlw	0
 13429   0057D6  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13430   0057D8  0E00               	movlw	0
 13431   0057DA  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13432   0057DC  0E80               	movlw	128
 13433   0057DE  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13434   0057E0  0EC0               	movlw	192
 13435   0057E2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13436   0057E4  0E00               	movlw	0
 13437   0057E6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13438   0057E8  0E00               	movlw	0
 13439   0057EA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13440   0057EC  0E00               	movlw	0
 13441   0057EE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13442   0057F0  0EC0               	movlw	192
 13443   0057F2  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13444   0057F4  0E00               	movlw	0
 13445   0057F6  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13446   0057F8  0E00               	movlw	0
 13447   0057FA  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13448   0057FC  0E00               	movlw	0
 13449   0057FE  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13450   005800  0E00               	movlw	0
 13451   005802  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13452   005804  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13453   005808  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_ceNP_equal
 13454   00580C  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_ceNP_equal+1
 13455   005810  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_ceNP_equal+2
 13456   005814  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_ceNP_equal+3
 13457   005818  0012               	return		;funcret
 13458   00581A                     __end_of_TP_CambioError_ceNP_equal:
 13459                           	callstack 0
 13460                           
 13461 ;; *************** function _TP_CambioError_ceNM_equal *****************
 13462 ;; Defined at:
 13463 ;;		line 143 in file "lib_pic/Control_velocidad_difuso.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  x               4   28[BANK0 ] void 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;		None
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  4   28[BANK0 ] void 
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0, cstack
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13477 ;;      Params:         0       4       0       0       0       0       0       0       0
 13478 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13479 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13480 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13481 ;;Total ram usage:        4 bytes
 13482 ;; Hardware stack levels used: 1
 13483 ;; Hardware stack levels required when called: 5
 13484 ;; This function calls:
 13485 ;;		_MF_xfsg_triangle_equal
 13486 ;; This function is called by:
 13487 ;;		_RL_reglas_controlador
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text65
 13492   00581A                     __ptext65:
 13493                           	callstack 0
 13494   00581A                     _TP_CambioError_ceNM_equal:
 13495                           	callstack 23
 13496   00581A                     
 13497                           ;lib_pic/Control_velocidad_difuso.c: 144:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,-6.0,-4.0,-2.0);
 13498   00581A  C07C  F060         	movff	TP_CambioError_ceNM_equal@x,MF_xfsg_triangle_equal@x
 13499   00581E  C07D  F061         	movff	TP_CambioError_ceNM_equal@x+1,MF_xfsg_triangle_equal@x+1
 13500   005822  C07E  F062         	movff	TP_CambioError_ceNM_equal@x+2,MF_xfsg_triangle_equal@x+2
 13501   005826  C07F  F063         	movff	TP_CambioError_ceNM_equal@x+3,MF_xfsg_triangle_equal@x+3
 13502   00582A  0E00               	movlw	0
 13503   00582C  0100               	movlb	0	; () banked
 13504   00582E  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13505   005830  0E00               	movlw	0
 13506   005832  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13507   005834  0E00               	movlw	0
 13508   005836  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13509   005838  0EC1               	movlw	193
 13510   00583A  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13511   00583C  0E00               	movlw	0
 13512   00583E  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13513   005840  0E00               	movlw	0
 13514   005842  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13515   005844  0E00               	movlw	0
 13516   005846  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13517   005848  0E41               	movlw	65
 13518   00584A  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13519   00584C  0E81               	movlw	129
 13520   00584E  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13521   005850  0E80               	movlw	128
 13522   005852  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13523   005854  0E80               	movlw	128
 13524   005856  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13525   005858  0E3D               	movlw	61
 13526   00585A  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13527   00585C  0E00               	movlw	0
 13528   00585E  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13529   005860  0E00               	movlw	0
 13530   005862  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13531   005864  0EC0               	movlw	192
 13532   005866  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13533   005868  0EC0               	movlw	192
 13534   00586A  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13535   00586C  0E00               	movlw	0
 13536   00586E  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13537   005870  0E00               	movlw	0
 13538   005872  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13539   005874  0E80               	movlw	128
 13540   005876  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13541   005878  0EC0               	movlw	192
 13542   00587A  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13543   00587C  0E00               	movlw	0
 13544   00587E  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13545   005880  0E00               	movlw	0
 13546   005882  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13547   005884  0E00               	movlw	0
 13548   005886  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13549   005888  0EC0               	movlw	192
 13550   00588A  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13551   00588C  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13552   005890  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_ceNM_equal
 13553   005894  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_ceNM_equal+1
 13554   005898  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_ceNM_equal+2
 13555   00589C  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_ceNM_equal+3
 13556   0058A0  0012               	return		;funcret
 13557   0058A2                     __end_of_TP_CambioError_ceNM_equal:
 13558                           	callstack 0
 13559                           
 13560 ;; *************** function _TP_CambioError_ceNG_equal *****************
 13561 ;; Defined at:
 13562 ;;		line 135 in file "lib_pic/Control_velocidad_difuso.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;  x               4   28[BANK0 ] void 
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;		None
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  4   28[BANK0 ] void 
 13569 ;; Registers used:
 13570 ;;		wreg, status,2, status,0, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13576 ;;      Params:         0       4       0       0       0       0       0       0       0
 13577 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13579 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13580 ;;Total ram usage:        4 bytes
 13581 ;; Hardware stack levels used: 1
 13582 ;; Hardware stack levels required when called: 5
 13583 ;; This function calls:
 13584 ;;		_MF_xfsg_triangle_equal
 13585 ;; This function is called by:
 13586 ;;		_RL_reglas_controlador
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text66
 13591   0058A2                     __ptext66:
 13592                           	callstack 0
 13593   0058A2                     _TP_CambioError_ceNG_equal:
 13594                           	callstack 23
 13595   0058A2                     
 13596                           ;lib_pic/Control_velocidad_difuso.c: 136:    return MF_xfsg_triangle_equal(x,-8.0,8.0,0.
      +                          06274509803921569,-8.0,-6.0,-4.0);
 13597   0058A2  C07C  F060         	movff	TP_CambioError_ceNG_equal@x,MF_xfsg_triangle_equal@x
 13598   0058A6  C07D  F061         	movff	TP_CambioError_ceNG_equal@x+1,MF_xfsg_triangle_equal@x+1
 13599   0058AA  C07E  F062         	movff	TP_CambioError_ceNG_equal@x+2,MF_xfsg_triangle_equal@x+2
 13600   0058AE  C07F  F063         	movff	TP_CambioError_ceNG_equal@x+3,MF_xfsg_triangle_equal@x+3
 13601   0058B2  0E00               	movlw	0
 13602   0058B4  0100               	movlb	0	; () banked
 13603   0058B6  6F64               	movwf	MF_xfsg_triangle_equal@min& (0+255),b
 13604   0058B8  0E00               	movlw	0
 13605   0058BA  6F65               	movwf	(MF_xfsg_triangle_equal@min+1)& (0+255),b
 13606   0058BC  0E00               	movlw	0
 13607   0058BE  6F66               	movwf	(MF_xfsg_triangle_equal@min+2)& (0+255),b
 13608   0058C0  0EC1               	movlw	193
 13609   0058C2  6F67               	movwf	(MF_xfsg_triangle_equal@min+3)& (0+255),b
 13610   0058C4  0E00               	movlw	0
 13611   0058C6  6F68               	movwf	MF_xfsg_triangle_equal@max& (0+255),b
 13612   0058C8  0E00               	movlw	0
 13613   0058CA  6F69               	movwf	(MF_xfsg_triangle_equal@max+1)& (0+255),b
 13614   0058CC  0E00               	movlw	0
 13615   0058CE  6F6A               	movwf	(MF_xfsg_triangle_equal@max+2)& (0+255),b
 13616   0058D0  0E41               	movlw	65
 13617   0058D2  6F6B               	movwf	(MF_xfsg_triangle_equal@max+3)& (0+255),b
 13618   0058D4  0E81               	movlw	129
 13619   0058D6  6F6C               	movwf	MF_xfsg_triangle_equal@step& (0+255),b
 13620   0058D8  0E80               	movlw	128
 13621   0058DA  6F6D               	movwf	(MF_xfsg_triangle_equal@step+1)& (0+255),b
 13622   0058DC  0E80               	movlw	128
 13623   0058DE  6F6E               	movwf	(MF_xfsg_triangle_equal@step+2)& (0+255),b
 13624   0058E0  0E3D               	movlw	61
 13625   0058E2  6F6F               	movwf	(MF_xfsg_triangle_equal@step+3)& (0+255),b
 13626   0058E4  0E00               	movlw	0
 13627   0058E6  6F70               	movwf	MF_xfsg_triangle_equal@a& (0+255),b
 13628   0058E8  0E00               	movlw	0
 13629   0058EA  6F71               	movwf	(MF_xfsg_triangle_equal@a+1)& (0+255),b
 13630   0058EC  0E00               	movlw	0
 13631   0058EE  6F72               	movwf	(MF_xfsg_triangle_equal@a+2)& (0+255),b
 13632   0058F0  0EC1               	movlw	193
 13633   0058F2  6F73               	movwf	(MF_xfsg_triangle_equal@a+3)& (0+255),b
 13634   0058F4  0E00               	movlw	0
 13635   0058F6  6F74               	movwf	MF_xfsg_triangle_equal@b& (0+255),b
 13636   0058F8  0E00               	movlw	0
 13637   0058FA  6F75               	movwf	(MF_xfsg_triangle_equal@b+1)& (0+255),b
 13638   0058FC  0EC0               	movlw	192
 13639   0058FE  6F76               	movwf	(MF_xfsg_triangle_equal@b+2)& (0+255),b
 13640   005900  0EC0               	movlw	192
 13641   005902  6F77               	movwf	(MF_xfsg_triangle_equal@b+3)& (0+255),b
 13642   005904  0E00               	movlw	0
 13643   005906  6F78               	movwf	MF_xfsg_triangle_equal@c& (0+255),b
 13644   005908  0E00               	movlw	0
 13645   00590A  6F79               	movwf	(MF_xfsg_triangle_equal@c+1)& (0+255),b
 13646   00590C  0E80               	movlw	128
 13647   00590E  6F7A               	movwf	(MF_xfsg_triangle_equal@c+2)& (0+255),b
 13648   005910  0EC0               	movlw	192
 13649   005912  6F7B               	movwf	(MF_xfsg_triangle_equal@c+3)& (0+255),b
 13650   005914  ECBF  F020         	call	_MF_xfsg_triangle_equal	;wreg free
 13651   005918  C060  F07C         	movff	?_MF_xfsg_triangle_equal,?_TP_CambioError_ceNG_equal
 13652   00591C  C061  F07D         	movff	?_MF_xfsg_triangle_equal+1,?_TP_CambioError_ceNG_equal+1
 13653   005920  C062  F07E         	movff	?_MF_xfsg_triangle_equal+2,?_TP_CambioError_ceNG_equal+2
 13654   005924  C063  F07F         	movff	?_MF_xfsg_triangle_equal+3,?_TP_CambioError_ceNG_equal+3
 13655   005928  0012               	return		;funcret
 13656   00592A                     __end_of_TP_CambioError_ceNG_equal:
 13657                           	callstack 0
 13658                           
 13659 ;; *************** function _MF_xfsg_triangle_equal *****************
 13660 ;; Defined at:
 13661 ;;		line 21 in file "lib_pic/Control_velocidad_difuso.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;  x               4    0[BANK0 ] void 
 13664 ;;  min             4    4[BANK0 ] void 
 13665 ;;  max             4    8[BANK0 ] void 
 13666 ;;  step            4   12[BANK0 ] void 
 13667 ;;  a               4   16[BANK0 ] void 
 13668 ;;  b               4   20[BANK0 ] void 
 13669 ;;  c               4   24[BANK0 ] void 
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  4    0[BANK0 ] void 
 13674 ;; Registers used:
 13675 ;;		wreg, status,2, status,0, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13681 ;;      Params:         0      28       0       0       0       0       0       0       0
 13682 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13684 ;;      Totals:         4      28       0       0       0       0       0       0       0
 13685 ;;Total ram usage:       32 bytes
 13686 ;; Hardware stack levels used: 1
 13687 ;; Hardware stack levels required when called: 4
 13688 ;; This function calls:
 13689 ;;		___fldiv
 13690 ;;		___flge
 13691 ;;		___flsub
 13692 ;; This function is called by:
 13693 ;;		_TP_error_eNG_equal
 13694 ;;		_TP_error_eNM_equal
 13695 ;;		_TP_error_eNP_equal
 13696 ;;		_TP_error_eZ_equal
 13697 ;;		_TP_error_ePP_equal
 13698 ;;		_TP_error_ePM_equal
 13699 ;;		_TP_error_ePG_equal
 13700 ;;		_TP_CambioError_ceNG_equal
 13701 ;;		_TP_CambioError_ceNM_equal
 13702 ;;		_TP_CambioError_ceNP_equal
 13703 ;;		_TP_CambioError_ceZ_equal
 13704 ;;		_TP_CambioError_cePP_equal
 13705 ;;		_TP_CambioError_cePM_equal
 13706 ;;		_TP_CambioError_cePG_equal
 13707 ;;		_TP_salida_sNG_equal
 13708 ;;		_TP_salida_sNM_equal
 13709 ;;		_TP_salida_sNP_equal
 13710 ;;		_TP_salida_sZ_equal
 13711 ;;		_TP_salida_sPP_equal
 13712 ;;		_TP_salida_sPM_equal
 13713 ;;		_TP_salida_sPG_equal
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text67
 13718   00417E                     __ptext67:
 13719                           	callstack 0
 13720   00417E                     _MF_xfsg_triangle_equal:
 13721                           	callstack 23
 13722   00417E                     
 13723                           ;lib_pic/Control_velocidad_difuso.c: 22:     return (a<x && x<=b? (x-a)/(b-a) : (b<x && 
      +                          x<c? (c-x)/(c-b) : 0));
 13724   00417E  C070  F01E         	movff	MF_xfsg_triangle_equal@a,___flge@ff1
 13725   004182  C071  F01F         	movff	MF_xfsg_triangle_equal@a+1,___flge@ff1+1
 13726   004186  C072  F020         	movff	MF_xfsg_triangle_equal@a+2,___flge@ff1+2
 13727   00418A  C073  F021         	movff	MF_xfsg_triangle_equal@a+3,___flge@ff1+3
 13728   00418E  C060  F022         	movff	MF_xfsg_triangle_equal@x,___flge@ff2
 13729   004192  C061  F023         	movff	MF_xfsg_triangle_equal@x+1,___flge@ff2+1
 13730   004196  C062  F024         	movff	MF_xfsg_triangle_equal@x+2,___flge@ff2+2
 13731   00419A  C063  F025         	movff	MF_xfsg_triangle_equal@x+3,___flge@ff2+3
 13732   00419E  EC7F  F024         	call	___flge	;wreg free
 13733   0041A2  B0D8               	btfsc	status,0,c
 13734   0041A4  EFD6  F020         	goto	u4591
 13735   0041A8  EFD8  F020         	goto	u4590
 13736   0041AC                     u4591:
 13737   0041AC  EFF1  F020         	goto	l5172
 13738   0041B0                     u4590:
 13739   0041B0  C074  F01E         	movff	MF_xfsg_triangle_equal@b,___flge@ff1
 13740   0041B4  C075  F01F         	movff	MF_xfsg_triangle_equal@b+1,___flge@ff1+1
 13741   0041B8  C076  F020         	movff	MF_xfsg_triangle_equal@b+2,___flge@ff1+2
 13742   0041BC  C077  F021         	movff	MF_xfsg_triangle_equal@b+3,___flge@ff1+3
 13743   0041C0  C060  F022         	movff	MF_xfsg_triangle_equal@x,___flge@ff2
 13744   0041C4  C061  F023         	movff	MF_xfsg_triangle_equal@x+1,___flge@ff2+1
 13745   0041C8  C062  F024         	movff	MF_xfsg_triangle_equal@x+2,___flge@ff2+2
 13746   0041CC  C063  F025         	movff	MF_xfsg_triangle_equal@x+3,___flge@ff2+3
 13747   0041D0  EC7F  F024         	call	___flge	;wreg free
 13748   0041D4  B0D8               	btfsc	status,0,c
 13749   0041D6  EFEF  F020         	goto	u4601
 13750   0041DA  EFF1  F020         	goto	u4600
 13751   0041DE                     u4601:
 13752   0041DE  EF75  F021         	goto	l5182
 13753   0041E2                     u4600:
 13754   0041E2                     l5172:
 13755   0041E2  C074  F01E         	movff	MF_xfsg_triangle_equal@b,___flge@ff1
 13756   0041E6  C075  F01F         	movff	MF_xfsg_triangle_equal@b+1,___flge@ff1+1
 13757   0041EA  C076  F020         	movff	MF_xfsg_triangle_equal@b+2,___flge@ff1+2
 13758   0041EE  C077  F021         	movff	MF_xfsg_triangle_equal@b+3,___flge@ff1+3
 13759   0041F2  C060  F022         	movff	MF_xfsg_triangle_equal@x,___flge@ff2
 13760   0041F6  C061  F023         	movff	MF_xfsg_triangle_equal@x+1,___flge@ff2+1
 13761   0041FA  C062  F024         	movff	MF_xfsg_triangle_equal@x+2,___flge@ff2+2
 13762   0041FE  C063  F025         	movff	MF_xfsg_triangle_equal@x+3,___flge@ff2+3
 13763   004202  EC7F  F024         	call	___flge	;wreg free
 13764   004206  B0D8               	btfsc	status,0,c
 13765   004208  EF08  F021         	goto	u4611
 13766   00420C  EF0A  F021         	goto	u4610
 13767   004210                     u4611:
 13768   004210  EF23  F021         	goto	l5176
 13769   004214                     u4610:
 13770   004214  C060  F01E         	movff	MF_xfsg_triangle_equal@x,___flge@ff1
 13771   004218  C061  F01F         	movff	MF_xfsg_triangle_equal@x+1,___flge@ff1+1
 13772   00421C  C062  F020         	movff	MF_xfsg_triangle_equal@x+2,___flge@ff1+2
 13773   004220  C063  F021         	movff	MF_xfsg_triangle_equal@x+3,___flge@ff1+3
 13774   004224  C078  F022         	movff	MF_xfsg_triangle_equal@c,___flge@ff2
 13775   004228  C079  F023         	movff	MF_xfsg_triangle_equal@c+1,___flge@ff2+1
 13776   00422C  C07A  F024         	movff	MF_xfsg_triangle_equal@c+2,___flge@ff2+2
 13777   004230  C07B  F025         	movff	MF_xfsg_triangle_equal@c+3,___flge@ff2+3
 13778   004234  EC7F  F024         	call	___flge	;wreg free
 13779   004238  A0D8               	btfss	status,0,c
 13780   00423A  EF21  F021         	goto	u4621
 13781   00423E  EF23  F021         	goto	u4620
 13782   004242                     u4621:
 13783   004242  EF2D  F021         	goto	l5178
 13784   004246                     u4620:
 13785   004246                     l5176:
 13786   004246  0E00               	movlw	0
 13787   004248  6E4F               	movwf	_MF_xfsg_triangle_equal$496^0,c
 13788   00424A  0E00               	movlw	0
 13789   00424C  6E50               	movwf	(_MF_xfsg_triangle_equal$496+1)^0,c
 13790   00424E  0E00               	movlw	0
 13791   004250  6E51               	movwf	(_MF_xfsg_triangle_equal$496+2)^0,c
 13792   004252  0E00               	movlw	0
 13793   004254  6E52               	movwf	(_MF_xfsg_triangle_equal$496+3)^0,c
 13794   004256  EF6B  F021         	goto	l5180
 13795   00425A                     l5178:
 13796   00425A  C060  F032         	movff	MF_xfsg_triangle_equal@x,___flsub@a
 13797   00425E  C061  F033         	movff	MF_xfsg_triangle_equal@x+1,___flsub@a+1
 13798   004262  C062  F034         	movff	MF_xfsg_triangle_equal@x+2,___flsub@a+2
 13799   004266  C063  F035         	movff	MF_xfsg_triangle_equal@x+3,___flsub@a+3
 13800   00426A  C078  F02E         	movff	MF_xfsg_triangle_equal@c,___flsub@b
 13801   00426E  C079  F02F         	movff	MF_xfsg_triangle_equal@c+1,___flsub@b+1
 13802   004272  C07A  F030         	movff	MF_xfsg_triangle_equal@c+2,___flsub@b+2
 13803   004276  C07B  F031         	movff	MF_xfsg_triangle_equal@c+3,___flsub@b+3
 13804   00427A  EC55  F02F         	call	___flsub	;wreg free
 13805   00427E  C02E  F036         	movff	?___flsub,___fldiv@b
 13806   004282  C02F  F037         	movff	?___flsub+1,___fldiv@b+1
 13807   004286  C030  F038         	movff	?___flsub+2,___fldiv@b+2
 13808   00428A  C031  F039         	movff	?___flsub+3,___fldiv@b+3
 13809   00428E  C074  F032         	movff	MF_xfsg_triangle_equal@b,___flsub@a
 13810   004292  C075  F033         	movff	MF_xfsg_triangle_equal@b+1,___flsub@a+1
 13811   004296  C076  F034         	movff	MF_xfsg_triangle_equal@b+2,___flsub@a+2
 13812   00429A  C077  F035         	movff	MF_xfsg_triangle_equal@b+3,___flsub@a+3
 13813   00429E  C078  F02E         	movff	MF_xfsg_triangle_equal@c,___flsub@b
 13814   0042A2  C079  F02F         	movff	MF_xfsg_triangle_equal@c+1,___flsub@b+1
 13815   0042A6  C07A  F030         	movff	MF_xfsg_triangle_equal@c+2,___flsub@b+2
 13816   0042AA  C07B  F031         	movff	MF_xfsg_triangle_equal@c+3,___flsub@b+3
 13817   0042AE  EC55  F02F         	call	___flsub	;wreg free
 13818   0042B2  C02E  F03A         	movff	?___flsub,___fldiv@a
 13819   0042B6  C02F  F03B         	movff	?___flsub+1,___fldiv@a+1
 13820   0042BA  C030  F03C         	movff	?___flsub+2,___fldiv@a+2
 13821   0042BE  C031  F03D         	movff	?___flsub+3,___fldiv@a+3
 13822   0042C2  ECD1  F01A         	call	___fldiv	;wreg free
 13823   0042C6  C036  F04F         	movff	?___fldiv,_MF_xfsg_triangle_equal$496
 13824   0042CA  C037  F050         	movff	?___fldiv+1,_MF_xfsg_triangle_equal$496+1
 13825   0042CE  C038  F051         	movff	?___fldiv+2,_MF_xfsg_triangle_equal$496+2
 13826   0042D2  C039  F052         	movff	?___fldiv+3,_MF_xfsg_triangle_equal$496+3
 13827   0042D6                     l5180:
 13828   0042D6  C04F  F060         	movff	_MF_xfsg_triangle_equal$496,?_MF_xfsg_triangle_equal
 13829   0042DA  C050  F061         	movff	_MF_xfsg_triangle_equal$496+1,?_MF_xfsg_triangle_equal+1
 13830   0042DE  C051  F062         	movff	_MF_xfsg_triangle_equal$496+2,?_MF_xfsg_triangle_equal+2
 13831   0042E2  C052  F063         	movff	_MF_xfsg_triangle_equal$496+3,?_MF_xfsg_triangle_equal+3
 13832   0042E6  EFB3  F021         	goto	l205
 13833   0042EA                     l5182:
 13834   0042EA  C070  F032         	movff	MF_xfsg_triangle_equal@a,___flsub@a
 13835   0042EE  C071  F033         	movff	MF_xfsg_triangle_equal@a+1,___flsub@a+1
 13836   0042F2  C072  F034         	movff	MF_xfsg_triangle_equal@a+2,___flsub@a+2
 13837   0042F6  C073  F035         	movff	MF_xfsg_triangle_equal@a+3,___flsub@a+3
 13838   0042FA  C060  F02E         	movff	MF_xfsg_triangle_equal@x,___flsub@b
 13839   0042FE  C061  F02F         	movff	MF_xfsg_triangle_equal@x+1,___flsub@b+1
 13840   004302  C062  F030         	movff	MF_xfsg_triangle_equal@x+2,___flsub@b+2
 13841   004306  C063  F031         	movff	MF_xfsg_triangle_equal@x+3,___flsub@b+3
 13842   00430A  EC55  F02F         	call	___flsub	;wreg free
 13843   00430E  C02E  F036         	movff	?___flsub,___fldiv@b
 13844   004312  C02F  F037         	movff	?___flsub+1,___fldiv@b+1
 13845   004316  C030  F038         	movff	?___flsub+2,___fldiv@b+2
 13846   00431A  C031  F039         	movff	?___flsub+3,___fldiv@b+3
 13847   00431E  C070  F032         	movff	MF_xfsg_triangle_equal@a,___flsub@a
 13848   004322  C071  F033         	movff	MF_xfsg_triangle_equal@a+1,___flsub@a+1
 13849   004326  C072  F034         	movff	MF_xfsg_triangle_equal@a+2,___flsub@a+2
 13850   00432A  C073  F035         	movff	MF_xfsg_triangle_equal@a+3,___flsub@a+3
 13851   00432E  C074  F02E         	movff	MF_xfsg_triangle_equal@b,___flsub@b
 13852   004332  C075  F02F         	movff	MF_xfsg_triangle_equal@b+1,___flsub@b+1
 13853   004336  C076  F030         	movff	MF_xfsg_triangle_equal@b+2,___flsub@b+2
 13854   00433A  C077  F031         	movff	MF_xfsg_triangle_equal@b+3,___flsub@b+3
 13855   00433E  EC55  F02F         	call	___flsub	;wreg free
 13856   004342  C02E  F03A         	movff	?___flsub,___fldiv@a
 13857   004346  C02F  F03B         	movff	?___flsub+1,___fldiv@a+1
 13858   00434A  C030  F03C         	movff	?___flsub+2,___fldiv@a+2
 13859   00434E  C031  F03D         	movff	?___flsub+3,___fldiv@a+3
 13860   004352  ECD1  F01A         	call	___fldiv	;wreg free
 13861   004356  C036  F060         	movff	?___fldiv,?_MF_xfsg_triangle_equal
 13862   00435A  C037  F061         	movff	?___fldiv+1,?_MF_xfsg_triangle_equal+1
 13863   00435E  C038  F062         	movff	?___fldiv+2,?_MF_xfsg_triangle_equal+2
 13864   004362  C039  F063         	movff	?___fldiv+3,?_MF_xfsg_triangle_equal+3
 13865   004366                     l205:
 13866   004366  0012               	return		;funcret
 13867   004368                     __end_of_MF_xfsg_triangle_equal:
 13868                           	callstack 0
 13869                           
 13870 ;; *************** function ___flsub *****************
 13871 ;; Defined at:
 13872 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  b               4   45[COMRAM] void 
 13875 ;;  a               4   49[COMRAM] void 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  4   45[COMRAM] void 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2, status,0, cstack
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13887 ;;      Params:         8       0       0       0       0       0       0       0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13890 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13891 ;;Total ram usage:        8 bytes
 13892 ;; Hardware stack levels used: 1
 13893 ;; Hardware stack levels required when called: 3
 13894 ;; This function calls:
 13895 ;;		___fladd
 13896 ;; This function is called by:
 13897 ;;		_MF_xfsg_triangle_equal
 13898 ;;		_main
 13899 ;;		_efgtoa
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text68
 13904   005EAA                     __ptext68:
 13905                           	callstack 0
 13906   005EAA                     ___flsub:
 13907                           	callstack 23
 13908   005EAA  0E00               	movlw	0
 13909   005EAC  1A32               	xorwf	___flsub@a^0,f,c
 13910   005EAE  0E00               	movlw	0
 13911   005EB0  1A33               	xorwf	(___flsub@a+1)^0,f,c
 13912   005EB2  0E00               	movlw	0
 13913   005EB4  1A34               	xorwf	(___flsub@a+2)^0,f,c
 13914   005EB6  0E80               	movlw	128
 13915   005EB8  1A35               	xorwf	(___flsub@a+3)^0,f,c
 13916   005EBA  C02E  F01E         	movff	___flsub@b,___fladd@b
 13917   005EBE  C02F  F01F         	movff	___flsub@b+1,___fladd@b+1
 13918   005EC2  C030  F020         	movff	___flsub@b+2,___fladd@b+2
 13919   005EC6  C031  F021         	movff	___flsub@b+3,___fladd@b+3
 13920   005ECA  C032  F022         	movff	___flsub@a,___fladd@a
 13921   005ECE  C033  F023         	movff	___flsub@a+1,___fladd@a+1
 13922   005ED2  C034  F024         	movff	___flsub@a+2,___fladd@a+2
 13923   005ED6  C035  F025         	movff	___flsub@a+3,___fladd@a+3
 13924   005EDA  EC5C  F016         	call	___fladd	;wreg free
 13925   005EDE  C01E  F02E         	movff	?___fladd,?___flsub
 13926   005EE2  C01F  F02F         	movff	?___fladd+1,?___flsub+1
 13927   005EE6  C020  F030         	movff	?___fladd+2,?___flsub+2
 13928   005EEA  C021  F031         	movff	?___fladd+3,?___flsub+3
 13929   005EEE  0012               	return		;funcret
 13930   005EF0                     __end_of___flsub:
 13931                           	callstack 0
 13932                           
 13933 ;; *************** function _OP_operador_Or *****************
 13934 ;; Defined at:
 13935 ;;		line 43 in file "lib_pic/Control_velocidad_difuso.c"
 13936 ;; Parameters:    Size  Location     Type
 13937 ;;  a               4   49[COMRAM] void 
 13938 ;;  b               4   53[COMRAM] void 
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;		None
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  4   49[COMRAM] void 
 13943 ;; Registers used:
 13944 ;;		wreg, status,2, status,0, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13950 ;;      Params:         8       0       0       0       0       0       0       0       0
 13951 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13953 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13954 ;;Total ram usage:        8 bytes
 13955 ;; Hardware stack levels used: 1
 13956 ;; Hardware stack levels required when called: 3
 13957 ;; This function calls:
 13958 ;;		___flge
 13959 ;; This function is called by:
 13960 ;;		_RL_reglas_controlador
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text69
 13965   005C78                     __ptext69:
 13966                           	callstack 0
 13967   005C78                     _OP_operador_Or:
 13968                           	callstack 25
 13969   005C78                     
 13970                           ;lib_pic/Control_velocidad_difuso.c: 44:     return (a>b? a : b);
 13971   005C78  C036  F01E         	movff	OP_operador_Or@b,___flge@ff1
 13972   005C7C  C037  F01F         	movff	OP_operador_Or@b+1,___flge@ff1+1
 13973   005C80  C038  F020         	movff	OP_operador_Or@b+2,___flge@ff1+2
 13974   005C84  C039  F021         	movff	OP_operador_Or@b+3,___flge@ff1+3
 13975   005C88  C032  F022         	movff	OP_operador_Or@a,___flge@ff2
 13976   005C8C  C033  F023         	movff	OP_operador_Or@a+1,___flge@ff2+1
 13977   005C90  C034  F024         	movff	OP_operador_Or@a+2,___flge@ff2+2
 13978   005C94  C035  F025         	movff	OP_operador_Or@a+3,___flge@ff2+3
 13979   005C98  EC7F  F024         	call	___flge	;wreg free
 13980   005C9C  A0D8               	btfss	status,0,c
 13981   005C9E  EF53  F02E         	goto	u4741
 13982   005CA2  EF55  F02E         	goto	u4740
 13983   005CA6                     u4741:
 13984   005CA6  EF5F  F02E         	goto	l216
 13985   005CAA                     u4740:
 13986   005CAA  C036  F032         	movff	OP_operador_Or@b,?_OP_operador_Or
 13987   005CAE  C037  F033         	movff	OP_operador_Or@b+1,?_OP_operador_Or+1
 13988   005CB2  C038  F034         	movff	OP_operador_Or@b+2,?_OP_operador_Or+2
 13989   005CB6  C039  F035         	movff	OP_operador_Or@b+3,?_OP_operador_Or+3
 13990   005CBA  EF67  F02E         	goto	l219
 13991   005CBE                     l216:
 13992   005CBE  C032  F032         	movff	OP_operador_Or@a,?_OP_operador_Or
 13993   005CC2  C033  F033         	movff	OP_operador_Or@a+1,?_OP_operador_Or+1
 13994   005CC6  C034  F034         	movff	OP_operador_Or@a+2,?_OP_operador_Or+2
 13995   005CCA  C035  F035         	movff	OP_operador_Or@a+3,?_OP_operador_Or+3
 13996   005CCE                     l219:
 13997   005CCE  0012               	return		;funcret
 13998   005CD0                     __end_of_OP_operador_Or:
 13999                           	callstack 0
 14000                           
 14001 ;; *************** function _OP_operador_Defuz *****************
 14002 ;; Defined at:
 14003 ;;		line 52 in file "lib_pic/Control_velocidad_difuso.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  mf             26    0[BANK0 ] struct .
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  denom           4   38[BANK0 ] struct .
 14008 ;;  num             4   34[BANK0 ] struct .
 14009 ;;  max             4   30[BANK0 ] struct .
 14010 ;;  min             4   26[BANK0 ] struct .
 14011 ;;  i               2   42[BANK0 ] int 
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  4    0[BANK0 ] int 
 14014 ;; Registers used:
 14015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14016 ;; Tracked objects:
 14017 ;;		On entry : 0/0
 14018 ;;		On exit  : 0/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14021 ;;      Params:         0      26       0       0       0       0       0       0       0
 14022 ;;      Locals:         0      18       0       0       0       0       0       0       0
 14023 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14024 ;;      Totals:         4      44       0       0       0       0       0       0       0
 14025 ;;Total ram usage:       48 bytes
 14026 ;; Hardware stack levels used: 1
 14027 ;; Hardware stack levels required when called: 3
 14028 ;; This function calls:
 14029 ;;		_TP_salida_sNG_center
 14030 ;;		_TP_salida_sNM_center
 14031 ;;		_TP_salida_sNP_center
 14032 ;;		_TP_salida_sPG_center
 14033 ;;		_TP_salida_sPM_center
 14034 ;;		_TP_salida_sPP_center
 14035 ;;		_TP_salida_sZ_center
 14036 ;;		___fladd
 14037 ;;		___fldiv
 14038 ;;		___fleq
 14039 ;;		___flmul
 14040 ;; This function is called by:
 14041 ;;		_RL_reglas_controlador
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text70
 14046   00393C                     __ptext70:
 14047                           	callstack 0
 14048   00393C                     _OP_operador_Defuz:
 14049                           	callstack 25
 14050   00393C                     
 14051                           ;lib_pic/Control_velocidad_difuso.c: 53:  double min = mf.min;
 14052   00393C  C060  F07A         	movff	OP_operador_Defuz@mf,OP_operador_Defuz@min
 14053   003940  C061  F07B         	movff	OP_operador_Defuz@mf+1,OP_operador_Defuz@min+1
 14054   003944  C062  F07C         	movff	OP_operador_Defuz@mf+2,OP_operador_Defuz@min+2
 14055   003948  C063  F07D         	movff	OP_operador_Defuz@mf+3,OP_operador_Defuz@min+3
 14056                           
 14057                           ;lib_pic/Control_velocidad_difuso.c: 54:  double max = mf.max;
 14058   00394C  C064  F07E         	movff	OP_operador_Defuz@mf+4,OP_operador_Defuz@max
 14059   003950  C065  F07F         	movff	OP_operador_Defuz@mf+5,OP_operador_Defuz@max+1
 14060   003954  C066  F080         	movff	OP_operador_Defuz@mf+6,OP_operador_Defuz@max+2
 14061   003958  C067  F081         	movff	OP_operador_Defuz@mf+7,OP_operador_Defuz@max+3
 14062   00395C                     
 14063                           ;lib_pic/Control_velocidad_difuso.c: 55:      double num=0, denom=0;
 14064   00395C  0E00               	movlw	0
 14065   00395E  0100               	movlb	0	; () banked
 14066   003960  6F82               	movwf	OP_operador_Defuz@num& (0+255),b
 14067   003962  0E00               	movlw	0
 14068   003964  6F83               	movwf	(OP_operador_Defuz@num+1)& (0+255),b
 14069   003966  0E00               	movlw	0
 14070   003968  6F84               	movwf	(OP_operador_Defuz@num+2)& (0+255),b
 14071   00396A  0E00               	movlw	0
 14072   00396C  6F85               	movwf	(OP_operador_Defuz@num+3)& (0+255),b
 14073   00396E  0E00               	movlw	0
 14074   003970  6F86               	movwf	OP_operador_Defuz@denom& (0+255),b
 14075   003972  0E00               	movlw	0
 14076   003974  6F87               	movwf	(OP_operador_Defuz@denom+1)& (0+255),b
 14077   003976  0E00               	movlw	0
 14078   003978  6F88               	movwf	(OP_operador_Defuz@denom+2)& (0+255),b
 14079   00397A  0E00               	movlw	0
 14080   00397C  6F89               	movwf	(OP_operador_Defuz@denom+3)& (0+255),b
 14081                           
 14082                           ;lib_pic/Control_velocidad_difuso.c: 56:      int i;;lib_pic/Control_velocidad_difuso.c:
      +                           57:      for(i=0; i<mf.length; i++) {
 14083   00397E  0E00               	movlw	0
 14084   003980  6F8B               	movwf	(OP_operador_Defuz@i+1)& (0+255),b
 14085   003982  0E00               	movlw	0
 14086   003984  6F8A               	movwf	OP_operador_Defuz@i& (0+255),b
 14087   003986  EF4D  F01D         	goto	l5404
 14088   00398A                     l5398:
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;lib_pic/Control_velocidad_difuso.c: 58:       num += mf.degree[i] * mf.conc[i].center()
      +                          ;
 14092   00398A  C082  F01E         	movff	OP_operador_Defuz@num,___fladd@b
 14093   00398E  C083  F01F         	movff	OP_operador_Defuz@num+1,___fladd@b+1
 14094   003992  C084  F020         	movff	OP_operador_Defuz@num+2,___fladd@b+2
 14095   003996  C085  F021         	movff	OP_operador_Defuz@num+3,___fladd@b+3
 14096   00399A  90D8               	bcf	status,0,c
 14097   00399C  358A               	rlcf	OP_operador_Defuz@i& (0+255),w,b
 14098   00399E  6ED9               	movwf	fsr2l,c
 14099   0039A0  358B               	rlcf	(OP_operador_Defuz@i+1)& (0+255),w,b
 14100   0039A2  6EDA               	movwf	fsr2h,c
 14101   0039A4  90D8               	bcf	status,0,c
 14102   0039A6  36D9               	rlcf	fsr2l,f,c
 14103   0039A8  36DA               	rlcf	fsr2h,f,c
 14104   0039AA  5172               	movf	(OP_operador_Defuz@mf+18)& (0+255),w,b
 14105   0039AC  26D9               	addwf	fsr2l,f,c
 14106   0039AE  5173               	movf	(OP_operador_Defuz@mf+19)& (0+255),w,b
 14107   0039B0  22DA               	addwfc	fsr2h,f,c
 14108   0039B2  CFDE F009          	movff	postinc2,___flmul@a
 14109   0039B6  CFDE F00A          	movff	postinc2,___flmul@a+1
 14110   0039BA  CFDE F00B          	movff	postinc2,___flmul@a+2
 14111   0039BE  CFDE F00C          	movff	postinc2,___flmul@a+3
 14112   0039C2  C08A  F04F         	movff	OP_operador_Defuz@i,??_OP_operador_Defuz
 14113   0039C6  C08B  F050         	movff	OP_operador_Defuz@i+1,??_OP_operador_Defuz+1
 14114   0039CA  90D8               	bcf	status,0,c
 14115   0039CC  364F               	rlcf	??_OP_operador_Defuz^0,f,c
 14116   0039CE  3650               	rlcf	(??_OP_operador_Defuz+1)^0,f,c
 14117   0039D0  90D8               	bcf	status,0,c
 14118   0039D2  364F               	rlcf	??_OP_operador_Defuz^0,f,c
 14119   0039D4  3650               	rlcf	(??_OP_operador_Defuz+1)^0,f,c
 14120   0039D6  90D8               	bcf	status,0,c
 14121   0039D8  364F               	rlcf	??_OP_operador_Defuz^0,f,c
 14122   0039DA  3650               	rlcf	(??_OP_operador_Defuz+1)^0,f,c
 14123   0039DC  504F               	movf	??_OP_operador_Defuz^0,w,c
 14124   0039DE  2578               	addwf	(OP_operador_Defuz@mf+24)& (0+255),w,b
 14125   0039E0  6E51               	movwf	(??_OP_operador_Defuz+2)^0,c
 14126   0039E2  5050               	movf	(??_OP_operador_Defuz+1)^0,w,c
 14127   0039E4  2179               	addwfc	(OP_operador_Defuz@mf+25)& (0+255),w,b
 14128   0039E6  6E52               	movwf	(??_OP_operador_Defuz+3)^0,c
 14129   0039E8  0E02               	movlw	2
 14130   0039EA  2451               	addwf	(??_OP_operador_Defuz+2)^0,w,c
 14131   0039EC  6ED9               	movwf	fsr2l,c
 14132   0039EE  0E00               	movlw	0
 14133   0039F0  2052               	addwfc	(??_OP_operador_Defuz+3)^0,w,c
 14134   0039F2  6EDA               	movwf	fsr2h,c
 14135   0039F4  D802               	call	u4758
 14136   0039F6  EF07  F01D         	goto	u4759
 14137   0039FA                     u4758:
 14138   0039FA  0005               	push	
 14139   0039FC  6EFA               	movwf	pclath,c
 14140   0039FE  50DE               	movf	postinc2,w,c
 14141   003A00  6EFD               	movwf	tosl,c
 14142   003A02  50DE               	movf	postinc2,w,c
 14143   003A04  6EFE               	movwf	tosh,c
 14144   003A06  50F8               	movf	tblptru,w,c
 14145   003A08  6EFF               	movwf	tosu,c
 14146   003A0A  50FA               	movf	pclath,w,c
 14147   003A0C  0012               	return		;indir
 14148   003A0E                     u4759:
 14149   003A0E  C001  F005         	movff	?_TP_salida_sPG_center,___flmul@b
 14150   003A12  C002  F006         	movff	?_TP_salida_sPG_center+1,___flmul@b+1
 14151   003A16  C003  F007         	movff	?_TP_salida_sPG_center+2,___flmul@b+2
 14152   003A1A  C004  F008         	movff	?_TP_salida_sPG_center+3,___flmul@b+3
 14153   003A1E  ECBC  F018         	call	___flmul	;wreg free
 14154   003A22  C005  F022         	movff	?___flmul,___fladd@a
 14155   003A26  C006  F023         	movff	?___flmul+1,___fladd@a+1
 14156   003A2A  C007  F024         	movff	?___flmul+2,___fladd@a+2
 14157   003A2E  C008  F025         	movff	?___flmul+3,___fladd@a+3
 14158   003A32  EC5C  F016         	call	___fladd	;wreg free
 14159   003A36  C01E  F082         	movff	?___fladd,OP_operador_Defuz@num
 14160   003A3A  C01F  F083         	movff	?___fladd+1,OP_operador_Defuz@num+1
 14161   003A3E  C020  F084         	movff	?___fladd+2,OP_operador_Defuz@num+2
 14162   003A42  C021  F085         	movff	?___fladd+3,OP_operador_Defuz@num+3
 14163   003A46                     
 14164                           ;lib_pic/Control_velocidad_difuso.c: 59:       denom += mf.degree[i];
 14165   003A46  C086  F01E         	movff	OP_operador_Defuz@denom,___fladd@b
 14166   003A4A  C087  F01F         	movff	OP_operador_Defuz@denom+1,___fladd@b+1
 14167   003A4E  C088  F020         	movff	OP_operador_Defuz@denom+2,___fladd@b+2
 14168   003A52  C089  F021         	movff	OP_operador_Defuz@denom+3,___fladd@b+3
 14169   003A56  90D8               	bcf	status,0,c
 14170   003A58  0100               	movlb	0	; () banked
 14171   003A5A  358A               	rlcf	OP_operador_Defuz@i& (0+255),w,b
 14172   003A5C  6ED9               	movwf	fsr2l,c
 14173   003A5E  358B               	rlcf	(OP_operador_Defuz@i+1)& (0+255),w,b
 14174   003A60  6EDA               	movwf	fsr2h,c
 14175   003A62  90D8               	bcf	status,0,c
 14176   003A64  36D9               	rlcf	fsr2l,f,c
 14177   003A66  36DA               	rlcf	fsr2h,f,c
 14178   003A68  5172               	movf	(OP_operador_Defuz@mf+18)& (0+255),w,b
 14179   003A6A  26D9               	addwf	fsr2l,f,c
 14180   003A6C  5173               	movf	(OP_operador_Defuz@mf+19)& (0+255),w,b
 14181   003A6E  22DA               	addwfc	fsr2h,f,c
 14182   003A70  CFDE F022          	movff	postinc2,___fladd@a
 14183   003A74  CFDE F023          	movff	postinc2,___fladd@a+1
 14184   003A78  CFDE F024          	movff	postinc2,___fladd@a+2
 14185   003A7C  CFDE F025          	movff	postinc2,___fladd@a+3
 14186   003A80  EC5C  F016         	call	___fladd	;wreg free
 14187   003A84  C01E  F086         	movff	?___fladd,OP_operador_Defuz@denom
 14188   003A88  C01F  F087         	movff	?___fladd+1,OP_operador_Defuz@denom+1
 14189   003A8C  C020  F088         	movff	?___fladd+2,OP_operador_Defuz@denom+2
 14190   003A90  C021  F089         	movff	?___fladd+3,OP_operador_Defuz@denom+3
 14191   003A94                     
 14192                           ;lib_pic/Control_velocidad_difuso.c: 60:      }
 14193   003A94  0100               	movlb	0	; () banked
 14194   003A96  4B8A               	infsnz	OP_operador_Defuz@i& (0+255),f,b
 14195   003A98  2B8B               	incf	(OP_operador_Defuz@i+1)& (0+255),f,b
 14196   003A9A                     l5404:
 14197                           
 14198                           ; BSR set to: 0
 14199   003A9A  5170               	movf	(OP_operador_Defuz@mf+16)& (0+255),w,b
 14200   003A9C  5D8A               	subwf	OP_operador_Defuz@i& (0+255),w,b
 14201   003A9E  518B               	movf	(OP_operador_Defuz@i+1)& (0+255),w,b
 14202   003AA0  0A80               	xorlw	128
 14203   003AA2  6E4F               	movwf	??_OP_operador_Defuz^0,c
 14204   003AA4  5171               	movf	(OP_operador_Defuz@mf+17)& (0+255),w,b
 14205   003AA6  0A80               	xorlw	128
 14206   003AA8  584F               	subwfb	??_OP_operador_Defuz^0,w,c
 14207   003AAA  A0D8               	btfss	status,0,c
 14208   003AAC  EF5A  F01D         	goto	u4761
 14209   003AB0  EF5C  F01D         	goto	u4760
 14210   003AB4                     u4761:
 14211   003AB4  EFC5  F01C         	goto	l5398
 14212   003AB8                     u4760:
 14213   003AB8                     
 14214                           ; BSR set to: 0
 14215                           ;lib_pic/Control_velocidad_difuso.c: 61:      if(denom==0) return (min+max)/2;
 14216   003AB8  C086  F001         	movff	OP_operador_Defuz@denom,___fleq@ff1
 14217   003ABC  C087  F002         	movff	OP_operador_Defuz@denom+1,___fleq@ff1+1
 14218   003AC0  C088  F003         	movff	OP_operador_Defuz@denom+2,___fleq@ff1+2
 14219   003AC4  C089  F004         	movff	OP_operador_Defuz@denom+3,___fleq@ff1+3
 14220   003AC8  0E00               	movlw	0
 14221   003ACA  6E05               	movwf	___fleq@ff2^0,c
 14222   003ACC  0E00               	movlw	0
 14223   003ACE  6E06               	movwf	(___fleq@ff2+1)^0,c
 14224   003AD0  0E00               	movlw	0
 14225   003AD2  6E07               	movwf	(___fleq@ff2+2)^0,c
 14226   003AD4  0E00               	movlw	0
 14227   003AD6  6E08               	movwf	(___fleq@ff2+3)^0,c
 14228   003AD8  ECE7  F027         	call	___fleq	;wreg free
 14229   003ADC  A0D8               	btfss	status,0,c
 14230   003ADE  EF73  F01D         	goto	u4771
 14231   003AE2  EF75  F01D         	goto	u4770
 14232   003AE6                     u4771:
 14233   003AE6  EFA3  F01D         	goto	l5412
 14234   003AEA                     u4770:
 14235   003AEA  C07E  F022         	movff	OP_operador_Defuz@max,___fladd@a
 14236   003AEE  C07F  F023         	movff	OP_operador_Defuz@max+1,___fladd@a+1
 14237   003AF2  C080  F024         	movff	OP_operador_Defuz@max+2,___fladd@a+2
 14238   003AF6  C081  F025         	movff	OP_operador_Defuz@max+3,___fladd@a+3
 14239   003AFA  C07A  F01E         	movff	OP_operador_Defuz@min,___fladd@b
 14240   003AFE  C07B  F01F         	movff	OP_operador_Defuz@min+1,___fladd@b+1
 14241   003B02  C07C  F020         	movff	OP_operador_Defuz@min+2,___fladd@b+2
 14242   003B06  C07D  F021         	movff	OP_operador_Defuz@min+3,___fladd@b+3
 14243   003B0A  EC5C  F016         	call	___fladd	;wreg free
 14244   003B0E  C01E  F036         	movff	?___fladd,___fldiv@b
 14245   003B12  C01F  F037         	movff	?___fladd+1,___fldiv@b+1
 14246   003B16  C020  F038         	movff	?___fladd+2,___fldiv@b+2
 14247   003B1A  C021  F039         	movff	?___fladd+3,___fldiv@b+3
 14248   003B1E  0E00               	movlw	0
 14249   003B20  6E3A               	movwf	___fldiv@a^0,c
 14250   003B22  0E00               	movlw	0
 14251   003B24  6E3B               	movwf	(___fldiv@a+1)^0,c
 14252   003B26  0E00               	movlw	0
 14253   003B28  6E3C               	movwf	(___fldiv@a+2)^0,c
 14254   003B2A  0E40               	movlw	64
 14255   003B2C  6E3D               	movwf	(___fldiv@a+3)^0,c
 14256   003B2E  ECD1  F01A         	call	___fldiv	;wreg free
 14257   003B32  C036  F060         	movff	?___fldiv,?_OP_operador_Defuz
 14258   003B36  C037  F061         	movff	?___fldiv+1,?_OP_operador_Defuz+1
 14259   003B3A  C038  F062         	movff	?___fldiv+2,?_OP_operador_Defuz+2
 14260   003B3E  C039  F063         	movff	?___fldiv+3,?_OP_operador_Defuz+3
 14261   003B42  EFBD  F01D         	goto	l226
 14262   003B46                     l5412:
 14263                           
 14264                           ;lib_pic/Control_velocidad_difuso.c: 62:      return num/denom;
 14265   003B46  C082  F036         	movff	OP_operador_Defuz@num,___fldiv@b
 14266   003B4A  C083  F037         	movff	OP_operador_Defuz@num+1,___fldiv@b+1
 14267   003B4E  C084  F038         	movff	OP_operador_Defuz@num+2,___fldiv@b+2
 14268   003B52  C085  F039         	movff	OP_operador_Defuz@num+3,___fldiv@b+3
 14269   003B56  C086  F03A         	movff	OP_operador_Defuz@denom,___fldiv@a
 14270   003B5A  C087  F03B         	movff	OP_operador_Defuz@denom+1,___fldiv@a+1
 14271   003B5E  C088  F03C         	movff	OP_operador_Defuz@denom+2,___fldiv@a+2
 14272   003B62  C089  F03D         	movff	OP_operador_Defuz@denom+3,___fldiv@a+3
 14273   003B66  ECD1  F01A         	call	___fldiv	;wreg free
 14274   003B6A  C036  F060         	movff	?___fldiv,?_OP_operador_Defuz
 14275   003B6E  C037  F061         	movff	?___fldiv+1,?_OP_operador_Defuz+1
 14276   003B72  C038  F062         	movff	?___fldiv+2,?_OP_operador_Defuz+2
 14277   003B76  C039  F063         	movff	?___fldiv+3,?_OP_operador_Defuz+3
 14278   003B7A                     l226:
 14279   003B7A  0012               	return		;funcret
 14280   003B7C                     __end_of_OP_operador_Defuz:
 14281                           	callstack 0
 14282                           
 14283 ;; *************** function ___flmul *****************
 14284 ;; Defined at:
 14285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;  b               4    4[COMRAM] int 
 14288 ;;  a               4    8[COMRAM] int 
 14289 ;; Auto vars:     Size  Location     Type
 14290 ;;  prod            4   23[COMRAM] struct .
 14291 ;;  grs             4   17[COMRAM] unsigned long 
 14292 ;;  temp            2   27[COMRAM] struct .
 14293 ;;  bexp            1   22[COMRAM] unsigned char 
 14294 ;;  aexp            1   21[COMRAM] unsigned char 
 14295 ;;  sign            1   16[COMRAM] unsigned char 
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  4    4[COMRAM] unsigned char 
 14298 ;; Registers used:
 14299 ;;		wreg, status,2, status,0, prodl, prodh
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/0
 14302 ;;		On exit  : 0/0
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14305 ;;      Params:         8       0       0       0       0       0       0       0       0
 14306 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14307 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14308 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14309 ;;Total ram usage:       25 bytes
 14310 ;; Hardware stack levels used: 1
 14311 ;; Hardware stack levels required when called: 2
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_OP_operador_Defuz
 14316 ;;		_main
 14317 ;;		_efgtoa
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           	psect	text71
 14322   003178                     __ptext71:
 14323                           	callstack 0
 14324   003178                     ___flmul:
 14325                           	callstack 24
 14326   003178  5008               	movf	(___flmul@b+3)^0,w,c
 14327   00317A  0B80               	andlw	128
 14328   00317C  6E11               	movwf	___flmul@sign^0,c
 14329   00317E  5008               	movf	(___flmul@b+3)^0,w,c
 14330   003180  2408               	addwf	(___flmul@b+3)^0,w,c
 14331   003182  6E17               	movwf	___flmul@bexp^0,c
 14332   003184  AE07               	btfss	(___flmul@b+2)^0,7,c
 14333   003186  EFC7  F018         	goto	u3391
 14334   00318A  EFC9  F018         	goto	u3390
 14335   00318E                     u3391:
 14336   00318E  EFCA  F018         	goto	l4480
 14337   003192                     u3390:
 14338   003192  8017               	bsf	___flmul@bexp^0,0,c
 14339   003194                     l4480:
 14340   003194  5017               	movf	___flmul@bexp^0,w,c
 14341   003196  B4D8               	btfsc	status,2,c
 14342   003198  EFD0  F018         	goto	u3401
 14343   00319C  EFD2  F018         	goto	u3400
 14344   0031A0                     u3401:
 14345   0031A0  EFE5  F018         	goto	l4488
 14346   0031A4                     u3400:
 14347   0031A4  2817               	incf	___flmul@bexp^0,w,c
 14348   0031A6  A4D8               	btfss	status,2,c
 14349   0031A8  EFD8  F018         	goto	u3411
 14350   0031AC  EFDA  F018         	goto	u3410
 14351   0031B0                     u3411:
 14352   0031B0  EFE2  F018         	goto	l4486
 14353   0031B4                     u3410:
 14354   0031B4  0E00               	movlw	0
 14355   0031B6  6E05               	movwf	___flmul@b^0,c
 14356   0031B8  0E00               	movlw	0
 14357   0031BA  6E06               	movwf	(___flmul@b+1)^0,c
 14358   0031BC  0E00               	movlw	0
 14359   0031BE  6E07               	movwf	(___flmul@b+2)^0,c
 14360   0031C0  0E00               	movlw	0
 14361   0031C2  6E08               	movwf	(___flmul@b+3)^0,c
 14362   0031C4                     l4486:
 14363   0031C4  8E07               	bsf	(___flmul@b+2)^0,7,c
 14364   0031C6  EFED  F018         	goto	l4490
 14365   0031CA                     l4488:
 14366   0031CA  0E00               	movlw	0
 14367   0031CC  6E05               	movwf	___flmul@b^0,c
 14368   0031CE  0E00               	movlw	0
 14369   0031D0  6E06               	movwf	(___flmul@b+1)^0,c
 14370   0031D2  0E00               	movlw	0
 14371   0031D4  6E07               	movwf	(___flmul@b+2)^0,c
 14372   0031D6  0E00               	movlw	0
 14373   0031D8  6E08               	movwf	(___flmul@b+3)^0,c
 14374   0031DA                     l4490:
 14375   0031DA  500C               	movf	(___flmul@a+3)^0,w,c
 14376   0031DC  0B80               	andlw	128
 14377   0031DE  1A11               	xorwf	___flmul@sign^0,f,c
 14378   0031E0  500C               	movf	(___flmul@a+3)^0,w,c
 14379   0031E2  240C               	addwf	(___flmul@a+3)^0,w,c
 14380   0031E4  6E16               	movwf	___flmul@aexp^0,c
 14381   0031E6  AE0B               	btfss	(___flmul@a+2)^0,7,c
 14382   0031E8  EFF8  F018         	goto	u3421
 14383   0031EC  EFFA  F018         	goto	u3420
 14384   0031F0                     u3421:
 14385   0031F0  EFFB  F018         	goto	l4498
 14386   0031F4                     u3420:
 14387   0031F4  8016               	bsf	___flmul@aexp^0,0,c
 14388   0031F6                     l4498:
 14389   0031F6  5016               	movf	___flmul@aexp^0,w,c
 14390   0031F8  B4D8               	btfsc	status,2,c
 14391   0031FA  EF01  F019         	goto	u3431
 14392   0031FE  EF03  F019         	goto	u3430
 14393   003202                     u3431:
 14394   003202  EF16  F019         	goto	l4506
 14395   003206                     u3430:
 14396   003206  2816               	incf	___flmul@aexp^0,w,c
 14397   003208  A4D8               	btfss	status,2,c
 14398   00320A  EF09  F019         	goto	u3441
 14399   00320E  EF0B  F019         	goto	u3440
 14400   003212                     u3441:
 14401   003212  EF13  F019         	goto	l4504
 14402   003216                     u3440:
 14403   003216  0E00               	movlw	0
 14404   003218  6E09               	movwf	___flmul@a^0,c
 14405   00321A  0E00               	movlw	0
 14406   00321C  6E0A               	movwf	(___flmul@a+1)^0,c
 14407   00321E  0E00               	movlw	0
 14408   003220  6E0B               	movwf	(___flmul@a+2)^0,c
 14409   003222  0E00               	movlw	0
 14410   003224  6E0C               	movwf	(___flmul@a+3)^0,c
 14411   003226                     l4504:
 14412   003226  8E0B               	bsf	(___flmul@a+2)^0,7,c
 14413   003228  EF1E  F019         	goto	l1131
 14414   00322C                     l4506:
 14415   00322C  0E00               	movlw	0
 14416   00322E  6E09               	movwf	___flmul@a^0,c
 14417   003230  0E00               	movlw	0
 14418   003232  6E0A               	movwf	(___flmul@a+1)^0,c
 14419   003234  0E00               	movlw	0
 14420   003236  6E0B               	movwf	(___flmul@a+2)^0,c
 14421   003238  0E00               	movlw	0
 14422   00323A  6E0C               	movwf	(___flmul@a+3)^0,c
 14423   00323C                     l1131:
 14424   00323C  5016               	movf	___flmul@aexp^0,w,c
 14425   00323E  B4D8               	btfsc	status,2,c
 14426   003240  EF24  F019         	goto	u3451
 14427   003244  EF26  F019         	goto	u3450
 14428   003248                     u3451:
 14429   003248  EF2E  F019         	goto	l4510
 14430   00324C                     u3450:
 14431   00324C  5017               	movf	___flmul@bexp^0,w,c
 14432   00324E  A4D8               	btfss	status,2,c
 14433   003250  EF2C  F019         	goto	u3461
 14434   003254  EF2E  F019         	goto	u3460
 14435   003258                     u3461:
 14436   003258  EF38  F019         	goto	l4514
 14437   00325C                     u3460:
 14438   00325C                     l4510:
 14439   00325C  0E00               	movlw	0
 14440   00325E  6E05               	movwf	?___flmul^0,c
 14441   003260  0E00               	movlw	0
 14442   003262  6E06               	movwf	(?___flmul+1)^0,c
 14443   003264  0E00               	movlw	0
 14444   003266  6E07               	movwf	(?___flmul+2)^0,c
 14445   003268  0E00               	movlw	0
 14446   00326A  6E08               	movwf	(?___flmul+3)^0,c
 14447   00326C  EFD0  F01A         	goto	l1135
 14448   003270                     l4514:
 14449   003270  500B               	movf	(___flmul@a+2)^0,w,c
 14450   003272  0205               	mulwf	___flmul@b^0,c
 14451   003274  CFF3 F01C          	movff	prodl,___flmul@temp
 14452   003278  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14453   00327C  501C               	movf	___flmul@temp^0,w,c
 14454   00327E  6E12               	movwf	___flmul@grs^0,c
 14455   003280  6A13               	clrf	(___flmul@grs+1)^0,c
 14456   003282  6A14               	clrf	(___flmul@grs+2)^0,c
 14457   003284  6A15               	clrf	(___flmul@grs+3)^0,c
 14458   003286  501D               	movf	(___flmul@temp+1)^0,w,c
 14459   003288  6E18               	movwf	___flmul@prod^0,c
 14460   00328A  6A19               	clrf	(___flmul@prod+1)^0,c
 14461   00328C  6A1A               	clrf	(___flmul@prod+2)^0,c
 14462   00328E  6A1B               	clrf	(___flmul@prod+3)^0,c
 14463   003290  500A               	movf	(___flmul@a+1)^0,w,c
 14464   003292  0206               	mulwf	(___flmul@b+1)^0,c
 14465   003294  CFF3 F01C          	movff	prodl,___flmul@temp
 14466   003298  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14467   00329C  501C               	movf	___flmul@temp^0,w,c
 14468   00329E  2612               	addwf	___flmul@grs^0,f,c
 14469   0032A0  0E00               	movlw	0
 14470   0032A2  2213               	addwfc	(___flmul@grs+1)^0,f,c
 14471   0032A4  2214               	addwfc	(___flmul@grs+2)^0,f,c
 14472   0032A6  2215               	addwfc	(___flmul@grs+3)^0,f,c
 14473   0032A8  501D               	movf	(___flmul@temp+1)^0,w,c
 14474   0032AA  2618               	addwf	___flmul@prod^0,f,c
 14475   0032AC  0E00               	movlw	0
 14476   0032AE  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14477   0032B0  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14478   0032B2  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14479   0032B4  5009               	movf	___flmul@a^0,w,c
 14480   0032B6  0207               	mulwf	(___flmul@b+2)^0,c
 14481   0032B8  CFF3 F01C          	movff	prodl,___flmul@temp
 14482   0032BC  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14483   0032C0  501C               	movf	___flmul@temp^0,w,c
 14484   0032C2  2612               	addwf	___flmul@grs^0,f,c
 14485   0032C4  0E00               	movlw	0
 14486   0032C6  2213               	addwfc	(___flmul@grs+1)^0,f,c
 14487   0032C8  2214               	addwfc	(___flmul@grs+2)^0,f,c
 14488   0032CA  2215               	addwfc	(___flmul@grs+3)^0,f,c
 14489   0032CC  501D               	movf	(___flmul@temp+1)^0,w,c
 14490   0032CE  2618               	addwf	___flmul@prod^0,f,c
 14491   0032D0  0E00               	movlw	0
 14492   0032D2  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14493   0032D4  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14494   0032D6  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14495   0032D8  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
 14496   0032DC  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
 14497   0032E0  C012  F013         	movff	___flmul@grs,___flmul@grs+1
 14498   0032E4  6A12               	clrf	___flmul@grs^0,c
 14499   0032E6  5009               	movf	___flmul@a^0,w,c
 14500   0032E8  0206               	mulwf	(___flmul@b+1)^0,c
 14501   0032EA  CFF3 F01C          	movff	prodl,___flmul@temp
 14502   0032EE  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14503   0032F2  501C               	movf	___flmul@temp^0,w,c
 14504   0032F4  2612               	addwf	___flmul@grs^0,f,c
 14505   0032F6  501D               	movf	(___flmul@temp+1)^0,w,c
 14506   0032F8  2213               	addwfc	(___flmul@grs+1)^0,f,c
 14507   0032FA  0E00               	movlw	0
 14508   0032FC  2214               	addwfc	(___flmul@grs+2)^0,f,c
 14509   0032FE  0E00               	movlw	0
 14510   003300  2215               	addwfc	(___flmul@grs+3)^0,f,c
 14511   003302  500A               	movf	(___flmul@a+1)^0,w,c
 14512   003304  0205               	mulwf	___flmul@b^0,c
 14513   003306  CFF3 F01C          	movff	prodl,___flmul@temp
 14514   00330A  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14515   00330E  501C               	movf	___flmul@temp^0,w,c
 14516   003310  2612               	addwf	___flmul@grs^0,f,c
 14517   003312  501D               	movf	(___flmul@temp+1)^0,w,c
 14518   003314  2213               	addwfc	(___flmul@grs+1)^0,f,c
 14519   003316  0E00               	movlw	0
 14520   003318  2214               	addwfc	(___flmul@grs+2)^0,f,c
 14521   00331A  0E00               	movlw	0
 14522   00331C  2215               	addwfc	(___flmul@grs+3)^0,f,c
 14523   00331E  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
 14524   003322  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
 14525   003326  C012  F013         	movff	___flmul@grs,___flmul@grs+1
 14526   00332A  6A12               	clrf	___flmul@grs^0,c
 14527   00332C  5009               	movf	___flmul@a^0,w,c
 14528   00332E  0205               	mulwf	___flmul@b^0,c
 14529   003330  CFF3 F01C          	movff	prodl,___flmul@temp
 14530   003334  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14531   003338  501C               	movf	___flmul@temp^0,w,c
 14532   00333A  2612               	addwf	___flmul@grs^0,f,c
 14533   00333C  501D               	movf	(___flmul@temp+1)^0,w,c
 14534   00333E  2213               	addwfc	(___flmul@grs+1)^0,f,c
 14535   003340  0E00               	movlw	0
 14536   003342  2214               	addwfc	(___flmul@grs+2)^0,f,c
 14537   003344  0E00               	movlw	0
 14538   003346  2215               	addwfc	(___flmul@grs+3)^0,f,c
 14539   003348  500B               	movf	(___flmul@a+2)^0,w,c
 14540   00334A  0206               	mulwf	(___flmul@b+1)^0,c
 14541   00334C  CFF3 F01C          	movff	prodl,___flmul@temp
 14542   003350  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14543   003354  501C               	movf	___flmul@temp^0,w,c
 14544   003356  2618               	addwf	___flmul@prod^0,f,c
 14545   003358  501D               	movf	(___flmul@temp+1)^0,w,c
 14546   00335A  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14547   00335C  0E00               	movlw	0
 14548   00335E  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14549   003360  0E00               	movlw	0
 14550   003362  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14551   003364  500A               	movf	(___flmul@a+1)^0,w,c
 14552   003366  0207               	mulwf	(___flmul@b+2)^0,c
 14553   003368  CFF3 F01C          	movff	prodl,___flmul@temp
 14554   00336C  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14555   003370  501C               	movf	___flmul@temp^0,w,c
 14556   003372  2618               	addwf	___flmul@prod^0,f,c
 14557   003374  501D               	movf	(___flmul@temp+1)^0,w,c
 14558   003376  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14559   003378  0E00               	movlw	0
 14560   00337A  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14561   00337C  0E00               	movlw	0
 14562   00337E  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14563   003380  500B               	movf	(___flmul@a+2)^0,w,c
 14564   003382  0207               	mulwf	(___flmul@b+2)^0,c
 14565   003384  CFF3 F01C          	movff	prodl,___flmul@temp
 14566   003388  CFF4 F01D          	movff	prodh,___flmul@temp+1
 14567   00338C  501C               	movf	___flmul@temp^0,w,c
 14568   00338E  6E0D               	movwf	??___flmul^0,c
 14569   003390  501D               	movf	(___flmul@temp+1)^0,w,c
 14570   003392  6E0E               	movwf	(??___flmul+1)^0,c
 14571   003394  6A0F               	clrf	(??___flmul+2)^0,c
 14572   003396  6A10               	clrf	(??___flmul+3)^0,c
 14573   003398  C00F  F010         	movff	??___flmul+2,??___flmul+3
 14574   00339C  C00E  F00F         	movff	??___flmul+1,??___flmul+2
 14575   0033A0  C00D  F00E         	movff	??___flmul,??___flmul+1
 14576   0033A4  6A0D               	clrf	??___flmul^0,c
 14577   0033A6  500D               	movf	??___flmul^0,w,c
 14578   0033A8  2618               	addwf	___flmul@prod^0,f,c
 14579   0033AA  500E               	movf	(??___flmul+1)^0,w,c
 14580   0033AC  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14581   0033AE  500F               	movf	(??___flmul+2)^0,w,c
 14582   0033B0  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14583   0033B2  5010               	movf	(??___flmul+3)^0,w,c
 14584   0033B4  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14585   0033B6  C012  F00D         	movff	___flmul@grs,??___flmul
 14586   0033BA  C013  F00E         	movff	___flmul@grs+1,??___flmul+1
 14587   0033BE  C014  F00F         	movff	___flmul@grs+2,??___flmul+2
 14588   0033C2  C015  F010         	movff	___flmul@grs+3,??___flmul+3
 14589   0033C6  0E19               	movlw	25
 14590   0033C8  EFEB  F019         	goto	u3470
 14591   0033CC                     u3475:
 14592   0033CC  90D8               	bcf	status,0,c
 14593   0033CE  3210               	rrcf	(??___flmul+3)^0,f,c
 14594   0033D0  320F               	rrcf	(??___flmul+2)^0,f,c
 14595   0033D2  320E               	rrcf	(??___flmul+1)^0,f,c
 14596   0033D4  320D               	rrcf	??___flmul^0,f,c
 14597   0033D6                     u3470:
 14598   0033D6  2EE8               	decfsz	wreg,f,c
 14599   0033D8  EFE6  F019         	goto	u3475
 14600   0033DC  500D               	movf	??___flmul^0,w,c
 14601   0033DE  2618               	addwf	___flmul@prod^0,f,c
 14602   0033E0  500E               	movf	(??___flmul+1)^0,w,c
 14603   0033E2  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14604   0033E4  500F               	movf	(??___flmul+2)^0,w,c
 14605   0033E6  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14606   0033E8  5010               	movf	(??___flmul+3)^0,w,c
 14607   0033EA  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14608   0033EC  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
 14609   0033F0  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
 14610   0033F4  C012  F013         	movff	___flmul@grs,___flmul@grs+1
 14611   0033F8  6A12               	clrf	___flmul@grs^0,c
 14612   0033FA  5016               	movf	___flmul@aexp^0,w,c
 14613   0033FC  C017  F00D         	movff	___flmul@bexp,??___flmul
 14614   003400  6A0E               	clrf	(??___flmul+1)^0,c
 14615   003402  260D               	addwf	??___flmul^0,f,c
 14616   003404  0E00               	movlw	0
 14617   003406  220E               	addwfc	(??___flmul+1)^0,f,c
 14618   003408  0E82               	movlw	130
 14619   00340A  240D               	addwf	??___flmul^0,w,c
 14620   00340C  6E1C               	movwf	___flmul@temp^0,c
 14621   00340E  0EFF               	movlw	255
 14622   003410  200E               	addwfc	(??___flmul+1)^0,w,c
 14623   003412  6E1D               	movwf	(___flmul@temp+1)^0,c
 14624   003414  EF21  F01A         	goto	l4562
 14625   003418                     l4556:
 14626   003418  90D8               	bcf	status,0,c
 14627   00341A  3618               	rlcf	___flmul@prod^0,f,c
 14628   00341C  3619               	rlcf	(___flmul@prod+1)^0,f,c
 14629   00341E  361A               	rlcf	(___flmul@prod+2)^0,f,c
 14630   003420  361B               	rlcf	(___flmul@prod+3)^0,f,c
 14631   003422  AE15               	btfss	(___flmul@grs+3)^0,7,c
 14632   003424  EF16  F01A         	goto	u3481
 14633   003428  EF18  F01A         	goto	u3480
 14634   00342C                     u3481:
 14635   00342C  EF19  F01A         	goto	l1138
 14636   003430                     u3480:
 14637   003430  8018               	bsf	___flmul@prod^0,0,c
 14638   003432                     l1138:
 14639   003432  90D8               	bcf	status,0,c
 14640   003434  3612               	rlcf	___flmul@grs^0,f,c
 14641   003436  3613               	rlcf	(___flmul@grs+1)^0,f,c
 14642   003438  3614               	rlcf	(___flmul@grs+2)^0,f,c
 14643   00343A  3615               	rlcf	(___flmul@grs+3)^0,f,c
 14644   00343C  061C               	decf	___flmul@temp^0,f,c
 14645   00343E  A0D8               	btfss	status,0,c
 14646   003440  061D               	decf	(___flmul@temp+1)^0,f,c
 14647   003442                     l4562:
 14648   003442  AE1A               	btfss	(___flmul@prod+2)^0,7,c
 14649   003444  EF26  F01A         	goto	u3491
 14650   003448  EF28  F01A         	goto	u3490
 14651   00344C                     u3491:
 14652   00344C  EF0C  F01A         	goto	l4556
 14653   003450                     u3490:
 14654   003450  0E00               	movlw	0
 14655   003452  6E16               	movwf	___flmul@aexp^0,c
 14656   003454  AE15               	btfss	(___flmul@grs+3)^0,7,c
 14657   003456  EF2F  F01A         	goto	u3501
 14658   00345A  EF31  F01A         	goto	u3500
 14659   00345E                     u3501:
 14660   00345E  EF55  F01A         	goto	l1140
 14661   003462                     u3500:
 14662   003462  0EFF               	movlw	255
 14663   003464  1412               	andwf	___flmul@grs^0,w,c
 14664   003466  6E0D               	movwf	??___flmul^0,c
 14665   003468  0EFF               	movlw	255
 14666   00346A  1413               	andwf	(___flmul@grs+1)^0,w,c
 14667   00346C  6E0E               	movwf	(??___flmul+1)^0,c
 14668   00346E  0EFF               	movlw	255
 14669   003470  1414               	andwf	(___flmul@grs+2)^0,w,c
 14670   003472  6E0F               	movwf	(??___flmul+2)^0,c
 14671   003474  0E7F               	movlw	127
 14672   003476  1415               	andwf	(___flmul@grs+3)^0,w,c
 14673   003478  6E10               	movwf	(??___flmul+3)^0,c
 14674   00347A  500D               	movf	??___flmul^0,w,c
 14675   00347C  100E               	iorwf	(??___flmul+1)^0,w,c
 14676   00347E  100F               	iorwf	(??___flmul+2)^0,w,c
 14677   003480  1010               	iorwf	(??___flmul+3)^0,w,c
 14678   003482  B4D8               	btfsc	status,2,c
 14679   003484  EF46  F01A         	goto	u3511
 14680   003488  EF48  F01A         	goto	u3510
 14681   00348C                     u3511:
 14682   00348C  EF4C  F01A         	goto	l1141
 14683   003490                     u3510:
 14684   003490                     l4570:
 14685   003490  0E01               	movlw	1
 14686   003492  6E16               	movwf	___flmul@aexp^0,c
 14687   003494  EF55  F01A         	goto	l1140
 14688   003498                     l1141:
 14689   003498  A018               	btfss	___flmul@prod^0,0,c
 14690   00349A  EF51  F01A         	goto	u3521
 14691   00349E  EF53  F01A         	goto	u3520
 14692   0034A2                     u3521:
 14693   0034A2  EF55  F01A         	goto	l1140
 14694   0034A6                     u3520:
 14695   0034A6  EF48  F01A         	goto	l4570
 14696   0034AA                     l1140:
 14697   0034AA  5016               	movf	___flmul@aexp^0,w,c
 14698   0034AC  B4D8               	btfsc	status,2,c
 14699   0034AE  EF5B  F01A         	goto	u3531
 14700   0034B2  EF5D  F01A         	goto	u3530
 14701   0034B6                     u3531:
 14702   0034B6  EF81  F01A         	goto	l4582
 14703   0034BA                     u3530:
 14704   0034BA  0E01               	movlw	1
 14705   0034BC  2618               	addwf	___flmul@prod^0,f,c
 14706   0034BE  0E00               	movlw	0
 14707   0034C0  2219               	addwfc	(___flmul@prod+1)^0,f,c
 14708   0034C2  221A               	addwfc	(___flmul@prod+2)^0,f,c
 14709   0034C4  221B               	addwfc	(___flmul@prod+3)^0,f,c
 14710   0034C6  A01B               	btfss	(___flmul@prod+3)^0,0,c
 14711   0034C8  EF68  F01A         	goto	u3541
 14712   0034CC  EF6A  F01A         	goto	u3540
 14713   0034D0                     u3541:
 14714   0034D0  EF81  F01A         	goto	l4582
 14715   0034D4                     u3540:
 14716   0034D4  C018  F00D         	movff	___flmul@prod,??___flmul
 14717   0034D8  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
 14718   0034DC  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
 14719   0034E0  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
 14720   0034E4  3410               	rlcf	(??___flmul+3)^0,w,c
 14721   0034E6  3210               	rrcf	(??___flmul+3)^0,f,c
 14722   0034E8  320F               	rrcf	(??___flmul+2)^0,f,c
 14723   0034EA  320E               	rrcf	(??___flmul+1)^0,f,c
 14724   0034EC  320D               	rrcf	??___flmul^0,f,c
 14725   0034EE  C00D  F018         	movff	??___flmul,___flmul@prod
 14726   0034F2  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
 14727   0034F6  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
 14728   0034FA  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
 14729   0034FE  4A1C               	infsnz	___flmul@temp^0,f,c
 14730   003500  2A1D               	incf	(___flmul@temp+1)^0,f,c
 14731   003502                     l4582:
 14732   003502  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
 14733   003504  EF8C  F01A         	goto	u3551
 14734   003508  501D               	movf	(___flmul@temp+1)^0,w,c
 14735   00350A  E108               	bnz	u3550
 14736   00350C  281C               	incf	___flmul@temp^0,w,c
 14737   00350E  A0D8               	btfss	status,0,c
 14738   003510  EF8C  F01A         	goto	u3551
 14739   003514  EF8E  F01A         	goto	u3550
 14740   003518                     u3551:
 14741   003518  EF98  F01A         	goto	l4586
 14742   00351C                     u3550:
 14743   00351C  0E00               	movlw	0
 14744   00351E  6E18               	movwf	___flmul@prod^0,c
 14745   003520  0E00               	movlw	0
 14746   003522  6E19               	movwf	(___flmul@prod+1)^0,c
 14747   003524  0E80               	movlw	128
 14748   003526  6E1A               	movwf	(___flmul@prod+2)^0,c
 14749   003528  0E7F               	movlw	127
 14750   00352A  6E1B               	movwf	(___flmul@prod+3)^0,c
 14751   00352C  EFC6  F01A         	goto	l4598
 14752   003530                     l4586:
 14753   003530  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
 14754   003532  EFA5  F01A         	goto	u3560
 14755   003536  501D               	movf	(___flmul@temp+1)^0,w,c
 14756   003538  E106               	bnz	u3561
 14757   00353A  041C               	decf	___flmul@temp^0,w,c
 14758   00353C  B0D8               	btfsc	status,0,c
 14759   00353E  EFA3  F01A         	goto	u3561
 14760   003542  EFA5  F01A         	goto	u3560
 14761   003546                     u3561:
 14762   003546  EFB1  F01A         	goto	l1148
 14763   00354A                     u3560:
 14764   00354A  0E00               	movlw	0
 14765   00354C  6E18               	movwf	___flmul@prod^0,c
 14766   00354E  0E00               	movlw	0
 14767   003550  6E19               	movwf	(___flmul@prod+1)^0,c
 14768   003552  0E00               	movlw	0
 14769   003554  6E1A               	movwf	(___flmul@prod+2)^0,c
 14770   003556  0E00               	movlw	0
 14771   003558  6E1B               	movwf	(___flmul@prod+3)^0,c
 14772   00355A  0E00               	movlw	0
 14773   00355C  6E11               	movwf	___flmul@sign^0,c
 14774   00355E  EFC6  F01A         	goto	l4598
 14775   003562                     l1148:
 14776   003562  C01C  F017         	movff	___flmul@temp,___flmul@bexp
 14777   003566  0EFF               	movlw	255
 14778   003568  1618               	andwf	___flmul@prod^0,f,c
 14779   00356A  0EFF               	movlw	255
 14780   00356C  1619               	andwf	(___flmul@prod+1)^0,f,c
 14781   00356E  0E7F               	movlw	127
 14782   003570  161A               	andwf	(___flmul@prod+2)^0,f,c
 14783   003572  0E00               	movlw	0
 14784   003574  161B               	andwf	(___flmul@prod+3)^0,f,c
 14785   003576  A017               	btfss	___flmul@bexp^0,0,c
 14786   003578  EFC0  F01A         	goto	u3571
 14787   00357C  EFC2  F01A         	goto	u3570
 14788   003580                     u3571:
 14789   003580  EFC3  F01A         	goto	l4596
 14790   003584                     u3570:
 14791   003584  8E1A               	bsf	(___flmul@prod+2)^0,7,c
 14792   003586                     l4596:
 14793   003586  90D8               	bcf	status,0,c
 14794   003588  3017               	rrcf	___flmul@bexp^0,w,c
 14795   00358A  6E1B               	movwf	(___flmul@prod+3)^0,c
 14796   00358C                     l4598:
 14797   00358C  5011               	movf	___flmul@sign^0,w,c
 14798   00358E  121B               	iorwf	(___flmul@prod+3)^0,f,c
 14799   003590  C018  F005         	movff	___flmul@prod,?___flmul
 14800   003594  C019  F006         	movff	___flmul@prod+1,?___flmul+1
 14801   003598  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
 14802   00359C  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
 14803   0035A0                     l1135:
 14804   0035A0  0012               	return		;funcret
 14805   0035A2                     __end_of___flmul:
 14806                           	callstack 0
 14807                           
 14808 ;; *************** function ___fleq *****************
 14809 ;; Defined at:
 14810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;  ff1             4    0[COMRAM] unsigned char 
 14813 ;;  ff2             4    4[COMRAM] unsigned char 
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;		None
 14816 ;; Return value:  Size  Location     Type
 14817 ;;		None               void
 14818 ;; Registers used:
 14819 ;;		wreg, status,2, status,0
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14825 ;;      Params:         8       0       0       0       0       0       0       0       0
 14826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14827 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14828 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14829 ;;Total ram usage:       12 bytes
 14830 ;; Hardware stack levels used: 1
 14831 ;; Hardware stack levels required when called: 2
 14832 ;; This function calls:
 14833 ;;		Nothing
 14834 ;; This function is called by:
 14835 ;;		_OP_operador_Defuz
 14836 ;;		_efgtoa
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text72
 14841   004FCE                     __ptext72:
 14842                           	callstack 0
 14843   004FCE                     ___fleq:
 14844                           	callstack 24
 14845   004FCE  0E00               	movlw	0
 14846   004FD0  1401               	andwf	___fleq@ff1^0,w,c
 14847   004FD2  6E09               	movwf	??___fleq^0,c
 14848   004FD4  0E00               	movlw	0
 14849   004FD6  1402               	andwf	(___fleq@ff1+1)^0,w,c
 14850   004FD8  6E0A               	movwf	(??___fleq+1)^0,c
 14851   004FDA  0E80               	movlw	128
 14852   004FDC  1403               	andwf	(___fleq@ff1+2)^0,w,c
 14853   004FDE  6E0B               	movwf	(??___fleq+2)^0,c
 14854   004FE0  0E7F               	movlw	127
 14855   004FE2  1404               	andwf	(___fleq@ff1+3)^0,w,c
 14856   004FE4  6E0C               	movwf	(??___fleq+3)^0,c
 14857   004FE6  5009               	movf	??___fleq^0,w,c
 14858   004FE8  100A               	iorwf	(??___fleq+1)^0,w,c
 14859   004FEA  100B               	iorwf	(??___fleq+2)^0,w,c
 14860   004FEC  100C               	iorwf	(??___fleq+3)^0,w,c
 14861   004FEE  A4D8               	btfss	status,2,c
 14862   004FF0  EFFC  F027         	goto	u3581
 14863   004FF4  EFFE  F027         	goto	u3580
 14864   004FF8                     u3581:
 14865   004FF8  EF06  F028         	goto	l4614
 14866   004FFC                     u3580:
 14867   004FFC  0E00               	movlw	0
 14868   004FFE  6E01               	movwf	___fleq@ff1^0,c
 14869   005000  0E00               	movlw	0
 14870   005002  6E02               	movwf	(___fleq@ff1+1)^0,c
 14871   005004  0E00               	movlw	0
 14872   005006  6E03               	movwf	(___fleq@ff1+2)^0,c
 14873   005008  0E00               	movlw	0
 14874   00500A  6E04               	movwf	(___fleq@ff1+3)^0,c
 14875   00500C                     l4614:
 14876   00500C  0E00               	movlw	0
 14877   00500E  1405               	andwf	___fleq@ff2^0,w,c
 14878   005010  6E09               	movwf	??___fleq^0,c
 14879   005012  0E00               	movlw	0
 14880   005014  1406               	andwf	(___fleq@ff2+1)^0,w,c
 14881   005016  6E0A               	movwf	(??___fleq+1)^0,c
 14882   005018  0E80               	movlw	128
 14883   00501A  1407               	andwf	(___fleq@ff2+2)^0,w,c
 14884   00501C  6E0B               	movwf	(??___fleq+2)^0,c
 14885   00501E  0E7F               	movlw	127
 14886   005020  1408               	andwf	(___fleq@ff2+3)^0,w,c
 14887   005022  6E0C               	movwf	(??___fleq+3)^0,c
 14888   005024  5009               	movf	??___fleq^0,w,c
 14889   005026  100A               	iorwf	(??___fleq+1)^0,w,c
 14890   005028  100B               	iorwf	(??___fleq+2)^0,w,c
 14891   00502A  100C               	iorwf	(??___fleq+3)^0,w,c
 14892   00502C  A4D8               	btfss	status,2,c
 14893   00502E  EF1B  F028         	goto	u3591
 14894   005032  EF1D  F028         	goto	u3590
 14895   005036                     u3591:
 14896   005036  EF25  F028         	goto	l4618
 14897   00503A                     u3590:
 14898   00503A  0E00               	movlw	0
 14899   00503C  6E05               	movwf	___fleq@ff2^0,c
 14900   00503E  0E00               	movlw	0
 14901   005040  6E06               	movwf	(___fleq@ff2+1)^0,c
 14902   005042  0E00               	movlw	0
 14903   005044  6E07               	movwf	(___fleq@ff2+2)^0,c
 14904   005046  0E00               	movlw	0
 14905   005048  6E08               	movwf	(___fleq@ff2+3)^0,c
 14906   00504A                     l4618:
 14907   00504A  5005               	movf	___fleq@ff2^0,w,c
 14908   00504C  1801               	xorwf	___fleq@ff1^0,w,c
 14909   00504E  E10F               	bnz	u3600
 14910   005050  5006               	movf	(___fleq@ff2+1)^0,w,c
 14911   005052  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 14912   005054  E10C               	bnz	u3600
 14913   005056  5007               	movf	(___fleq@ff2+2)^0,w,c
 14914   005058  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 14915   00505A  E109               	bnz	u3600
 14916   00505C  5008               	movf	(___fleq@ff2+3)^0,w,c
 14917   00505E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 14918   005060  B4D8               	btfsc	status,2,c
 14919   005062  EF35  F028         	goto	u3601
 14920   005066  EF37  F028         	goto	u3600
 14921   00506A                     u3601:
 14922   00506A  EF3A  F028         	goto	l4622
 14923   00506E                     u3600:
 14924   00506E  90D8               	bcf	status,0,c
 14925   005070  EF3B  F028         	goto	l776
 14926   005074                     l4622:
 14927   005074  80D8               	bsf	status,0,c
 14928   005076                     l776:
 14929   005076  0012               	return		;funcret
 14930   005078                     __end_of___fleq:
 14931                           	callstack 0
 14932                           
 14933 ;; *************** function ___fldiv *****************
 14934 ;; Defined at:
 14935 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14936 ;; Parameters:    Size  Location     Type
 14937 ;;  b               4   53[COMRAM] unsigned char 
 14938 ;;  a               4   57[COMRAM] unsigned char 
 14939 ;; Auto vars:     Size  Location     Type
 14940 ;;  grs             4   72[COMRAM] unsigned long 
 14941 ;;  rem             4   65[COMRAM] unsigned long 
 14942 ;;  new_exp         2   70[COMRAM] short 
 14943 ;;  aexp            1   77[COMRAM] unsigned char 
 14944 ;;  bexp            1   76[COMRAM] unsigned char 
 14945 ;;  sign            1   69[COMRAM] unsigned char 
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  4   53[COMRAM] unsigned char 
 14948 ;; Registers used:
 14949 ;;		wreg, status,2, status,0
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14955 ;;      Params:         8       0       0       0       0       0       0       0       0
 14956 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14957 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14958 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14959 ;;Total ram usage:       25 bytes
 14960 ;; Hardware stack levels used: 1
 14961 ;; Hardware stack levels required when called: 2
 14962 ;; This function calls:
 14963 ;;		Nothing
 14964 ;; This function is called by:
 14965 ;;		_MF_xfsg_triangle_equal
 14966 ;;		_OP_operador_Defuz
 14967 ;;		_efgtoa
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text73
 14972   0035A2                     __ptext73:
 14973                           	callstack 0
 14974   0035A2                     ___fldiv:
 14975                           	callstack 24
 14976   0035A2  5039               	movf	(___fldiv@b+3)^0,w,c
 14977   0035A4  0B80               	andlw	128
 14978   0035A6  6E46               	movwf	___fldiv@sign^0,c
 14979   0035A8  5039               	movf	(___fldiv@b+3)^0,w,c
 14980   0035AA  2439               	addwf	(___fldiv@b+3)^0,w,c
 14981   0035AC  6E4D               	movwf	___fldiv@bexp^0,c
 14982   0035AE  AE38               	btfss	(___fldiv@b+2)^0,7,c
 14983   0035B0  EFDC  F01A         	goto	u3161
 14984   0035B4  EFDE  F01A         	goto	u3160
 14985   0035B8                     u3161:
 14986   0035B8  EFDF  F01A         	goto	l4342
 14987   0035BC                     u3160:
 14988   0035BC  804D               	bsf	___fldiv@bexp^0,0,c
 14989   0035BE                     l4342:
 14990   0035BE  504D               	movf	___fldiv@bexp^0,w,c
 14991   0035C0  B4D8               	btfsc	status,2,c
 14992   0035C2  EFE5  F01A         	goto	u3171
 14993   0035C6  EFE7  F01A         	goto	u3170
 14994   0035CA                     u3171:
 14995   0035CA  EFFC  F01A         	goto	l4352
 14996   0035CE                     u3170:
 14997   0035CE  284D               	incf	___fldiv@bexp^0,w,c
 14998   0035D0  A4D8               	btfss	status,2,c
 14999   0035D2  EFED  F01A         	goto	u3181
 15000   0035D6  EFEF  F01A         	goto	u3180
 15001   0035DA                     u3181:
 15002   0035DA  EFF7  F01A         	goto	l4348
 15003   0035DE                     u3180:
 15004   0035DE  0E00               	movlw	0
 15005   0035E0  6E36               	movwf	___fldiv@b^0,c
 15006   0035E2  0E00               	movlw	0
 15007   0035E4  6E37               	movwf	(___fldiv@b+1)^0,c
 15008   0035E6  0E00               	movlw	0
 15009   0035E8  6E38               	movwf	(___fldiv@b+2)^0,c
 15010   0035EA  0E00               	movlw	0
 15011   0035EC  6E39               	movwf	(___fldiv@b+3)^0,c
 15012   0035EE                     l4348:
 15013   0035EE  8E38               	bsf	(___fldiv@b+2)^0,7,c
 15014   0035F0  0E00               	movlw	0
 15015   0035F2  6E39               	movwf	(___fldiv@b+3)^0,c
 15016   0035F4  EF04  F01B         	goto	l4354
 15017   0035F8                     l4352:
 15018   0035F8  0E00               	movlw	0
 15019   0035FA  6E36               	movwf	___fldiv@b^0,c
 15020   0035FC  0E00               	movlw	0
 15021   0035FE  6E37               	movwf	(___fldiv@b+1)^0,c
 15022   003600  0E00               	movlw	0
 15023   003602  6E38               	movwf	(___fldiv@b+2)^0,c
 15024   003604  0E00               	movlw	0
 15025   003606  6E39               	movwf	(___fldiv@b+3)^0,c
 15026   003608                     l4354:
 15027   003608  503D               	movf	(___fldiv@a+3)^0,w,c
 15028   00360A  0B80               	andlw	128
 15029   00360C  1A46               	xorwf	___fldiv@sign^0,f,c
 15030   00360E  503D               	movf	(___fldiv@a+3)^0,w,c
 15031   003610  243D               	addwf	(___fldiv@a+3)^0,w,c
 15032   003612  6E4E               	movwf	___fldiv@aexp^0,c
 15033   003614  AE3C               	btfss	(___fldiv@a+2)^0,7,c
 15034   003616  EF0F  F01B         	goto	u3191
 15035   00361A  EF11  F01B         	goto	u3190
 15036   00361E                     u3191:
 15037   00361E  EF12  F01B         	goto	l4362
 15038   003622                     u3190:
 15039   003622  804E               	bsf	___fldiv@aexp^0,0,c
 15040   003624                     l4362:
 15041   003624  504E               	movf	___fldiv@aexp^0,w,c
 15042   003626  B4D8               	btfsc	status,2,c
 15043   003628  EF18  F01B         	goto	u3201
 15044   00362C  EF1A  F01B         	goto	u3200
 15045   003630                     u3201:
 15046   003630  EF2F  F01B         	goto	l4372
 15047   003634                     u3200:
 15048   003634  284E               	incf	___fldiv@aexp^0,w,c
 15049   003636  A4D8               	btfss	status,2,c
 15050   003638  EF20  F01B         	goto	u3211
 15051   00363C  EF22  F01B         	goto	u3210
 15052   003640                     u3211:
 15053   003640  EF2A  F01B         	goto	l4368
 15054   003644                     u3210:
 15055   003644  0E00               	movlw	0
 15056   003646  6E3A               	movwf	___fldiv@a^0,c
 15057   003648  0E00               	movlw	0
 15058   00364A  6E3B               	movwf	(___fldiv@a+1)^0,c
 15059   00364C  0E00               	movlw	0
 15060   00364E  6E3C               	movwf	(___fldiv@a+2)^0,c
 15061   003650  0E00               	movlw	0
 15062   003652  6E3D               	movwf	(___fldiv@a+3)^0,c
 15063   003654                     l4368:
 15064   003654  8E3C               	bsf	(___fldiv@a+2)^0,7,c
 15065   003656  0E00               	movlw	0
 15066   003658  6E3D               	movwf	(___fldiv@a+3)^0,c
 15067   00365A  EF37  F01B         	goto	l4374
 15068   00365E                     l4372:
 15069   00365E  0E00               	movlw	0
 15070   003660  6E3A               	movwf	___fldiv@a^0,c
 15071   003662  0E00               	movlw	0
 15072   003664  6E3B               	movwf	(___fldiv@a+1)^0,c
 15073   003666  0E00               	movlw	0
 15074   003668  6E3C               	movwf	(___fldiv@a+2)^0,c
 15075   00366A  0E00               	movlw	0
 15076   00366C  6E3D               	movwf	(___fldiv@a+3)^0,c
 15077   00366E                     l4374:
 15078   00366E  503A               	movf	___fldiv@a^0,w,c
 15079   003670  103B               	iorwf	(___fldiv@a+1)^0,w,c
 15080   003672  103C               	iorwf	(___fldiv@a+2)^0,w,c
 15081   003674  103D               	iorwf	(___fldiv@a+3)^0,w,c
 15082   003676  A4D8               	btfss	status,2,c
 15083   003678  EF40  F01B         	goto	u3221
 15084   00367C  EF42  F01B         	goto	u3220
 15085   003680                     u3221:
 15086   003680  EF5A  F01B         	goto	l4386
 15087   003684                     u3220:
 15088   003684  0E00               	movlw	0
 15089   003686  6E36               	movwf	___fldiv@b^0,c
 15090   003688  0E00               	movlw	0
 15091   00368A  6E37               	movwf	(___fldiv@b+1)^0,c
 15092   00368C  0E00               	movlw	0
 15093   00368E  6E38               	movwf	(___fldiv@b+2)^0,c
 15094   003690  0E00               	movlw	0
 15095   003692  6E39               	movwf	(___fldiv@b+3)^0,c
 15096   003694  0E80               	movlw	128
 15097   003696  1238               	iorwf	(___fldiv@b+2)^0,f,c
 15098   003698  0E7F               	movlw	127
 15099   00369A  1239               	iorwf	(___fldiv@b+3)^0,f,c
 15100   00369C                     l4380:
 15101   00369C  5046               	movf	___fldiv@sign^0,w,c
 15102   00369E  1239               	iorwf	(___fldiv@b+3)^0,f,c
 15103   0036A0  C036  F036         	movff	___fldiv@b,?___fldiv
 15104   0036A4  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
 15105   0036A8  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
 15106   0036AC  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
 15107   0036B0  EF9D  F01C         	goto	l1099
 15108   0036B4                     l4386:
 15109   0036B4  504D               	movf	___fldiv@bexp^0,w,c
 15110   0036B6  A4D8               	btfss	status,2,c
 15111   0036B8  EF60  F01B         	goto	u3231
 15112   0036BC  EF62  F01B         	goto	u3230
 15113   0036C0                     u3231:
 15114   0036C0  EF6C  F01B         	goto	l4394
 15115   0036C4                     u3230:
 15116   0036C4  0E00               	movlw	0
 15117   0036C6  6E36               	movwf	?___fldiv^0,c
 15118   0036C8  0E00               	movlw	0
 15119   0036CA  6E37               	movwf	(?___fldiv+1)^0,c
 15120   0036CC  0E00               	movlw	0
 15121   0036CE  6E38               	movwf	(?___fldiv+2)^0,c
 15122   0036D0  0E00               	movlw	0
 15123   0036D2  6E39               	movwf	(?___fldiv+3)^0,c
 15124   0036D4  EF9D  F01C         	goto	l1099
 15125   0036D8                     l4394:
 15126   0036D8  504E               	movf	___fldiv@aexp^0,w,c
 15127   0036DA  C04D  F03E         	movff	___fldiv@bexp,??___fldiv
 15128   0036DE  6A3F               	clrf	(??___fldiv+1)^0,c
 15129   0036E0  5E3E               	subwf	??___fldiv^0,f,c
 15130   0036E2  0E00               	movlw	0
 15131   0036E4  5A3F               	subwfb	(??___fldiv+1)^0,f,c
 15132   0036E6  0E7F               	movlw	127
 15133   0036E8  243E               	addwf	??___fldiv^0,w,c
 15134   0036EA  6E47               	movwf	___fldiv@new_exp^0,c
 15135   0036EC  0E00               	movlw	0
 15136   0036EE  203F               	addwfc	(??___fldiv+1)^0,w,c
 15137   0036F0  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 15138   0036F2  C036  F042         	movff	___fldiv@b,___fldiv@rem
 15139   0036F6  C037  F043         	movff	___fldiv@b+1,___fldiv@rem+1
 15140   0036FA  C038  F044         	movff	___fldiv@b+2,___fldiv@rem+2
 15141   0036FE  C039  F045         	movff	___fldiv@b+3,___fldiv@rem+3
 15142   003702  0E00               	movlw	0
 15143   003704  6E36               	movwf	___fldiv@b^0,c
 15144   003706  0E00               	movlw	0
 15145   003708  6E37               	movwf	(___fldiv@b+1)^0,c
 15146   00370A  0E00               	movlw	0
 15147   00370C  6E38               	movwf	(___fldiv@b+2)^0,c
 15148   00370E  0E00               	movlw	0
 15149   003710  6E39               	movwf	(___fldiv@b+3)^0,c
 15150   003712  0E00               	movlw	0
 15151   003714  6E49               	movwf	___fldiv@grs^0,c
 15152   003716  0E00               	movlw	0
 15153   003718  6E4A               	movwf	(___fldiv@grs+1)^0,c
 15154   00371A  0E00               	movlw	0
 15155   00371C  6E4B               	movwf	(___fldiv@grs+2)^0,c
 15156   00371E  0E00               	movlw	0
 15157   003720  6E4C               	movwf	(___fldiv@grs+3)^0,c
 15158   003722  0E00               	movlw	0
 15159   003724  6E4E               	movwf	___fldiv@aexp^0,c
 15160   003726  EFCD  F01B         	goto	l1101
 15161   00372A                     l4404:
 15162   00372A  504E               	movf	___fldiv@aexp^0,w,c
 15163   00372C  B4D8               	btfsc	status,2,c
 15164   00372E  EF9B  F01B         	goto	u3241
 15165   003732  EF9D  F01B         	goto	u3240
 15166   003736                     u3241:
 15167   003736  EFB4  F01B         	goto	l4412
 15168   00373A                     u3240:
 15169   00373A  90D8               	bcf	status,0,c
 15170   00373C  3642               	rlcf	___fldiv@rem^0,f,c
 15171   00373E  3643               	rlcf	(___fldiv@rem+1)^0,f,c
 15172   003740  3644               	rlcf	(___fldiv@rem+2)^0,f,c
 15173   003742  3645               	rlcf	(___fldiv@rem+3)^0,f,c
 15174   003744  90D8               	bcf	status,0,c
 15175   003746  3636               	rlcf	___fldiv@b^0,f,c
 15176   003748  3637               	rlcf	(___fldiv@b+1)^0,f,c
 15177   00374A  3638               	rlcf	(___fldiv@b+2)^0,f,c
 15178   00374C  3639               	rlcf	(___fldiv@b+3)^0,f,c
 15179   00374E  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 15180   003750  EFAC  F01B         	goto	u3251
 15181   003754  EFAE  F01B         	goto	u3250
 15182   003758                     u3251:
 15183   003758  EFAF  F01B         	goto	l1104
 15184   00375C                     u3250:
 15185   00375C  8036               	bsf	___fldiv@b^0,0,c
 15186   00375E                     l1104:
 15187   00375E  90D8               	bcf	status,0,c
 15188   003760  3649               	rlcf	___fldiv@grs^0,f,c
 15189   003762  364A               	rlcf	(___fldiv@grs+1)^0,f,c
 15190   003764  364B               	rlcf	(___fldiv@grs+2)^0,f,c
 15191   003766  364C               	rlcf	(___fldiv@grs+3)^0,f,c
 15192   003768                     l4412:
 15193   003768  503A               	movf	___fldiv@a^0,w,c
 15194   00376A  5C42               	subwf	___fldiv@rem^0,w,c
 15195   00376C  503B               	movf	(___fldiv@a+1)^0,w,c
 15196   00376E  5843               	subwfb	(___fldiv@rem+1)^0,w,c
 15197   003770  503C               	movf	(___fldiv@a+2)^0,w,c
 15198   003772  5844               	subwfb	(___fldiv@rem+2)^0,w,c
 15199   003774  503D               	movf	(___fldiv@a+3)^0,w,c
 15200   003776  5845               	subwfb	(___fldiv@rem+3)^0,w,c
 15201   003778  A0D8               	btfss	status,0,c
 15202   00377A  EFC1  F01B         	goto	u3261
 15203   00377E  EFC3  F01B         	goto	u3260
 15204   003782                     u3261:
 15205   003782  EFCC  F01B         	goto	l4418
 15206   003786                     u3260:
 15207   003786  8C4C               	bsf	(___fldiv@grs+3)^0,6,c
 15208   003788  503A               	movf	___fldiv@a^0,w,c
 15209   00378A  5E42               	subwf	___fldiv@rem^0,f,c
 15210   00378C  503B               	movf	(___fldiv@a+1)^0,w,c
 15211   00378E  5A43               	subwfb	(___fldiv@rem+1)^0,f,c
 15212   003790  503C               	movf	(___fldiv@a+2)^0,w,c
 15213   003792  5A44               	subwfb	(___fldiv@rem+2)^0,f,c
 15214   003794  503D               	movf	(___fldiv@a+3)^0,w,c
 15215   003796  5A45               	subwfb	(___fldiv@rem+3)^0,f,c
 15216   003798                     l4418:
 15217   003798  2A4E               	incf	___fldiv@aexp^0,f,c
 15218   00379A                     l1101:
 15219   00379A  0E19               	movlw	25
 15220   00379C  644E               	cpfsgt	___fldiv@aexp^0,c
 15221   00379E  EFD3  F01B         	goto	u3271
 15222   0037A2  EFD5  F01B         	goto	u3270
 15223   0037A6                     u3271:
 15224   0037A6  EF95  F01B         	goto	l4404
 15225   0037AA                     u3270:
 15226   0037AA  5042               	movf	___fldiv@rem^0,w,c
 15227   0037AC  1043               	iorwf	(___fldiv@rem+1)^0,w,c
 15228   0037AE  1044               	iorwf	(___fldiv@rem+2)^0,w,c
 15229   0037B0  1045               	iorwf	(___fldiv@rem+3)^0,w,c
 15230   0037B2  B4D8               	btfsc	status,2,c
 15231   0037B4  EFDE  F01B         	goto	u3281
 15232   0037B8  EFE0  F01B         	goto	u3280
 15233   0037BC                     u3281:
 15234   0037BC  EFF8  F01B         	goto	l4430
 15235   0037C0                     u3280:
 15236   0037C0  8049               	bsf	___fldiv@grs^0,0,c
 15237   0037C2  EFF8  F01B         	goto	l4430
 15238   0037C6                     l4424:
 15239   0037C6  90D8               	bcf	status,0,c
 15240   0037C8  3636               	rlcf	___fldiv@b^0,f,c
 15241   0037CA  3637               	rlcf	(___fldiv@b+1)^0,f,c
 15242   0037CC  3638               	rlcf	(___fldiv@b+2)^0,f,c
 15243   0037CE  3639               	rlcf	(___fldiv@b+3)^0,f,c
 15244   0037D0  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 15245   0037D2  EFED  F01B         	goto	u3291
 15246   0037D6  EFEF  F01B         	goto	u3290
 15247   0037DA                     u3291:
 15248   0037DA  EFF0  F01B         	goto	l1110
 15249   0037DE                     u3290:
 15250   0037DE  8036               	bsf	___fldiv@b^0,0,c
 15251   0037E0                     l1110:
 15252   0037E0  90D8               	bcf	status,0,c
 15253   0037E2  3649               	rlcf	___fldiv@grs^0,f,c
 15254   0037E4  364A               	rlcf	(___fldiv@grs+1)^0,f,c
 15255   0037E6  364B               	rlcf	(___fldiv@grs+2)^0,f,c
 15256   0037E8  364C               	rlcf	(___fldiv@grs+3)^0,f,c
 15257   0037EA  0647               	decf	___fldiv@new_exp^0,f,c
 15258   0037EC  A0D8               	btfss	status,0,c
 15259   0037EE  0648               	decf	(___fldiv@new_exp+1)^0,f,c
 15260   0037F0                     l4430:
 15261   0037F0  AE38               	btfss	(___fldiv@b+2)^0,7,c
 15262   0037F2  EFFD  F01B         	goto	u3301
 15263   0037F6  EFFF  F01B         	goto	u3300
 15264   0037FA                     u3301:
 15265   0037FA  EFE3  F01B         	goto	l4424
 15266   0037FE                     u3300:
 15267   0037FE  0E00               	movlw	0
 15268   003800  6E4E               	movwf	___fldiv@aexp^0,c
 15269   003802  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 15270   003804  EF06  F01C         	goto	u3311
 15271   003808  EF08  F01C         	goto	u3310
 15272   00380C                     u3311:
 15273   00380C  EF2C  F01C         	goto	l1112
 15274   003810                     u3310:
 15275   003810  0EFF               	movlw	255
 15276   003812  1449               	andwf	___fldiv@grs^0,w,c
 15277   003814  6E3E               	movwf	??___fldiv^0,c
 15278   003816  0EFF               	movlw	255
 15279   003818  144A               	andwf	(___fldiv@grs+1)^0,w,c
 15280   00381A  6E3F               	movwf	(??___fldiv+1)^0,c
 15281   00381C  0EFF               	movlw	255
 15282   00381E  144B               	andwf	(___fldiv@grs+2)^0,w,c
 15283   003820  6E40               	movwf	(??___fldiv+2)^0,c
 15284   003822  0E7F               	movlw	127
 15285   003824  144C               	andwf	(___fldiv@grs+3)^0,w,c
 15286   003826  6E41               	movwf	(??___fldiv+3)^0,c
 15287   003828  503E               	movf	??___fldiv^0,w,c
 15288   00382A  103F               	iorwf	(??___fldiv+1)^0,w,c
 15289   00382C  1040               	iorwf	(??___fldiv+2)^0,w,c
 15290   00382E  1041               	iorwf	(??___fldiv+3)^0,w,c
 15291   003830  B4D8               	btfsc	status,2,c
 15292   003832  EF1D  F01C         	goto	u3321
 15293   003836  EF1F  F01C         	goto	u3320
 15294   00383A                     u3321:
 15295   00383A  EF23  F01C         	goto	l1113
 15296   00383E                     u3320:
 15297   00383E                     l4438:
 15298   00383E  0E01               	movlw	1
 15299   003840  6E4E               	movwf	___fldiv@aexp^0,c
 15300   003842  EF2C  F01C         	goto	l1112
 15301   003846                     l1113:
 15302   003846  A036               	btfss	___fldiv@b^0,0,c
 15303   003848  EF28  F01C         	goto	u3331
 15304   00384C  EF2A  F01C         	goto	u3330
 15305   003850                     u3331:
 15306   003850  EF2C  F01C         	goto	l1112
 15307   003854                     u3330:
 15308   003854  EF1F  F01C         	goto	l4438
 15309   003858                     l1112:
 15310   003858  504E               	movf	___fldiv@aexp^0,w,c
 15311   00385A  B4D8               	btfsc	status,2,c
 15312   00385C  EF32  F01C         	goto	u3341
 15313   003860  EF34  F01C         	goto	u3340
 15314   003864                     u3341:
 15315   003864  EF58  F01C         	goto	l4450
 15316   003868                     u3340:
 15317   003868  0E01               	movlw	1
 15318   00386A  2636               	addwf	___fldiv@b^0,f,c
 15319   00386C  0E00               	movlw	0
 15320   00386E  2237               	addwfc	(___fldiv@b+1)^0,f,c
 15321   003870  2238               	addwfc	(___fldiv@b+2)^0,f,c
 15322   003872  2239               	addwfc	(___fldiv@b+3)^0,f,c
 15323   003874  A039               	btfss	(___fldiv@b+3)^0,0,c
 15324   003876  EF3F  F01C         	goto	u3351
 15325   00387A  EF41  F01C         	goto	u3350
 15326   00387E                     u3351:
 15327   00387E  EF58  F01C         	goto	l4450
 15328   003882                     u3350:
 15329   003882  C036  F03E         	movff	___fldiv@b,??___fldiv
 15330   003886  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
 15331   00388A  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
 15332   00388E  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
 15333   003892  3441               	rlcf	(??___fldiv+3)^0,w,c
 15334   003894  3241               	rrcf	(??___fldiv+3)^0,f,c
 15335   003896  3240               	rrcf	(??___fldiv+2)^0,f,c
 15336   003898  323F               	rrcf	(??___fldiv+1)^0,f,c
 15337   00389A  323E               	rrcf	??___fldiv^0,f,c
 15338   00389C  C03E  F036         	movff	??___fldiv,___fldiv@b
 15339   0038A0  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
 15340   0038A4  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
 15341   0038A8  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
 15342   0038AC  4A47               	infsnz	___fldiv@new_exp^0,f,c
 15343   0038AE  2A48               	incf	(___fldiv@new_exp+1)^0,f,c
 15344   0038B0                     l4450:
 15345   0038B0  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15346   0038B2  EF63  F01C         	goto	u3361
 15347   0038B6  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 15348   0038B8  E108               	bnz	u3360
 15349   0038BA  2847               	incf	___fldiv@new_exp^0,w,c
 15350   0038BC  A0D8               	btfss	status,0,c
 15351   0038BE  EF63  F01C         	goto	u3361
 15352   0038C2  EF65  F01C         	goto	u3360
 15353   0038C6                     u3361:
 15354   0038C6  EF70  F01C         	goto	l4454
 15355   0038CA                     u3360:
 15356   0038CA  0E00               	movlw	0
 15357   0038CC  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 15358   0038CE  6847               	setf	___fldiv@new_exp^0,c
 15359   0038D0  0E00               	movlw	0
 15360   0038D2  6E36               	movwf	___fldiv@b^0,c
 15361   0038D4  0E00               	movlw	0
 15362   0038D6  6E37               	movwf	(___fldiv@b+1)^0,c
 15363   0038D8  0E00               	movlw	0
 15364   0038DA  6E38               	movwf	(___fldiv@b+2)^0,c
 15365   0038DC  0E00               	movlw	0
 15366   0038DE  6E39               	movwf	(___fldiv@b+3)^0,c
 15367   0038E0                     l4454:
 15368   0038E0  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15369   0038E2  EF7D  F01C         	goto	u3370
 15370   0038E6  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 15371   0038E8  E106               	bnz	u3371
 15372   0038EA  0447               	decf	___fldiv@new_exp^0,w,c
 15373   0038EC  B0D8               	btfsc	status,0,c
 15374   0038EE  EF7B  F01C         	goto	u3371
 15375   0038F2  EF7D  F01C         	goto	u3370
 15376   0038F6                     u3371:
 15377   0038F6  EF8B  F01C         	goto	l4458
 15378   0038FA                     u3370:
 15379   0038FA  0E00               	movlw	0
 15380   0038FC  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 15381   0038FE  0E00               	movlw	0
 15382   003900  6E47               	movwf	___fldiv@new_exp^0,c
 15383   003902  0E00               	movlw	0
 15384   003904  6E36               	movwf	___fldiv@b^0,c
 15385   003906  0E00               	movlw	0
 15386   003908  6E37               	movwf	(___fldiv@b+1)^0,c
 15387   00390A  0E00               	movlw	0
 15388   00390C  6E38               	movwf	(___fldiv@b+2)^0,c
 15389   00390E  0E00               	movlw	0
 15390   003910  6E39               	movwf	(___fldiv@b+3)^0,c
 15391   003912  0E00               	movlw	0
 15392   003914  6E46               	movwf	___fldiv@sign^0,c
 15393   003916                     l4458:
 15394   003916  C047  F04D         	movff	___fldiv@new_exp,___fldiv@bexp
 15395   00391A  A04D               	btfss	___fldiv@bexp^0,0,c
 15396   00391C  EF92  F01C         	goto	u3381
 15397   003920  EF94  F01C         	goto	u3380
 15398   003924                     u3381:
 15399   003924  EF97  F01C         	goto	l4464
 15400   003928                     u3380:
 15401   003928  8E38               	bsf	(___fldiv@b+2)^0,7,c
 15402   00392A  EF98  F01C         	goto	l4466
 15403   00392E                     l4464:
 15404   00392E  9E38               	bcf	(___fldiv@b+2)^0,7,c
 15405   003930                     l4466:
 15406   003930  90D8               	bcf	status,0,c
 15407   003932  304D               	rrcf	___fldiv@bexp^0,w,c
 15408   003934  6E39               	movwf	(___fldiv@b+3)^0,c
 15409   003936  EF4E  F01B         	goto	l4380
 15410   00393A                     l1099:
 15411   00393A  0012               	return		;funcret
 15412   00393C                     __end_of___fldiv:
 15413                           	callstack 0
 15414                           
 15415 ;; *************** function ___fladd *****************
 15416 ;; Defined at:
 15417 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  b               4   29[COMRAM] unsigned char 
 15420 ;;  a               4   33[COMRAM] unsigned char 
 15421 ;; Auto vars:     Size  Location     Type
 15422 ;;  grs             1   44[COMRAM] unsigned char 
 15423 ;;  bexp            1   43[COMRAM] unsigned char 
 15424 ;;  aexp            1   42[COMRAM] unsigned char 
 15425 ;;  signs           1   41[COMRAM] unsigned char 
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  4   29[COMRAM] unsigned char 
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15435 ;;      Params:         8       0       0       0       0       0       0       0       0
 15436 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15437 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15438 ;;      Totals:        16       0       0       0       0       0       0       0       0
 15439 ;;Total ram usage:       16 bytes
 15440 ;; Hardware stack levels used: 1
 15441 ;; Hardware stack levels required when called: 2
 15442 ;; This function calls:
 15443 ;;		Nothing
 15444 ;; This function is called by:
 15445 ;;		_OP_operador_Defuz
 15446 ;;		_main
 15447 ;;		___flsub
 15448 ;;		_efgtoa
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           	psect	text74
 15453   002CB8                     __ptext74:
 15454                           	callstack 0
 15455   002CB8                     ___fladd:
 15456                           	callstack 23
 15457   002CB8  5021               	movf	(___fladd@b+3)^0,w,c
 15458   002CBA  0B80               	andlw	128
 15459   002CBC  6E2A               	movwf	___fladd@signs^0,c
 15460   002CBE  5021               	movf	(___fladd@b+3)^0,w,c
 15461   002CC0  2421               	addwf	(___fladd@b+3)^0,w,c
 15462   002CC2  6E2C               	movwf	___fladd@bexp^0,c
 15463   002CC4  AE20               	btfss	(___fladd@b+2)^0,7,c
 15464   002CC6  EF67  F016         	goto	u2761
 15465   002CCA  EF69  F016         	goto	u2760
 15466   002CCE                     u2761:
 15467   002CCE  EF6A  F016         	goto	l4126
 15468   002CD2                     u2760:
 15469   002CD2  802C               	bsf	___fladd@bexp^0,0,c
 15470   002CD4                     l4126:
 15471   002CD4  502C               	movf	___fladd@bexp^0,w,c
 15472   002CD6  B4D8               	btfsc	status,2,c
 15473   002CD8  EF70  F016         	goto	u2771
 15474   002CDC  EF72  F016         	goto	u2770
 15475   002CE0                     u2771:
 15476   002CE0  EF87  F016         	goto	l4136
 15477   002CE4                     u2770:
 15478   002CE4  282C               	incf	___fladd@bexp^0,w,c
 15479   002CE6  A4D8               	btfss	status,2,c
 15480   002CE8  EF78  F016         	goto	u2781
 15481   002CEC  EF7A  F016         	goto	u2780
 15482   002CF0                     u2781:
 15483   002CF0  EF82  F016         	goto	l4132
 15484   002CF4                     u2780:
 15485   002CF4  0E00               	movlw	0
 15486   002CF6  6E1E               	movwf	___fladd@b^0,c
 15487   002CF8  0E00               	movlw	0
 15488   002CFA  6E1F               	movwf	(___fladd@b+1)^0,c
 15489   002CFC  0E00               	movlw	0
 15490   002CFE  6E20               	movwf	(___fladd@b+2)^0,c
 15491   002D00  0E00               	movlw	0
 15492   002D02  6E21               	movwf	(___fladd@b+3)^0,c
 15493   002D04                     l4132:
 15494   002D04  8E20               	bsf	(___fladd@b+2)^0,7,c
 15495   002D06  0E00               	movlw	0
 15496   002D08  6E21               	movwf	(___fladd@b+3)^0,c
 15497   002D0A  EF8F  F016         	goto	l4138
 15498   002D0E                     l4136:
 15499   002D0E  0E00               	movlw	0
 15500   002D10  6E1E               	movwf	___fladd@b^0,c
 15501   002D12  0E00               	movlw	0
 15502   002D14  6E1F               	movwf	(___fladd@b+1)^0,c
 15503   002D16  0E00               	movlw	0
 15504   002D18  6E20               	movwf	(___fladd@b+2)^0,c
 15505   002D1A  0E00               	movlw	0
 15506   002D1C  6E21               	movwf	(___fladd@b+3)^0,c
 15507   002D1E                     l4138:
 15508   002D1E  5025               	movf	(___fladd@a+3)^0,w,c
 15509   002D20  0B80               	andlw	128
 15510   002D22  6E2B               	movwf	___fladd@aexp^0,c
 15511   002D24  502A               	movf	___fladd@signs^0,w,c
 15512   002D26  182B               	xorwf	___fladd@aexp^0,w,c
 15513   002D28  B4D8               	btfsc	status,2,c
 15514   002D2A  EF99  F016         	goto	u2791
 15515   002D2E  EF9B  F016         	goto	u2790
 15516   002D32                     u2791:
 15517   002D32  EF9C  F016         	goto	l4144
 15518   002D36                     u2790:
 15519   002D36  8C2A               	bsf	___fladd@signs^0,6,c
 15520   002D38                     l4144:
 15521   002D38  5025               	movf	(___fladd@a+3)^0,w,c
 15522   002D3A  2425               	addwf	(___fladd@a+3)^0,w,c
 15523   002D3C  6E2B               	movwf	___fladd@aexp^0,c
 15524   002D3E  AE24               	btfss	(___fladd@a+2)^0,7,c
 15525   002D40  EFA4  F016         	goto	u2801
 15526   002D44  EFA6  F016         	goto	u2800
 15527   002D48                     u2801:
 15528   002D48  EFA7  F016         	goto	l4150
 15529   002D4C                     u2800:
 15530   002D4C  802B               	bsf	___fladd@aexp^0,0,c
 15531   002D4E                     l4150:
 15532   002D4E  502B               	movf	___fladd@aexp^0,w,c
 15533   002D50  B4D8               	btfsc	status,2,c
 15534   002D52  EFAD  F016         	goto	u2811
 15535   002D56  EFAF  F016         	goto	u2810
 15536   002D5A                     u2811:
 15537   002D5A  EFC4  F016         	goto	l4160
 15538   002D5E                     u2810:
 15539   002D5E  282B               	incf	___fladd@aexp^0,w,c
 15540   002D60  A4D8               	btfss	status,2,c
 15541   002D62  EFB5  F016         	goto	u2821
 15542   002D66  EFB7  F016         	goto	u2820
 15543   002D6A                     u2821:
 15544   002D6A  EFBF  F016         	goto	l4156
 15545   002D6E                     u2820:
 15546   002D6E  0E00               	movlw	0
 15547   002D70  6E22               	movwf	___fladd@a^0,c
 15548   002D72  0E00               	movlw	0
 15549   002D74  6E23               	movwf	(___fladd@a+1)^0,c
 15550   002D76  0E00               	movlw	0
 15551   002D78  6E24               	movwf	(___fladd@a+2)^0,c
 15552   002D7A  0E00               	movlw	0
 15553   002D7C  6E25               	movwf	(___fladd@a+3)^0,c
 15554   002D7E                     l4156:
 15555   002D7E  8E24               	bsf	(___fladd@a+2)^0,7,c
 15556   002D80  0E00               	movlw	0
 15557   002D82  6E25               	movwf	(___fladd@a+3)^0,c
 15558   002D84  EFCC  F016         	goto	l4162
 15559   002D88                     l4160:
 15560   002D88  0E00               	movlw	0
 15561   002D8A  6E22               	movwf	___fladd@a^0,c
 15562   002D8C  0E00               	movlw	0
 15563   002D8E  6E23               	movwf	(___fladd@a+1)^0,c
 15564   002D90  0E00               	movlw	0
 15565   002D92  6E24               	movwf	(___fladd@a+2)^0,c
 15566   002D94  0E00               	movlw	0
 15567   002D96  6E25               	movwf	(___fladd@a+3)^0,c
 15568   002D98                     l4162:
 15569   002D98  502C               	movf	___fladd@bexp^0,w,c
 15570   002D9A  5C2B               	subwf	___fladd@aexp^0,w,c
 15571   002D9C  B0D8               	btfsc	status,0,c
 15572   002D9E  EFD3  F016         	goto	u2831
 15573   002DA2  EFD5  F016         	goto	u2830
 15574   002DA6                     u2831:
 15575   002DA6  EFFC  F016         	goto	l4198
 15576   002DAA                     u2830:
 15577   002DAA  AC2A               	btfss	___fladd@signs^0,6,c
 15578   002DAC  EFDA  F016         	goto	u2841
 15579   002DB0  EFDC  F016         	goto	u2840
 15580   002DB4                     u2841:
 15581   002DB4  EFDE  F016         	goto	l4168
 15582   002DB8                     u2840:
 15583   002DB8  0E80               	movlw	128
 15584   002DBA  1A2A               	xorwf	___fladd@signs^0,f,c
 15585   002DBC                     l4168:
 15586   002DBC  C02C  F02D         	movff	___fladd@bexp,___fladd@grs
 15587   002DC0  C02B  F02C         	movff	___fladd@aexp,___fladd@bexp
 15588   002DC4  C02D  F02B         	movff	___fladd@grs,___fladd@aexp
 15589   002DC8  C01E  F02D         	movff	___fladd@b,___fladd@grs
 15590   002DCC  C022  F01E         	movff	___fladd@a,___fladd@b
 15591   002DD0  C02D  F022         	movff	___fladd@grs,___fladd@a
 15592   002DD4  C01F  F02D         	movff	___fladd@b+1,___fladd@grs
 15593   002DD8  C023  F01F         	movff	___fladd@a+1,___fladd@b+1
 15594   002DDC  C02D  F023         	movff	___fladd@grs,___fladd@a+1
 15595   002DE0  C020  F02D         	movff	___fladd@b+2,___fladd@grs
 15596   002DE4  C024  F020         	movff	___fladd@a+2,___fladd@b+2
 15597   002DE8  C02D  F024         	movff	___fladd@grs,___fladd@a+2
 15598   002DEC  C021  F02D         	movff	___fladd@b+3,___fladd@grs
 15599   002DF0  C025  F021         	movff	___fladd@a+3,___fladd@b+3
 15600   002DF4  C02D  F025         	movff	___fladd@grs,___fladd@a+3
 15601   002DF8                     l4198:
 15602   002DF8  0E00               	movlw	0
 15603   002DFA  6E2D               	movwf	___fladd@grs^0,c
 15604   002DFC  502C               	movf	___fladd@bexp^0,w,c
 15605   002DFE  C02B  F026         	movff	___fladd@aexp,??___fladd
 15606   002E02  6A27               	clrf	(??___fladd+1)^0,c
 15607   002E04  5E26               	subwf	??___fladd^0,f,c
 15608   002E06  0E00               	movlw	0
 15609   002E08  5A27               	subwfb	(??___fladd+1)^0,f,c
 15610   002E0A  BE27               	btfsc	(??___fladd+1)^0,7,c
 15611   002E0C  EF11  F017         	goto	u2851
 15612   002E10  5027               	movf	(??___fladd+1)^0,w,c
 15613   002E12  E109               	bnz	u2850
 15614   002E14  0E1A               	movlw	26
 15615   002E16  5C26               	subwf	??___fladd^0,w,c
 15616   002E18  A0D8               	btfss	status,0,c
 15617   002E1A  EF11  F017         	goto	u2851
 15618   002E1E  EF13  F017         	goto	u2850
 15619   002E22                     u2851:
 15620   002E22  EF4A  F017         	goto	l1046
 15621   002E26                     u2850:
 15622   002E26  501E               	movf	___fladd@b^0,w,c
 15623   002E28  101F               	iorwf	(___fladd@b+1)^0,w,c
 15624   002E2A  1020               	iorwf	(___fladd@b+2)^0,w,c
 15625   002E2C  1021               	iorwf	(___fladd@b+3)^0,w,c
 15626   002E2E  A4D8               	btfss	status,2,c
 15627   002E30  EF1C  F017         	goto	u2861
 15628   002E34  EF1F  F017         	goto	u2860
 15629   002E38                     u2861:
 15630   002E38  0E01               	movlw	1
 15631   002E3A  EF20  F017         	goto	u2870
 15632   002E3E                     u2860:
 15633   002E3E  0E00               	movlw	0
 15634   002E40                     u2870:
 15635   002E40  6E2D               	movwf	___fladd@grs^0,c
 15636   002E42  0E00               	movlw	0
 15637   002E44  6E1E               	movwf	___fladd@b^0,c
 15638   002E46  0E00               	movlw	0
 15639   002E48  6E1F               	movwf	(___fladd@b+1)^0,c
 15640   002E4A  0E00               	movlw	0
 15641   002E4C  6E20               	movwf	(___fladd@b+2)^0,c
 15642   002E4E  0E00               	movlw	0
 15643   002E50  6E21               	movwf	(___fladd@b+3)^0,c
 15644   002E52  C02B  F02C         	movff	___fladd@aexp,___fladd@bexp
 15645   002E56  EF53  F017         	goto	l1045
 15646   002E5A                     l1047:
 15647   002E5A  A02D               	btfss	___fladd@grs^0,0,c
 15648   002E5C  EF32  F017         	goto	u2881
 15649   002E60  EF34  F017         	goto	u2880
 15650   002E64                     u2881:
 15651   002E64  EF3A  F017         	goto	l4210
 15652   002E68                     u2880:
 15653   002E68  90D8               	bcf	status,0,c
 15654   002E6A  302D               	rrcf	___fladd@grs^0,w,c
 15655   002E6C  0901               	iorlw	1
 15656   002E6E  6E2D               	movwf	___fladd@grs^0,c
 15657   002E70  EF3C  F017         	goto	l4212
 15658   002E74                     l4210:
 15659   002E74  90D8               	bcf	status,0,c
 15660   002E76  322D               	rrcf	___fladd@grs^0,f,c
 15661   002E78                     l4212:
 15662   002E78  A01E               	btfss	___fladd@b^0,0,c
 15663   002E7A  EF41  F017         	goto	u2891
 15664   002E7E  EF43  F017         	goto	u2890
 15665   002E82                     u2891:
 15666   002E82  EF44  F017         	goto	l4216
 15667   002E86                     u2890:
 15668   002E86  8E2D               	bsf	___fladd@grs^0,7,c
 15669   002E88                     l4216:
 15670   002E88  3421               	rlcf	(___fladd@b+3)^0,w,c
 15671   002E8A  3221               	rrcf	(___fladd@b+3)^0,f,c
 15672   002E8C  3220               	rrcf	(___fladd@b+2)^0,f,c
 15673   002E8E  321F               	rrcf	(___fladd@b+1)^0,f,c
 15674   002E90  321E               	rrcf	___fladd@b^0,f,c
 15675   002E92  2A2C               	incf	___fladd@bexp^0,f,c
 15676   002E94                     l1046:
 15677   002E94  502B               	movf	___fladd@aexp^0,w,c
 15678   002E96  5C2C               	subwf	___fladd@bexp^0,w,c
 15679   002E98  A0D8               	btfss	status,0,c
 15680   002E9A  EF51  F017         	goto	u2901
 15681   002E9E  EF53  F017         	goto	u2900
 15682   002EA2                     u2901:
 15683   002EA2  EF2D  F017         	goto	l1047
 15684   002EA6                     u2900:
 15685   002EA6                     l1045:
 15686   002EA6  BC2A               	btfsc	___fladd@signs^0,6,c
 15687   002EA8  EF58  F017         	goto	u2911
 15688   002EAC  EF5A  F017         	goto	u2910
 15689   002EB0                     u2911:
 15690   002EB0  EF9A  F017         	goto	l4244
 15691   002EB4                     u2910:
 15692   002EB4  502C               	movf	___fladd@bexp^0,w,c
 15693   002EB6  A4D8               	btfss	status,2,c
 15694   002EB8  EF60  F017         	goto	u2921
 15695   002EBC  EF62  F017         	goto	u2920
 15696   002EC0                     u2921:
 15697   002EC0  EF6C  F017         	goto	l4226
 15698   002EC4                     u2920:
 15699   002EC4  0E00               	movlw	0
 15700   002EC6  6E1E               	movwf	?___fladd^0,c
 15701   002EC8  0E00               	movlw	0
 15702   002ECA  6E1F               	movwf	(?___fladd+1)^0,c
 15703   002ECC  0E00               	movlw	0
 15704   002ECE  6E20               	movwf	(?___fladd+2)^0,c
 15705   002ED0  0E00               	movlw	0
 15706   002ED2  6E21               	movwf	(?___fladd+3)^0,c
 15707   002ED4  EFBB  F018         	goto	l1054
 15708   002ED8                     l4226:
 15709   002ED8  5022               	movf	___fladd@a^0,w,c
 15710   002EDA  261E               	addwf	___fladd@b^0,f,c
 15711   002EDC  5023               	movf	(___fladd@a+1)^0,w,c
 15712   002EDE  221F               	addwfc	(___fladd@b+1)^0,f,c
 15713   002EE0  5024               	movf	(___fladd@a+2)^0,w,c
 15714   002EE2  2220               	addwfc	(___fladd@b+2)^0,f,c
 15715   002EE4  5025               	movf	(___fladd@a+3)^0,w,c
 15716   002EE6  2221               	addwfc	(___fladd@b+3)^0,f,c
 15717   002EE8  A021               	btfss	(___fladd@b+3)^0,0,c
 15718   002EEA  EF79  F017         	goto	u2931
 15719   002EEE  EF7B  F017         	goto	u2930
 15720   002EF2                     u2931:
 15721   002EF2  EF27  F018         	goto	l4280
 15722   002EF6                     u2930:
 15723   002EF6  A02D               	btfss	___fladd@grs^0,0,c
 15724   002EF8  EF80  F017         	goto	u2941
 15725   002EFC  EF82  F017         	goto	u2940
 15726   002F00                     u2941:
 15727   002F00  EF88  F017         	goto	l4234
 15728   002F04                     u2940:
 15729   002F04  90D8               	bcf	status,0,c
 15730   002F06  302D               	rrcf	___fladd@grs^0,w,c
 15731   002F08  0901               	iorlw	1
 15732   002F0A  6E2D               	movwf	___fladd@grs^0,c
 15733   002F0C  EF8A  F017         	goto	l4236
 15734   002F10                     l4234:
 15735   002F10  90D8               	bcf	status,0,c
 15736   002F12  322D               	rrcf	___fladd@grs^0,f,c
 15737   002F14                     l4236:
 15738   002F14  A01E               	btfss	___fladd@b^0,0,c
 15739   002F16  EF8F  F017         	goto	u2951
 15740   002F1A  EF91  F017         	goto	u2950
 15741   002F1E                     u2951:
 15742   002F1E  EF92  F017         	goto	l4240
 15743   002F22                     u2950:
 15744   002F22  8E2D               	bsf	___fladd@grs^0,7,c
 15745   002F24                     l4240:
 15746   002F24  3421               	rlcf	(___fladd@b+3)^0,w,c
 15747   002F26  3221               	rrcf	(___fladd@b+3)^0,f,c
 15748   002F28  3220               	rrcf	(___fladd@b+2)^0,f,c
 15749   002F2A  321F               	rrcf	(___fladd@b+1)^0,f,c
 15750   002F2C  321E               	rrcf	___fladd@b^0,f,c
 15751   002F2E  2A2C               	incf	___fladd@bexp^0,f,c
 15752   002F30  EF27  F018         	goto	l4280
 15753   002F34                     l4244:
 15754   002F34  5022               	movf	___fladd@a^0,w,c
 15755   002F36  5C1E               	subwf	___fladd@b^0,w,c
 15756   002F38  5023               	movf	(___fladd@a+1)^0,w,c
 15757   002F3A  581F               	subwfb	(___fladd@b+1)^0,w,c
 15758   002F3C  5024               	movf	(___fladd@a+2)^0,w,c
 15759   002F3E  5820               	subwfb	(___fladd@b+2)^0,w,c
 15760   002F40  5021               	movf	(___fladd@b+3)^0,w,c
 15761   002F42  0A80               	xorlw	128
 15762   002F44  6E26               	movwf	??___fladd^0,c
 15763   002F46  5025               	movf	(___fladd@a+3)^0,w,c
 15764   002F48  0A80               	xorlw	128
 15765   002F4A  5826               	subwfb	??___fladd^0,w,c
 15766   002F4C  B0D8               	btfsc	status,0,c
 15767   002F4E  EFAB  F017         	goto	u2961
 15768   002F52  EFAD  F017         	goto	u2960
 15769   002F56                     u2961:
 15770   002F56  EFD8  F017         	goto	l4254
 15771   002F5A                     u2960:
 15772   002F5A  501E               	movf	___fladd@b^0,w,c
 15773   002F5C  5C22               	subwf	___fladd@a^0,w,c
 15774   002F5E  6E26               	movwf	??___fladd^0,c
 15775   002F60  501F               	movf	(___fladd@b+1)^0,w,c
 15776   002F62  5823               	subwfb	(___fladd@a+1)^0,w,c
 15777   002F64  6E27               	movwf	(??___fladd+1)^0,c
 15778   002F66  5020               	movf	(___fladd@b+2)^0,w,c
 15779   002F68  5824               	subwfb	(___fladd@a+2)^0,w,c
 15780   002F6A  6E28               	movwf	(??___fladd+2)^0,c
 15781   002F6C  5021               	movf	(___fladd@b+3)^0,w,c
 15782   002F6E  5825               	subwfb	(___fladd@a+3)^0,w,c
 15783   002F70  6E29               	movwf	(??___fladd+3)^0,c
 15784   002F72  0EFF               	movlw	255
 15785   002F74  2426               	addwf	??___fladd^0,w,c
 15786   002F76  6E1E               	movwf	___fladd@b^0,c
 15787   002F78  0EFF               	movlw	255
 15788   002F7A  2027               	addwfc	(??___fladd+1)^0,w,c
 15789   002F7C  6E1F               	movwf	(___fladd@b+1)^0,c
 15790   002F7E  0EFF               	movlw	255
 15791   002F80  2028               	addwfc	(??___fladd+2)^0,w,c
 15792   002F82  6E20               	movwf	(___fladd@b+2)^0,c
 15793   002F84  0EFF               	movlw	255
 15794   002F86  2029               	addwfc	(??___fladd+3)^0,w,c
 15795   002F88  6E21               	movwf	(___fladd@b+3)^0,c
 15796   002F8A  0E80               	movlw	128
 15797   002F8C  1A2A               	xorwf	___fladd@signs^0,f,c
 15798   002F8E  6C2D               	negf	___fladd@grs^0,c
 15799   002F90  502D               	movf	___fladd@grs^0,w,c
 15800   002F92  A4D8               	btfss	status,2,c
 15801   002F94  EFCE  F017         	goto	u2971
 15802   002F98  EFD0  F017         	goto	u2970
 15803   002F9C                     u2971:
 15804   002F9C  EFE0  F017         	goto	l1062
 15805   002FA0                     u2970:
 15806   002FA0  0E01               	movlw	1
 15807   002FA2  261E               	addwf	___fladd@b^0,f,c
 15808   002FA4  0E00               	movlw	0
 15809   002FA6  221F               	addwfc	(___fladd@b+1)^0,f,c
 15810   002FA8  2220               	addwfc	(___fladd@b+2)^0,f,c
 15811   002FAA  2221               	addwfc	(___fladd@b+3)^0,f,c
 15812   002FAC  EFE0  F017         	goto	l1062
 15813   002FB0                     l4254:
 15814   002FB0  5022               	movf	___fladd@a^0,w,c
 15815   002FB2  5E1E               	subwf	___fladd@b^0,f,c
 15816   002FB4  5023               	movf	(___fladd@a+1)^0,w,c
 15817   002FB6  5A1F               	subwfb	(___fladd@b+1)^0,f,c
 15818   002FB8  5024               	movf	(___fladd@a+2)^0,w,c
 15819   002FBA  5A20               	subwfb	(___fladd@b+2)^0,f,c
 15820   002FBC  5025               	movf	(___fladd@a+3)^0,w,c
 15821   002FBE  5A21               	subwfb	(___fladd@b+3)^0,f,c
 15822   002FC0                     l1062:
 15823   002FC0  501E               	movf	___fladd@b^0,w,c
 15824   002FC2  101F               	iorwf	(___fladd@b+1)^0,w,c
 15825   002FC4  1020               	iorwf	(___fladd@b+2)^0,w,c
 15826   002FC6  1021               	iorwf	(___fladd@b+3)^0,w,c
 15827   002FC8  A4D8               	btfss	status,2,c
 15828   002FCA  EFE9  F017         	goto	u2981
 15829   002FCE  EFEB  F017         	goto	u2980
 15830   002FD2                     u2981:
 15831   002FD2  EF20  F018         	goto	l4278
 15832   002FD6                     u2980:
 15833   002FD6  502D               	movf	___fladd@grs^0,w,c
 15834   002FD8  A4D8               	btfss	status,2,c
 15835   002FDA  EFF1  F017         	goto	u2991
 15836   002FDE  EFF3  F017         	goto	u2990
 15837   002FE2                     u2991:
 15838   002FE2  EF20  F018         	goto	l4278
 15839   002FE6                     u2990:
 15840   002FE6  0E00               	movlw	0
 15841   002FE8  6E1E               	movwf	?___fladd^0,c
 15842   002FEA  0E00               	movlw	0
 15843   002FEC  6E1F               	movwf	(?___fladd+1)^0,c
 15844   002FEE  0E00               	movlw	0
 15845   002FF0  6E20               	movwf	(?___fladd+2)^0,c
 15846   002FF2  0E00               	movlw	0
 15847   002FF4  6E21               	movwf	(?___fladd+3)^0,c
 15848   002FF6  EFBB  F018         	goto	l1054
 15849   002FFA                     l4262:
 15850   002FFA  90D8               	bcf	status,0,c
 15851   002FFC  361E               	rlcf	___fladd@b^0,f,c
 15852   002FFE  361F               	rlcf	(___fladd@b+1)^0,f,c
 15853   003000  3620               	rlcf	(___fladd@b+2)^0,f,c
 15854   003002  3621               	rlcf	(___fladd@b+3)^0,f,c
 15855   003004  AE2D               	btfss	___fladd@grs^0,7,c
 15856   003006  EF07  F018         	goto	u3001
 15857   00300A  EF09  F018         	goto	u3000
 15858   00300E                     u3001:
 15859   00300E  EF0A  F018         	goto	l4268
 15860   003012                     u3000:
 15861   003012  801E               	bsf	___fladd@b^0,0,c
 15862   003014                     l4268:
 15863   003014  A02D               	btfss	___fladd@grs^0,0,c
 15864   003016  EF0F  F018         	goto	u3011
 15865   00301A  EF11  F018         	goto	u3010
 15866   00301E                     u3011:
 15867   00301E  EF15  F018         	goto	l4272
 15868   003022                     u3010:
 15869   003022  80D8               	bsf	status,0,c
 15870   003024  362D               	rlcf	___fladd@grs^0,f,c
 15871   003026  EF17  F018         	goto	l4274
 15872   00302A                     l4272:
 15873   00302A  90D8               	bcf	status,0,c
 15874   00302C  362D               	rlcf	___fladd@grs^0,f,c
 15875   00302E                     l4274:
 15876   00302E  502C               	movf	___fladd@bexp^0,w,c
 15877   003030  B4D8               	btfsc	status,2,c
 15878   003032  EF1D  F018         	goto	u3021
 15879   003036  EF1F  F018         	goto	u3020
 15880   00303A                     u3021:
 15881   00303A  EF20  F018         	goto	l4278
 15882   00303E                     u3020:
 15883   00303E  062C               	decf	___fladd@bexp^0,f,c
 15884   003040                     l4278:
 15885   003040  AE20               	btfss	(___fladd@b+2)^0,7,c
 15886   003042  EF25  F018         	goto	u3031
 15887   003046  EF27  F018         	goto	u3030
 15888   00304A                     u3031:
 15889   00304A  EFFD  F017         	goto	l4262
 15890   00304E                     u3030:
 15891   00304E                     l4280:
 15892   00304E  0E00               	movlw	0
 15893   003050  6E2B               	movwf	___fladd@aexp^0,c
 15894   003052  AE2D               	btfss	___fladd@grs^0,7,c
 15895   003054  EF2E  F018         	goto	u3041
 15896   003058  EF30  F018         	goto	u3040
 15897   00305C                     u3041:
 15898   00305C  EF48  F018         	goto	l1071
 15899   003060                     u3040:
 15900   003060  C02D  F026         	movff	___fladd@grs,??___fladd
 15901   003064  0E7F               	movlw	127
 15902   003066  1626               	andwf	??___fladd^0,f,c
 15903   003068  B4D8               	btfsc	status,2,c
 15904   00306A  EF39  F018         	goto	u3051
 15905   00306E  EF3B  F018         	goto	u3050
 15906   003072                     u3051:
 15907   003072  EF3F  F018         	goto	l1072
 15908   003076                     u3050:
 15909   003076                     l4286:
 15910   003076  0E01               	movlw	1
 15911   003078  6E2B               	movwf	___fladd@aexp^0,c
 15912   00307A  EF48  F018         	goto	l1071
 15913   00307E                     l1072:
 15914   00307E  A01E               	btfss	___fladd@b^0,0,c
 15915   003080  EF44  F018         	goto	u3061
 15916   003084  EF46  F018         	goto	u3060
 15917   003088                     u3061:
 15918   003088  EF48  F018         	goto	l1071
 15919   00308C                     u3060:
 15920   00308C  EF3B  F018         	goto	l4286
 15921   003090                     l1071:
 15922   003090  502B               	movf	___fladd@aexp^0,w,c
 15923   003092  B4D8               	btfsc	status,2,c
 15924   003094  EF4E  F018         	goto	u3071
 15925   003098  EF50  F018         	goto	u3070
 15926   00309C                     u3071:
 15927   00309C  EF7B  F018         	goto	l4298
 15928   0030A0                     u3070:
 15929   0030A0  0E01               	movlw	1
 15930   0030A2  261E               	addwf	___fladd@b^0,f,c
 15931   0030A4  0E00               	movlw	0
 15932   0030A6  221F               	addwfc	(___fladd@b+1)^0,f,c
 15933   0030A8  2220               	addwfc	(___fladd@b+2)^0,f,c
 15934   0030AA  2221               	addwfc	(___fladd@b+3)^0,f,c
 15935   0030AC  A021               	btfss	(___fladd@b+3)^0,0,c
 15936   0030AE  EF5B  F018         	goto	u3081
 15937   0030B2  EF5D  F018         	goto	u3080
 15938   0030B6                     u3081:
 15939   0030B6  EF7B  F018         	goto	l4298
 15940   0030BA                     u3080:
 15941   0030BA  C01E  F026         	movff	___fladd@b,??___fladd
 15942   0030BE  C01F  F027         	movff	___fladd@b+1,??___fladd+1
 15943   0030C2  C020  F028         	movff	___fladd@b+2,??___fladd+2
 15944   0030C6  C021  F029         	movff	___fladd@b+3,??___fladd+3
 15945   0030CA  3429               	rlcf	(??___fladd+3)^0,w,c
 15946   0030CC  3229               	rrcf	(??___fladd+3)^0,f,c
 15947   0030CE  3228               	rrcf	(??___fladd+2)^0,f,c
 15948   0030D0  3227               	rrcf	(??___fladd+1)^0,f,c
 15949   0030D2  3226               	rrcf	??___fladd^0,f,c
 15950   0030D4  C026  F01E         	movff	??___fladd,___fladd@b
 15951   0030D8  C027  F01F         	movff	??___fladd+1,___fladd@b+1
 15952   0030DC  C028  F020         	movff	??___fladd+2,___fladd@b+2
 15953   0030E0  C029  F021         	movff	??___fladd+3,___fladd@b+3
 15954   0030E4  282C               	incf	___fladd@bexp^0,w,c
 15955   0030E6  B4D8               	btfsc	status,2,c
 15956   0030E8  EF78  F018         	goto	u3091
 15957   0030EC  EF7A  F018         	goto	u3090
 15958   0030F0                     u3091:
 15959   0030F0  EF7B  F018         	goto	l4298
 15960   0030F4                     u3090:
 15961   0030F4  2A2C               	incf	___fladd@bexp^0,f,c
 15962   0030F6                     l4298:
 15963   0030F6  282C               	incf	___fladd@bexp^0,w,c
 15964   0030F8  B4D8               	btfsc	status,2,c
 15965   0030FA  EF81  F018         	goto	u3101
 15966   0030FE  EF83  F018         	goto	u3100
 15967   003102                     u3101:
 15968   003102  EF8B  F018         	goto	l4302
 15969   003106                     u3100:
 15970   003106  502C               	movf	___fladd@bexp^0,w,c
 15971   003108  A4D8               	btfss	status,2,c
 15972   00310A  EF89  F018         	goto	u3111
 15973   00310E  EF8B  F018         	goto	u3110
 15974   003112                     u3111:
 15975   003112  EF9D  F018         	goto	l4306
 15976   003116                     u3110:
 15977   003116                     l4302:
 15978   003116  0E00               	movlw	0
 15979   003118  6E1E               	movwf	___fladd@b^0,c
 15980   00311A  0E00               	movlw	0
 15981   00311C  6E1F               	movwf	(___fladd@b+1)^0,c
 15982   00311E  0E00               	movlw	0
 15983   003120  6E20               	movwf	(___fladd@b+2)^0,c
 15984   003122  0E00               	movlw	0
 15985   003124  6E21               	movwf	(___fladd@b+3)^0,c
 15986   003126  502C               	movf	___fladd@bexp^0,w,c
 15987   003128  A4D8               	btfss	status,2,c
 15988   00312A  EF99  F018         	goto	u3121
 15989   00312E  EF9B  F018         	goto	u3120
 15990   003132                     u3121:
 15991   003132  EF9D  F018         	goto	l4306
 15992   003136                     u3120:
 15993   003136  0E00               	movlw	0
 15994   003138  6E2A               	movwf	___fladd@signs^0,c
 15995   00313A                     l4306:
 15996   00313A  A02C               	btfss	___fladd@bexp^0,0,c
 15997   00313C  EFA2  F018         	goto	u3131
 15998   003140  EFA4  F018         	goto	u3130
 15999   003144                     u3131:
 16000   003144  EFA7  F018         	goto	l4310
 16001   003148                     u3130:
 16002   003148  8E20               	bsf	(___fladd@b+2)^0,7,c
 16003   00314A  EFA8  F018         	goto	l4312
 16004   00314E                     l4310:
 16005   00314E  9E20               	bcf	(___fladd@b+2)^0,7,c
 16006   003150                     l4312:
 16007   003150  90D8               	bcf	status,0,c
 16008   003152  302C               	rrcf	___fladd@bexp^0,w,c
 16009   003154  6E21               	movwf	(___fladd@b+3)^0,c
 16010   003156  AE2A               	btfss	___fladd@signs^0,7,c
 16011   003158  EFB0  F018         	goto	u3141
 16012   00315C  EFB2  F018         	goto	u3140
 16013   003160                     u3141:
 16014   003160  EFB3  F018         	goto	l4318
 16015   003164                     u3140:
 16016   003164  8E21               	bsf	(___fladd@b+3)^0,7,c
 16017   003166                     l4318:
 16018   003166  C01E  F01E         	movff	___fladd@b,?___fladd
 16019   00316A  C01F  F01F         	movff	___fladd@b+1,?___fladd+1
 16020   00316E  C020  F020         	movff	___fladd@b+2,?___fladd+2
 16021   003172  C021  F021         	movff	___fladd@b+3,?___fladd+3
 16022   003176                     l1054:
 16023   003176  0012               	return		;funcret
 16024   003178                     __end_of___fladd:
 16025                           	callstack 0
 16026                           
 16027 ;; *************** function _TP_salida_sPG_center *****************
 16028 ;; Defined at:
 16029 ;;		line 271 in file "lib_pic/Control_velocidad_difuso.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  4    0[COMRAM] unsigned char 
 16036 ;; Registers used:
 16037 ;;		wreg, status,2
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16043 ;;      Params:         4       0       0       0       0       0       0       0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16046 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16047 ;;Total ram usage:        4 bytes
 16048 ;; Hardware stack levels used: 1
 16049 ;; Hardware stack levels required when called: 2
 16050 ;; This function calls:
 16051 ;;		Nothing
 16052 ;; This function is called by:
 16053 ;;		_RL_reglas_controlador
 16054 ;;		_OP_operador_Defuz
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           	psect	text75
 16059   00617E                     __ptext75:
 16060                           	callstack 0
 16061   00617E                     _TP_salida_sPG_center:
 16062                           	callstack 25
 16063   00617E                     
 16064                           ;lib_pic/Control_velocidad_difuso.c: 272:    return 0.75;
 16065   00617E  0E00               	movlw	0
 16066   006180  6E01               	movwf	?_TP_salida_sPG_center^0,c
 16067   006182  0E00               	movlw	0
 16068   006184  6E02               	movwf	(?_TP_salida_sPG_center+1)^0,c
 16069   006186  0E40               	movlw	64
 16070   006188  6E03               	movwf	(?_TP_salida_sPG_center+2)^0,c
 16071   00618A  0E3F               	movlw	63
 16072   00618C  6E04               	movwf	(?_TP_salida_sPG_center+3)^0,c
 16073   00618E  0012               	return		;funcret
 16074   006190                     __end_of_TP_salida_sPG_center:
 16075                           	callstack 0
 16076                           
 16077 ;; *************** function _TP_salida_sPM_center *****************
 16078 ;; Defined at:
 16079 ;;		line 259 in file "lib_pic/Control_velocidad_difuso.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;		None
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;		None
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  4    0[COMRAM] unsigned char 
 16086 ;; Registers used:
 16087 ;;		wreg, status,2
 16088 ;; Tracked objects:
 16089 ;;		On entry : 0/0
 16090 ;;		On exit  : 0/0
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16093 ;;      Params:         4       0       0       0       0       0       0       0       0
 16094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16096 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16097 ;;Total ram usage:        4 bytes
 16098 ;; Hardware stack levels used: 1
 16099 ;; Hardware stack levels required when called: 2
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		_RL_reglas_controlador
 16104 ;;		_OP_operador_Defuz
 16105 ;; This function uses a non-reentrant model
 16106 ;;
 16107                           
 16108                           	psect	text76
 16109   006190                     __ptext76:
 16110                           	callstack 0
 16111   006190                     _TP_salida_sPM_center:
 16112                           	callstack 25
 16113   006190                     
 16114                           ;lib_pic/Control_velocidad_difuso.c: 260:    return 0.5;
 16115   006190  0E00               	movlw	0
 16116   006192  6E01               	movwf	?_TP_salida_sPM_center^0,c
 16117   006194  0E00               	movlw	0
 16118   006196  6E02               	movwf	(?_TP_salida_sPM_center+1)^0,c
 16119   006198  0E00               	movlw	0
 16120   00619A  6E03               	movwf	(?_TP_salida_sPM_center+2)^0,c
 16121   00619C  0E3F               	movlw	63
 16122   00619E  6E04               	movwf	(?_TP_salida_sPM_center+3)^0,c
 16123   0061A0  0012               	return		;funcret
 16124   0061A2                     __end_of_TP_salida_sPM_center:
 16125                           	callstack 0
 16126                           
 16127 ;; *************** function _TP_salida_sPP_center *****************
 16128 ;; Defined at:
 16129 ;;		line 247 in file "lib_pic/Control_velocidad_difuso.c"
 16130 ;; Parameters:    Size  Location     Type
 16131 ;;		None
 16132 ;; Auto vars:     Size  Location     Type
 16133 ;;		None
 16134 ;; Return value:  Size  Location     Type
 16135 ;;                  4    0[COMRAM] unsigned char 
 16136 ;; Registers used:
 16137 ;;		wreg, status,2
 16138 ;; Tracked objects:
 16139 ;;		On entry : 0/0
 16140 ;;		On exit  : 0/0
 16141 ;;		Unchanged: 0/0
 16142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16143 ;;      Params:         4       0       0       0       0       0       0       0       0
 16144 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16146 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16147 ;;Total ram usage:        4 bytes
 16148 ;; Hardware stack levels used: 1
 16149 ;; Hardware stack levels required when called: 2
 16150 ;; This function calls:
 16151 ;;		Nothing
 16152 ;; This function is called by:
 16153 ;;		_RL_reglas_controlador
 16154 ;;		_OP_operador_Defuz
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158                           	psect	text77
 16159   0061A2                     __ptext77:
 16160                           	callstack 0
 16161   0061A2                     _TP_salida_sPP_center:
 16162                           	callstack 25
 16163   0061A2                     
 16164                           ;lib_pic/Control_velocidad_difuso.c: 248:    return 0.25;
 16165   0061A2  0E00               	movlw	0
 16166   0061A4  6E01               	movwf	?_TP_salida_sPP_center^0,c
 16167   0061A6  0E00               	movlw	0
 16168   0061A8  6E02               	movwf	(?_TP_salida_sPP_center+1)^0,c
 16169   0061AA  0E80               	movlw	128
 16170   0061AC  6E03               	movwf	(?_TP_salida_sPP_center+2)^0,c
 16171   0061AE  0E3E               	movlw	62
 16172   0061B0  6E04               	movwf	(?_TP_salida_sPP_center+3)^0,c
 16173   0061B2  0012               	return		;funcret
 16174   0061B4                     __end_of_TP_salida_sPP_center:
 16175                           	callstack 0
 16176                           
 16177 ;; *************** function _TP_salida_sNP_center *****************
 16178 ;; Defined at:
 16179 ;;		line 223 in file "lib_pic/Control_velocidad_difuso.c"
 16180 ;; Parameters:    Size  Location     Type
 16181 ;;		None
 16182 ;; Auto vars:     Size  Location     Type
 16183 ;;		None
 16184 ;; Return value:  Size  Location     Type
 16185 ;;                  4    0[COMRAM] unsigned char 
 16186 ;; Registers used:
 16187 ;;		wreg, status,2
 16188 ;; Tracked objects:
 16189 ;;		On entry : 0/0
 16190 ;;		On exit  : 0/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16193 ;;      Params:         4       0       0       0       0       0       0       0       0
 16194 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16195 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16196 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16197 ;;Total ram usage:        4 bytes
 16198 ;; Hardware stack levels used: 1
 16199 ;; Hardware stack levels required when called: 2
 16200 ;; This function calls:
 16201 ;;		Nothing
 16202 ;; This function is called by:
 16203 ;;		_RL_reglas_controlador
 16204 ;;		_OP_operador_Defuz
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           	psect	text78
 16209   0061B4                     __ptext78:
 16210                           	callstack 0
 16211   0061B4                     _TP_salida_sNP_center:
 16212                           	callstack 25
 16213   0061B4                     
 16214                           ;lib_pic/Control_velocidad_difuso.c: 224:    return -0.25;
 16215   0061B4  0E00               	movlw	0
 16216   0061B6  6E01               	movwf	?_TP_salida_sNP_center^0,c
 16217   0061B8  0E00               	movlw	0
 16218   0061BA  6E02               	movwf	(?_TP_salida_sNP_center+1)^0,c
 16219   0061BC  0E80               	movlw	128
 16220   0061BE  6E03               	movwf	(?_TP_salida_sNP_center+2)^0,c
 16221   0061C0  0EBE               	movlw	190
 16222   0061C2  6E04               	movwf	(?_TP_salida_sNP_center+3)^0,c
 16223   0061C4  0012               	return		;funcret
 16224   0061C6                     __end_of_TP_salida_sNP_center:
 16225                           	callstack 0
 16226                           
 16227 ;; *************** function _TP_salida_sNM_center *****************
 16228 ;; Defined at:
 16229 ;;		line 211 in file "lib_pic/Control_velocidad_difuso.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;		None
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  4    0[COMRAM] unsigned char 
 16236 ;; Registers used:
 16237 ;;		wreg, status,2
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16243 ;;      Params:         4       0       0       0       0       0       0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16246 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16247 ;;Total ram usage:        4 bytes
 16248 ;; Hardware stack levels used: 1
 16249 ;; Hardware stack levels required when called: 2
 16250 ;; This function calls:
 16251 ;;		Nothing
 16252 ;; This function is called by:
 16253 ;;		_RL_reglas_controlador
 16254 ;;		_OP_operador_Defuz
 16255 ;; This function uses a non-reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text79
 16259   0061C6                     __ptext79:
 16260                           	callstack 0
 16261   0061C6                     _TP_salida_sNM_center:
 16262                           	callstack 25
 16263   0061C6                     
 16264                           ;lib_pic/Control_velocidad_difuso.c: 212:    return -0.5;
 16265   0061C6  0E00               	movlw	0
 16266   0061C8  6E01               	movwf	?_TP_salida_sNM_center^0,c
 16267   0061CA  0E00               	movlw	0
 16268   0061CC  6E02               	movwf	(?_TP_salida_sNM_center+1)^0,c
 16269   0061CE  0E00               	movlw	0
 16270   0061D0  6E03               	movwf	(?_TP_salida_sNM_center+2)^0,c
 16271   0061D2  0EBF               	movlw	191
 16272   0061D4  6E04               	movwf	(?_TP_salida_sNM_center+3)^0,c
 16273   0061D6  0012               	return		;funcret
 16274   0061D8                     __end_of_TP_salida_sNM_center:
 16275                           	callstack 0
 16276                           
 16277 ;; *************** function _TP_salida_sNG_center *****************
 16278 ;; Defined at:
 16279 ;;		line 199 in file "lib_pic/Control_velocidad_difuso.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;		None
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  4    0[COMRAM] unsigned char 
 16286 ;; Registers used:
 16287 ;;		wreg, status,2
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16293 ;;      Params:         4       0       0       0       0       0       0       0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16296 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16297 ;;Total ram usage:        4 bytes
 16298 ;; Hardware stack levels used: 1
 16299 ;; Hardware stack levels required when called: 2
 16300 ;; This function calls:
 16301 ;;		Nothing
 16302 ;; This function is called by:
 16303 ;;		_RL_reglas_controlador
 16304 ;;		_OP_operador_Defuz
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           	psect	text80
 16309   0061D8                     __ptext80:
 16310                           	callstack 0
 16311   0061D8                     _TP_salida_sNG_center:
 16312                           	callstack 25
 16313   0061D8                     
 16314                           ;lib_pic/Control_velocidad_difuso.c: 200:    return -0.75;
 16315   0061D8  0E00               	movlw	0
 16316   0061DA  6E01               	movwf	?_TP_salida_sNG_center^0,c
 16317   0061DC  0E00               	movlw	0
 16318   0061DE  6E02               	movwf	(?_TP_salida_sNG_center+1)^0,c
 16319   0061E0  0E40               	movlw	64
 16320   0061E2  6E03               	movwf	(?_TP_salida_sNG_center+2)^0,c
 16321   0061E4  0EBF               	movlw	191
 16322   0061E6  6E04               	movwf	(?_TP_salida_sNG_center+3)^0,c
 16323   0061E8  0012               	return		;funcret
 16324   0061EA                     __end_of_TP_salida_sNG_center:
 16325                           	callstack 0
 16326                           
 16327 ;; *************** function _TP_salida_sZ_center *****************
 16328 ;; Defined at:
 16329 ;;		line 235 in file "lib_pic/Control_velocidad_difuso.c"
 16330 ;; Parameters:    Size  Location     Type
 16331 ;;		None
 16332 ;; Auto vars:     Size  Location     Type
 16333 ;;		None
 16334 ;; Return value:  Size  Location     Type
 16335 ;;                  4    0[COMRAM] unsigned char 
 16336 ;; Registers used:
 16337 ;;		wreg, status,2
 16338 ;; Tracked objects:
 16339 ;;		On entry : 0/0
 16340 ;;		On exit  : 0/0
 16341 ;;		Unchanged: 0/0
 16342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16343 ;;      Params:         4       0       0       0       0       0       0       0       0
 16344 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16345 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16346 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16347 ;;Total ram usage:        4 bytes
 16348 ;; Hardware stack levels used: 1
 16349 ;; Hardware stack levels required when called: 2
 16350 ;; This function calls:
 16351 ;;		Nothing
 16352 ;; This function is called by:
 16353 ;;		_RL_reglas_controlador
 16354 ;;		_OP_operador_Defuz
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           	psect	text81
 16359   0061EA                     __ptext81:
 16360                           	callstack 0
 16361   0061EA                     _TP_salida_sZ_center:
 16362                           	callstack 25
 16363   0061EA                     
 16364                           ;lib_pic/Control_velocidad_difuso.c: 236:    return 0.0;
 16365   0061EA  0E00               	movlw	0
 16366   0061EC  6E01               	movwf	?_TP_salida_sZ_center^0,c
 16367   0061EE  0E00               	movlw	0
 16368   0061F0  6E02               	movwf	(?_TP_salida_sZ_center+1)^0,c
 16369   0061F2  0E00               	movlw	0
 16370   0061F4  6E03               	movwf	(?_TP_salida_sZ_center+2)^0,c
 16371   0061F6  0E00               	movlw	0
 16372   0061F8  6E04               	movwf	(?_TP_salida_sZ_center+3)^0,c
 16373   0061FA  0012               	return		;funcret
 16374   0061FC                     __end_of_TP_salida_sZ_center:
 16375                           	callstack 0
 16376                           
 16377 ;; *************** function _OP_operador_And *****************
 16378 ;; Defined at:
 16379 ;;		line 34 in file "lib_pic/Control_velocidad_difuso.c"
 16380 ;; Parameters:    Size  Location     Type
 16381 ;;  a               4   41[COMRAM] unsigned char 
 16382 ;;  b               4   45[COMRAM] unsigned char 
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  4   41[COMRAM] unsigned char 
 16387 ;; Registers used:
 16388 ;;		wreg, status,2, status,0, cstack
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16394 ;;      Params:         8       0       0       0       0       0       0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16397 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16398 ;;Total ram usage:        8 bytes
 16399 ;; Hardware stack levels used: 1
 16400 ;; Hardware stack levels required when called: 3
 16401 ;; This function calls:
 16402 ;;		___flge
 16403 ;; This function is called by:
 16404 ;;		_RL_reglas_controlador
 16405 ;; This function uses a non-reentrant model
 16406 ;;
 16407                           
 16408                           	psect	text82
 16409   005CD0                     __ptext82:
 16410                           	callstack 0
 16411   005CD0                     _OP_operador_And:
 16412                           	callstack 25
 16413   005CD0                     
 16414                           ;lib_pic/Control_velocidad_difuso.c: 35:     return (a<b? a : b);
 16415   005CD0  C02A  F01E         	movff	OP_operador_And@a,___flge@ff1
 16416   005CD4  C02B  F01F         	movff	OP_operador_And@a+1,___flge@ff1+1
 16417   005CD8  C02C  F020         	movff	OP_operador_And@a+2,___flge@ff1+2
 16418   005CDC  C02D  F021         	movff	OP_operador_And@a+3,___flge@ff1+3
 16419   005CE0  C02E  F022         	movff	OP_operador_And@b,___flge@ff2
 16420   005CE4  C02F  F023         	movff	OP_operador_And@b+1,___flge@ff2+1
 16421   005CE8  C030  F024         	movff	OP_operador_And@b+2,___flge@ff2+2
 16422   005CEC  C031  F025         	movff	OP_operador_And@b+3,___flge@ff2+3
 16423   005CF0  EC7F  F024         	call	___flge	;wreg free
 16424   005CF4  A0D8               	btfss	status,0,c
 16425   005CF6  EF7F  F02E         	goto	u4731
 16426   005CFA  EF81  F02E         	goto	u4730
 16427   005CFE                     u4731:
 16428   005CFE  EF8B  F02E         	goto	l209
 16429   005D02                     u4730:
 16430   005D02  C02E  F02A         	movff	OP_operador_And@b,?_OP_operador_And
 16431   005D06  C02F  F02B         	movff	OP_operador_And@b+1,?_OP_operador_And+1
 16432   005D0A  C030  F02C         	movff	OP_operador_And@b+2,?_OP_operador_And+2
 16433   005D0E  C031  F02D         	movff	OP_operador_And@b+3,?_OP_operador_And+3
 16434   005D12  EF93  F02E         	goto	l212
 16435   005D16                     l209:
 16436   005D16  C02A  F02A         	movff	OP_operador_And@a,?_OP_operador_And
 16437   005D1A  C02B  F02B         	movff	OP_operador_And@a+1,?_OP_operador_And+1
 16438   005D1E  C02C  F02C         	movff	OP_operador_And@a+2,?_OP_operador_And+2
 16439   005D22  C02D  F02D         	movff	OP_operador_And@a+3,?_OP_operador_And+3
 16440   005D26                     l212:
 16441   005D26  0012               	return		;funcret
 16442   005D28                     __end_of_OP_operador_And:
 16443                           	callstack 0
 16444                           
 16445 ;; *************** function ___flge *****************
 16446 ;; Defined at:
 16447 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 16448 ;; Parameters:    Size  Location     Type
 16449 ;;  ff1             4   29[COMRAM] unsigned char 
 16450 ;;  ff2             4   33[COMRAM] unsigned char 
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;		None
 16453 ;; Return value:  Size  Location     Type
 16454 ;;		None               void
 16455 ;; Registers used:
 16456 ;;		wreg, status,2, status,0
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16462 ;;      Params:         8       0       0       0       0       0       0       0       0
 16463 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16464 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16465 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16466 ;;Total ram usage:       12 bytes
 16467 ;; Hardware stack levels used: 1
 16468 ;; Hardware stack levels required when called: 2
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_MF_xfsg_triangle_equal
 16473 ;;		_OP_operador_And
 16474 ;;		_OP_operador_Or
 16475 ;;		_main
 16476 ;;		_efgtoa
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           	psect	text83
 16481   0048FE                     __ptext83:
 16482                           	callstack 0
 16483   0048FE                     ___flge:
 16484                           	callstack 24
 16485   0048FE  0E00               	movlw	0
 16486   004900  141E               	andwf	___flge@ff1^0,w,c
 16487   004902  6E26               	movwf	??___flge^0,c
 16488   004904  0E00               	movlw	0
 16489   004906  141F               	andwf	(___flge@ff1+1)^0,w,c
 16490   004908  6E27               	movwf	(??___flge+1)^0,c
 16491   00490A  0E80               	movlw	128
 16492   00490C  1420               	andwf	(___flge@ff1+2)^0,w,c
 16493   00490E  6E28               	movwf	(??___flge+2)^0,c
 16494   004910  0E7F               	movlw	127
 16495   004912  1421               	andwf	(___flge@ff1+3)^0,w,c
 16496   004914  6E29               	movwf	(??___flge+3)^0,c
 16497   004916  5026               	movf	??___flge^0,w,c
 16498   004918  1027               	iorwf	(??___flge+1)^0,w,c
 16499   00491A  1028               	iorwf	(??___flge+2)^0,w,c
 16500   00491C  1029               	iorwf	(??___flge+3)^0,w,c
 16501   00491E  A4D8               	btfss	status,2,c
 16502   004920  EF94  F024         	goto	u3611
 16503   004924  EF96  F024         	goto	u3610
 16504   004928                     u3611:
 16505   004928  EF9E  F024         	goto	l4630
 16506   00492C                     u3610:
 16507   00492C  0E00               	movlw	0
 16508   00492E  6E1E               	movwf	___flge@ff1^0,c
 16509   004930  0E00               	movlw	0
 16510   004932  6E1F               	movwf	(___flge@ff1+1)^0,c
 16511   004934  0E00               	movlw	0
 16512   004936  6E20               	movwf	(___flge@ff1+2)^0,c
 16513   004938  0E00               	movlw	0
 16514   00493A  6E21               	movwf	(___flge@ff1+3)^0,c
 16515   00493C                     l4630:
 16516   00493C  0E00               	movlw	0
 16517   00493E  1422               	andwf	___flge@ff2^0,w,c
 16518   004940  6E26               	movwf	??___flge^0,c
 16519   004942  0E00               	movlw	0
 16520   004944  1423               	andwf	(___flge@ff2+1)^0,w,c
 16521   004946  6E27               	movwf	(??___flge+1)^0,c
 16522   004948  0E80               	movlw	128
 16523   00494A  1424               	andwf	(___flge@ff2+2)^0,w,c
 16524   00494C  6E28               	movwf	(??___flge+2)^0,c
 16525   00494E  0E7F               	movlw	127
 16526   004950  1425               	andwf	(___flge@ff2+3)^0,w,c
 16527   004952  6E29               	movwf	(??___flge+3)^0,c
 16528   004954  5026               	movf	??___flge^0,w,c
 16529   004956  1027               	iorwf	(??___flge+1)^0,w,c
 16530   004958  1028               	iorwf	(??___flge+2)^0,w,c
 16531   00495A  1029               	iorwf	(??___flge+3)^0,w,c
 16532   00495C  A4D8               	btfss	status,2,c
 16533   00495E  EFB3  F024         	goto	u3621
 16534   004962  EFB5  F024         	goto	u3620
 16535   004966                     u3621:
 16536   004966  EFBD  F024         	goto	l4634
 16537   00496A                     u3620:
 16538   00496A  0E00               	movlw	0
 16539   00496C  6E22               	movwf	___flge@ff2^0,c
 16540   00496E  0E00               	movlw	0
 16541   004970  6E23               	movwf	(___flge@ff2+1)^0,c
 16542   004972  0E00               	movlw	0
 16543   004974  6E24               	movwf	(___flge@ff2+2)^0,c
 16544   004976  0E00               	movlw	0
 16545   004978  6E25               	movwf	(___flge@ff2+3)^0,c
 16546   00497A                     l4634:
 16547   00497A  AE21               	btfss	(___flge@ff1+3)^0,7,c
 16548   00497C  EFC2  F024         	goto	u3631
 16549   004980  EFC4  F024         	goto	u3630
 16550   004984                     u3631:
 16551   004984  EFCD  F024         	goto	l4638
 16552   004988                     u3630:
 16553   004988  6C1E               	negf	___flge@ff1^0,c
 16554   00498A  1E1F               	comf	(___flge@ff1+1)^0,f,c
 16555   00498C  B0D8               	btfsc	status,0,c
 16556   00498E  2A1F               	incf	(___flge@ff1+1)^0,f,c
 16557   004990  1E20               	comf	(___flge@ff1+2)^0,f,c
 16558   004992  B0D8               	btfsc	status,0,c
 16559   004994  2A20               	incf	(___flge@ff1+2)^0,f,c
 16560   004996  0E80               	movlw	128
 16561   004998  5621               	subfwb	(___flge@ff1+3)^0,f,c
 16562   00499A                     l4638:
 16563   00499A  AE25               	btfss	(___flge@ff2+3)^0,7,c
 16564   00499C  EFD2  F024         	goto	u3641
 16565   0049A0  EFD4  F024         	goto	u3640
 16566   0049A4                     u3641:
 16567   0049A4  EFDD  F024         	goto	l782
 16568   0049A8                     u3640:
 16569   0049A8  6C22               	negf	___flge@ff2^0,c
 16570   0049AA  1E23               	comf	(___flge@ff2+1)^0,f,c
 16571   0049AC  B0D8               	btfsc	status,0,c
 16572   0049AE  2A23               	incf	(___flge@ff2+1)^0,f,c
 16573   0049B0  1E24               	comf	(___flge@ff2+2)^0,f,c
 16574   0049B2  B0D8               	btfsc	status,0,c
 16575   0049B4  2A24               	incf	(___flge@ff2+2)^0,f,c
 16576   0049B6  0E80               	movlw	128
 16577   0049B8  5625               	subfwb	(___flge@ff2+3)^0,f,c
 16578   0049BA                     l782:
 16579   0049BA  0E00               	movlw	0
 16580   0049BC  1A1E               	xorwf	___flge@ff1^0,f,c
 16581   0049BE  0E00               	movlw	0
 16582   0049C0  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
 16583   0049C2  0E00               	movlw	0
 16584   0049C4  1A20               	xorwf	(___flge@ff1+2)^0,f,c
 16585   0049C6  0E80               	movlw	128
 16586   0049C8  1A21               	xorwf	(___flge@ff1+3)^0,f,c
 16587   0049CA  0E00               	movlw	0
 16588   0049CC  1A22               	xorwf	___flge@ff2^0,f,c
 16589   0049CE  0E00               	movlw	0
 16590   0049D0  1A23               	xorwf	(___flge@ff2+1)^0,f,c
 16591   0049D2  0E00               	movlw	0
 16592   0049D4  1A24               	xorwf	(___flge@ff2+2)^0,f,c
 16593   0049D6  0E80               	movlw	128
 16594   0049D8  1A25               	xorwf	(___flge@ff2+3)^0,f,c
 16595   0049DA  5022               	movf	___flge@ff2^0,w,c
 16596   0049DC  5C1E               	subwf	___flge@ff1^0,w,c
 16597   0049DE  5023               	movf	(___flge@ff2+1)^0,w,c
 16598   0049E0  581F               	subwfb	(___flge@ff1+1)^0,w,c
 16599   0049E2  5024               	movf	(___flge@ff2+2)^0,w,c
 16600   0049E4  5820               	subwfb	(___flge@ff1+2)^0,w,c
 16601   0049E6  5025               	movf	(___flge@ff2+3)^0,w,c
 16602   0049E8  5821               	subwfb	(___flge@ff1+3)^0,w,c
 16603   0049EA  B0D8               	btfsc	status,0,c
 16604   0049EC  EFFA  F024         	goto	u3651
 16605   0049F0  EFFC  F024         	goto	u3650
 16606   0049F4                     u3651:
 16607   0049F4  EFFF  F024         	goto	l4644
 16608   0049F8                     u3650:
 16609   0049F8  90D8               	bcf	status,0,c
 16610   0049FA  EF00  F025         	goto	l787
 16611   0049FE                     l4644:
 16612   0049FE  80D8               	bsf	status,0,c
 16613   004A00                     l787:
 16614   004A00  0012               	return		;funcret
 16615   004A02                     __end_of___flge:
 16616                           	callstack 0
 16617                           
 16618 ;; *************** function _InterruptHighPriority *****************
 16619 ;; Defined at:
 16620 ;;		line 353 in file "mainEncoder.c"
 16621 ;; Parameters:    Size  Location     Type
 16622 ;;		None
 16623 ;; Auto vars:     Size  Location     Type
 16624 ;;		None
 16625 ;; Return value:  Size  Location     Type
 16626 ;;                  1    wreg      void 
 16627 ;; Registers used:
 16628 ;;		wreg, status,2, status,0, cstack
 16629 ;; Tracked objects:
 16630 ;;		On entry : 0/0
 16631 ;;		On exit  : 0/0
 16632 ;;		Unchanged: 0/0
 16633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16634 ;;      Params:         0       0       0       0       0       0       0       0       0
 16635 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16637 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16638 ;;Total ram usage:        0 bytes
 16639 ;; Hardware stack levels used: 1
 16640 ;; Hardware stack levels required when called: 1
 16641 ;; This function calls:
 16642 ;;		_TIMER1_Start
 16643 ;;		_TIMER1_Stop
 16644 ;; This function is called by:
 16645 ;;		Interrupt level 2
 16646 ;; This function uses a non-reentrant model
 16647 ;;
 16648                           
 16649                           	psect	intcode
 16650   000008                     __pintcode:
 16651                           	callstack 0
 16652   000008                     _InterruptHighPriority:
 16653                           	callstack 20
 16654                           
 16655                           ;incstack = 0
 16656   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16657   00000A                     
 16658                           ;mainEncoder.c: 357:     if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 16659   00000A  AAF2               	btfss	242,5,c	;volatile
 16660   00000C  EF0A  F000         	goto	i2u536_41
 16661   000010  EF0C  F000         	goto	i2u536_40
 16662   000014                     i2u536_41:
 16663   000014  EF2A  F000         	goto	i2l481
 16664   000018                     i2u536_40:
 16665   000018  A4F2               	btfss	242,2,c	;volatile
 16666   00001A  EF11  F000         	goto	i2u537_41
 16667   00001E  EF13  F000         	goto	i2u537_40
 16668   000022                     i2u537_41:
 16669   000022  EF2A  F000         	goto	i2l481
 16670   000026                     i2u537_40:
 16671   000026                     
 16672                           ;mainEncoder.c: 358:     {;mainEncoder.c: 360:         TMR0 = 34286;
 16673   000026  0E85               	movlw	133
 16674   000028  6ED7               	movwf	215,c	;volatile
 16675   00002A  0EEE               	movlw	238
 16676   00002C  6ED6               	movwf	214,c	;volatile
 16677                           
 16678                           ;mainEncoder.c: 363:         flagTimer0 = 1;
 16679   00002E  0E01               	movlw	1
 16680   000030  0100               	movlb	0	; () banked
 16681   000032  6FF7               	movwf	_flagTimer0& (0+255),b	;volatile
 16682   000034                     
 16683                           ; BSR set to: 0
 16684                           ;mainEncoder.c: 373:         TIMER1_Stop();
 16685   000034  EC23  F031         	call	_TIMER1_Stop	;wreg free
 16686   000038                     
 16687                           ;mainEncoder.c: 377:         RPM = TMR1;
 16688   000038  CFCE F0F1          	movff	4046,_RPM	;volatile
 16689   00003C  CFCF F0F2          	movff	4047,_RPM+1	;volatile
 16690   000040                     
 16691                           ;mainEncoder.c: 380:         tiempo++;
 16692   000040  0100               	movlb	0	; () banked
 16693   000042  4BEF               	infsnz	_tiempo& (0+255),f,b	;volatile
 16694   000044  2BF0               	incf	(_tiempo+1)& (0+255),f,b	;volatile
 16695   000046                     
 16696                           ; BSR set to: 0
 16697                           ;mainEncoder.c: 383:         TMR1 = 0;
 16698   000046  0E00               	movlw	0
 16699   000048  6ECF               	movwf	207,c	;volatile
 16700   00004A  0E00               	movlw	0
 16701   00004C  6ECE               	movwf	206,c	;volatile
 16702   00004E                     
 16703                           ; BSR set to: 0
 16704                           ;mainEncoder.c: 385:         TIMER1_Start();
 16705   00004E  EC25  F031         	call	_TIMER1_Start	;wreg free
 16706   000052                     
 16707                           ;mainEncoder.c: 388:         INTCONbits.TMR0IF = 0;
 16708   000052  94F2               	bcf	242,2,c	;volatile
 16709   000054                     i2l481:
 16710   000054  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16711   000056  0011               	retfie		f
 16712   000058                     __end_of_InterruptHighPriority:
 16713                           	callstack 0
 16714                           
 16715 ;; *************** function _TIMER1_Stop *****************
 16716 ;; Defined at:
 16717 ;;		line 486 in file "mainEncoder.c"
 16718 ;; Parameters:    Size  Location     Type
 16719 ;;		None
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;		None
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  1    wreg      void 
 16724 ;; Registers used:
 16725 ;;		None
 16726 ;; Tracked objects:
 16727 ;;		On entry : 0/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16731 ;;      Params:         0       0       0       0       0       0       0       0       0
 16732 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16733 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16734 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16735 ;;Total ram usage:        0 bytes
 16736 ;; Hardware stack levels used: 1
 16737 ;; This function calls:
 16738 ;;		Nothing
 16739 ;; This function is called by:
 16740 ;;		_InterruptHighPriority
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744                           	psect	text85
 16745   006246                     __ptext85:
 16746                           	callstack 0
 16747   006246                     _TIMER1_Stop:
 16748                           	callstack 20
 16749   006246                     
 16750                           ;mainEncoder.c: 489:     T1CONbits.TMR1ON = 0;
 16751   006246  90CD               	bcf	205,0,c	;volatile
 16752   006248  0012               	return		;funcret
 16753   00624A                     __end_of_TIMER1_Stop:
 16754                           	callstack 0
 16755                           
 16756 ;; *************** function _TIMER1_Start *****************
 16757 ;; Defined at:
 16758 ;;		line 480 in file "mainEncoder.c"
 16759 ;; Parameters:    Size  Location     Type
 16760 ;;		None
 16761 ;; Auto vars:     Size  Location     Type
 16762 ;;		None
 16763 ;; Return value:  Size  Location     Type
 16764 ;;                  1    wreg      void 
 16765 ;; Registers used:
 16766 ;;		None
 16767 ;; Tracked objects:
 16768 ;;		On entry : 0/0
 16769 ;;		On exit  : 0/0
 16770 ;;		Unchanged: 0/0
 16771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16772 ;;      Params:         0       0       0       0       0       0       0       0       0
 16773 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16774 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16775 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16776 ;;Total ram usage:        0 bytes
 16777 ;; Hardware stack levels used: 1
 16778 ;; This function calls:
 16779 ;;		Nothing
 16780 ;; This function is called by:
 16781 ;;		_InterruptHighPriority
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text86
 16786   00624A                     __ptext86:
 16787                           	callstack 0
 16788   00624A                     _TIMER1_Start:
 16789                           	callstack 20
 16790   00624A                     
 16791                           ;mainEncoder.c: 483:     T1CONbits.TMR1ON = 1;
 16792   00624A  80CD               	bsf	205,0,c	;volatile
 16793   00624C  0012               	return		;funcret
 16794   00624E                     __end_of_TIMER1_Start:
 16795                           	callstack 0
 16796                           
 16797                           	psect	text87
 16798   000000                     __ptext87:
 16799                           	callstack 0
 16800   000000                     
 16801                           	psect	rparam
 16802   000000                     
 16803                           	psect	temp
 16804   00005F                     btemp:
 16805                           	callstack 0
 16806   00005F                     	ds	1
 16807   000000                     int$flags	set	btemp
 16808   000000                     wtemp8	set	btemp+1
 16809   000000                     ttemp5	set	btemp+1
 16810   000000                     ttemp6	set	btemp+4
 16811   000000                     ttemp7	set	btemp+8
 16812                           
 16813                           	psect	idloc
 16814                           
 16815                           ;Config register IDLOC0 @ 0x200000
 16816                           ;	unspecified, using default values
 16817   200000                     	org	2097152
 16818   200000  FF                 	db	255
 16819                           
 16820                           ;Config register IDLOC1 @ 0x200001
 16821                           ;	unspecified, using default values
 16822   200001                     	org	2097153
 16823   200001  FF                 	db	255
 16824                           
 16825                           ;Config register IDLOC2 @ 0x200002
 16826                           ;	unspecified, using default values
 16827   200002                     	org	2097154
 16828   200002  FF                 	db	255
 16829                           
 16830                           ;Config register IDLOC3 @ 0x200003
 16831                           ;	unspecified, using default values
 16832   200003                     	org	2097155
 16833   200003  FF                 	db	255
 16834                           
 16835                           ;Config register IDLOC4 @ 0x200004
 16836                           ;	unspecified, using default values
 16837   200004                     	org	2097156
 16838   200004  FF                 	db	255
 16839                           
 16840                           ;Config register IDLOC5 @ 0x200005
 16841                           ;	unspecified, using default values
 16842   200005                     	org	2097157
 16843   200005  FF                 	db	255
 16844                           
 16845                           ;Config register IDLOC6 @ 0x200006
 16846                           ;	unspecified, using default values
 16847   200006                     	org	2097158
 16848   200006  FF                 	db	255
 16849                           
 16850                           ;Config register IDLOC7 @ 0x200007
 16851                           ;	unspecified, using default values
 16852   200007                     	org	2097159
 16853   200007  FF                 	db	255
 16854                           
 16855                           	psect	config
 16856                           
 16857                           ;Config register CONFIG1L @ 0x300000
 16858                           ;	PLL Selection
 16859                           ;	PLLSEL = PLL4X, 4x clock multiplier
 16860                           ;	PLL Enable Configuration bit
 16861                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 16862                           ;	CPU System Clock Postscaler
 16863                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 16864                           ;	Low Speed USB mode with 48 MHz system clock
 16865                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
 16866   300000                     	org	3145728
 16867   300000  00                 	db	0
 16868                           
 16869                           ;Config register CONFIG1H @ 0x300001
 16870                           ;	Oscillator Selection
 16871                           ;	FOSC = INTOSCIO, Internal oscillator
 16872                           ;	Primary Oscillator Shutdown
 16873                           ;	PCLKEN = ON, Primary oscillator enabled
 16874                           ;	Fail-Safe Clock Monitor
 16875                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16876                           ;	Internal/External Oscillator Switchover
 16877                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16878   300001                     	org	3145729
 16879   300001  28                 	db	40
 16880                           
 16881                           ;Config register CONFIG2L @ 0x300002
 16882                           ;	Power-up Timer Enable
 16883                           ;	nPWRTEN = ON, Power up timer enabled
 16884                           ;	Brown-out Reset Enable
 16885                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 16886                           ;	Brown-out Reset Voltage
 16887                           ;	BORV = 190, BOR set to 1.9V nominal
 16888                           ;	Low-Power Brown-out Reset
 16889                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 16890   300002                     	org	3145730
 16891   300002  5E                 	db	94
 16892                           
 16893                           ;Config register CONFIG2H @ 0x300003
 16894                           ;	Watchdog Timer Enable bits
 16895                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 16896                           ;	Watchdog Timer Postscaler
 16897                           ;	WDTPS = 32768, 1:32768
 16898   300003                     	org	3145731
 16899   300003  3C                 	db	60
 16900                           
 16901                           ; Padding undefined space
 16902   300004                     	org	3145732
 16903   300004  FF                 	db	255
 16904                           
 16905                           ;Config register CONFIG3H @ 0x300005
 16906                           ;	CCP2 MUX bit
 16907                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 16908                           ;	PORTB A/D Enable bit
 16909                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 16910                           ;	Timer3 Clock Input MUX bit
 16911                           ;	T3CMX = RC0, T3CKI function is on RC0
 16912                           ;	SDO Output MUX bit
 16913                           ;	SDOMX = RB3, SDO function is on RB3
 16914                           ;	Master Clear Reset Pin Enable
 16915                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 16916   300005                     	org	3145733
 16917   300005  D3                 	db	211
 16918                           
 16919                           ;Config register CONFIG4L @ 0x300006
 16920                           ;	Stack Full/Underflow Reset
 16921                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16922                           ;	Single-Supply ICSP Enable bit
 16923                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16924                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 16925                           ;	ICPRT = OFF, ICPORT disabled
 16926                           ;	Extended Instruction Set Enable bit
 16927                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 16928                           ;	Background Debugger Enable bit
 16929                           ;	DEBUG = 0x1, unprogrammed default
 16930   300006                     	org	3145734
 16931   300006  85                 	db	133
 16932                           
 16933                           ; Padding undefined space
 16934   300007                     	org	3145735
 16935   300007  FF                 	db	255
 16936                           
 16937                           ;Config register CONFIG5L @ 0x300008
 16938                           ;	Block 0 Code Protect
 16939                           ;	CP0 = OFF, Block 0 is not code-protected
 16940                           ;	Block 1 Code Protect
 16941                           ;	CP1 = OFF, Block 1 is not code-protected
 16942                           ;	Block 2 Code Protect
 16943                           ;	CP2 = OFF, Block 2 is not code-protected
 16944                           ;	Block 3 Code Protect
 16945                           ;	CP3 = OFF, Block 3 is not code-protected
 16946   300008                     	org	3145736
 16947   300008  0F                 	db	15
 16948                           
 16949                           ;Config register CONFIG5H @ 0x300009
 16950                           ;	Boot Block Code Protect
 16951                           ;	CPB = OFF, Boot block is not code-protected
 16952                           ;	Data EEPROM Code Protect
 16953                           ;	CPD = OFF, Data EEPROM is not code-protected
 16954   300009                     	org	3145737
 16955   300009  C0                 	db	192
 16956                           
 16957                           ;Config register CONFIG6L @ 0x30000A
 16958                           ;	Block 0 Write Protect
 16959                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 16960                           ;	Block 1 Write Protect
 16961                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 16962                           ;	Block 2 Write Protect
 16963                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 16964                           ;	Block 3 Write Protect
 16965                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 16966   30000A                     	org	3145738
 16967   30000A  0F                 	db	15
 16968                           
 16969                           ;Config register CONFIG6H @ 0x30000B
 16970                           ;	Configuration Registers Write Protect
 16971                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 16972                           ;	Boot Block Write Protect
 16973                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 16974                           ;	Data EEPROM Write Protect
 16975                           ;	WRTD = OFF, Data EEPROM is not write-protected
 16976   30000B                     	org	3145739
 16977   30000B  E0                 	db	224
 16978                           
 16979                           ;Config register CONFIG7L @ 0x30000C
 16980                           ;	Block 0 Table Read Protect
 16981                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 16982                           ;	Block 1 Table Read Protect
 16983                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 16984                           ;	Block 2 Table Read Protect
 16985                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 16986                           ;	Block 3 Table Read Protect
 16987                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 16988   30000C                     	org	3145740
 16989   30000C  0F                 	db	15
 16990                           
 16991                           ;Config register CONFIG7H @ 0x30000D
 16992                           ;	Boot Block Table Read Protect
 16993                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 16994   30000D                     	org	3145741
 16995   30000D  40                 	db	64
 16996                           tosu	equ	0xFFF
 16997                           tosh	equ	0xFFE
 16998                           tosl	equ	0xFFD
 16999                           stkptr	equ	0xFFC
 17000                           pclatu	equ	0xFFB
 17001                           pclath	equ	0xFFA
 17002                           pcl	equ	0xFF9
 17003                           tblptru	equ	0xFF8
 17004                           tblptrh	equ	0xFF7
 17005                           tblptrl	equ	0xFF6
 17006                           tablat	equ	0xFF5
 17007                           prodh	equ	0xFF4
 17008                           prodl	equ	0xFF3
 17009                           indf0	equ	0xFEF
 17010                           postinc0	equ	0xFEE
 17011                           postdec0	equ	0xFED
 17012                           preinc0	equ	0xFEC
 17013                           plusw0	equ	0xFEB
 17014                           fsr0h	equ	0xFEA
 17015                           fsr0l	equ	0xFE9
 17016                           wreg	equ	0xFE8
 17017                           indf1	equ	0xFE7
 17018                           postinc1	equ	0xFE6
 17019                           postdec1	equ	0xFE5
 17020                           preinc1	equ	0xFE4
 17021                           plusw1	equ	0xFE3
 17022                           fsr1h	equ	0xFE2
 17023                           fsr1l	equ	0xFE1
 17024                           bsr	equ	0xFE0
 17025                           indf2	equ	0xFDF
 17026                           postinc2	equ	0xFDE
 17027                           postdec2	equ	0xFDD
 17028                           preinc2	equ	0xFDC
 17029                           plusw2	equ	0xFDB
 17030                           fsr2h	equ	0xFDA
 17031                           fsr2l	equ	0xFD9
 17032                           status	equ	0xFD8

Data Sizes:
    Strings     300
    Constant    0
    Data        21
    BSS         230
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    111     158
    BANK1           256    204     248
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), STR_20(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), STR_20(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[20]), STR_16(CODE[20]), STR_15(CODE[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[20]), STR_16(CODE[20]), STR_15(CODE[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[20]), STR_16(CODE[20]), STR_15(CODE[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[20]), STR_16(CODE[20]), STR_15(CODE[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1873$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[20]), STR_16(CODE[20]), STR_15(CODE[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strsetpoint(BANK2[20]), strtiempo(BANK2[20]), strpwm(BANK2[20]), strRPM(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1794$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1794$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 20
		 -> SP(BANK1[20]), 

    Control_velocidad_difusoInferenceEngine@_d_Salida	PTR  size(2) Largest target is 4
		 -> salida(BANK0[4]), 

    RL_reglas_controlador@Salida	PTR  size(2) Largest target is 4
		 -> Control_velocidad_difusoInferenceEngine@Salida(COMRAM[4]), 

    RL_reglas_controlador@_Salida_conc.param	PTR FTN(int ,) size(2) Largest target is 0

    RL_reglas_controlador@_Salida_conc.basis	PTR FTN() size(2) Largest target is 0

    RL_reglas_controlador@_Salida_conc.center	PTR FTN() size(2) Largest target is 4
		 -> TP_salida_sPG_center(), TP_salida_sPM_center(), TP_salida_sPP_center(), TP_salida_sZ_center(), 
		 -> TP_salida_sNP_center(), TP_salida_sNM_center(), TP_salida_sNG_center(), 

    RL_reglas_controlador@_Salida_conc.equal	PTR FTN(,) size(2) Largest target is 4
		 -> TP_salida_sPG_equal(), TP_salida_sPM_equal(), TP_salida_sPP_equal(), TP_salida_sZ_equal(), 
		 -> TP_salida_sNP_equal(), TP_salida_sNM_equal(), TP_salida_sNG_equal(), 

    _Salida.conc	PTR struct . size(2) Largest target is 56
		 -> RL_reglas_controlador@_Salida_conc(BANK1[56]), 

    _Salida.input	PTR  size(2) Largest target is 0

    _Salida.degree	PTR  size(2) Largest target is 28
		 -> RL_reglas_controlador@_Salida_degree(BANK1[28]), 

    _Salida.also	PTR FTN(,,) size(2) Largest target is 0

    _Salida.imp	PTR FTN(,,) size(2) Largest target is 0

    S454$param	PTR FTN(int ,) size(2) Largest target is 0

    mf.conc.param	PTR FTN(int ,) size(2) Largest target is 0

    S454$basis	PTR FTN() size(2) Largest target is 0

    mf.conc.basis	PTR FTN() size(2) Largest target is 0

    S454$center	PTR FTN() size(2) Largest target is 4
		 -> TP_salida_sPG_center(), TP_salida_sPM_center(), TP_salida_sPP_center(), TP_salida_sZ_center(), 
		 -> TP_salida_sNP_center(), TP_salida_sNM_center(), TP_salida_sNG_center(), 

    mf.conc.center	PTR FTN() size(2) Largest target is 4
		 -> TP_salida_sPG_center(), TP_salida_sPM_center(), TP_salida_sPP_center(), TP_salida_sZ_center(), 
		 -> TP_salida_sNP_center(), TP_salida_sNM_center(), TP_salida_sNG_center(), 

    S454$equal	PTR FTN(,) size(2) Largest target is 4
		 -> TP_salida_sPG_equal(), TP_salida_sPM_equal(), TP_salida_sPP_equal(), TP_salida_sZ_equal(), 
		 -> TP_salida_sNP_equal(), TP_salida_sNM_equal(), TP_salida_sNG_equal(), 

    mf.conc.equal	PTR FTN(,) size(2) Largest target is 4
		 -> TP_salida_sPG_equal(), TP_salida_sPM_equal(), TP_salida_sPP_equal(), TP_salida_sZ_equal(), 
		 -> TP_salida_sNP_equal(), TP_salida_sNM_equal(), TP_salida_sNG_equal(), 

    S467$conc	PTR struct . size(2) Largest target is 56
		 -> RL_reglas_controlador@_Salida_conc(BANK1[56]), 

    mf.conc	PTR struct . size(2) Largest target is 56
		 -> RL_reglas_controlador@_Salida_conc(BANK1[56]), 

    S467$input	PTR  size(2) Largest target is 0

    mf.input	PTR  size(2) Largest target is 0

    S467$degree	PTR  size(2) Largest target is 28
		 -> RL_reglas_controlador@_Salida_degree(BANK1[28]), 

    mf.degree	PTR  size(2) Largest target is 28
		 -> RL_reglas_controlador@_Salida_degree(BANK1[28]), 

    S467$also	PTR FTN(,,) size(2) Largest target is 0

    mf.also	PTR FTN(,,) size(2) Largest target is 0

    S467$imp	PTR FTN(,,) size(2) Largest target is 0

    mf.imp	PTR FTN(,,) size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[18]), STR_18(CODE[18]), strsetpoint(BANK2[20]), strRPM(BANK2[20]), 
		 -> STR_12(CODE[20]), STR_11(CODE[15]), STR_10(CODE[20]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[11]), STR_6(CODE[14]), STR_5(CODE[18]), 
		 -> STR_4(CODE[17]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[18]), 

    EUSART_WriteString@ptrString	PTR unsigned char  size(2) Largest target is 20
		 -> strtiempo(BANK2[20]), strpwm(BANK2[20]), strRPM(BANK2[20]), 


Critical Paths under _main in COMRAM

    _atol->___lmul
    ___xxtofl->_atol
    _Lcd_Clear->_Lcd_Cmd
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Key_Read->_Key_Enable_Filas
    _Hardware_Init->_EUSART_SerialBegin
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EUSART_SerialBegin->___lldiv
    _EUSART_WriteString->_EUSART_WriteChar
    _Control_velocidad_difusoInferenceEngine->_RL_reglas_controlador
    _RL_reglas_controlador->_OP_operador_Defuz
    _TP_error_eZ_equal->_MF_xfsg_triangle_equal
    _TP_error_ePP_equal->_MF_xfsg_triangle_equal
    _TP_error_ePM_equal->_MF_xfsg_triangle_equal
    _TP_error_ePG_equal->_MF_xfsg_triangle_equal
    _TP_error_eNP_equal->_MF_xfsg_triangle_equal
    _TP_error_eNM_equal->_MF_xfsg_triangle_equal
    _TP_error_eNG_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceZ_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePP_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePM_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePG_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNP_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNM_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNG_equal->_MF_xfsg_triangle_equal
    _MF_xfsg_triangle_equal->___fldiv
    ___flsub->___fladd
    _OP_operador_Or->_OP_operador_And
    _OP_operador_Defuz->___fldiv
    ___flmul->_TP_salida_sNG_center
    ___flmul->_TP_salida_sNM_center
    ___flmul->_TP_salida_sNP_center
    ___flmul->_TP_salida_sPG_center
    ___flmul->_TP_salida_sPM_center
    ___flmul->_TP_salida_sPP_center
    ___flmul->_TP_salida_sZ_center
    ___fldiv->___flsub
    ___fladd->___flmul
    _OP_operador_And->___flge
    ___flge->___flmul

Critical Paths under _InterruptHighPriority in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _LCD_imprimir_Datos->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _Control_velocidad_difusoInferenceEngine->_RL_reglas_controlador
    _RL_reglas_controlador->_OP_operador_Defuz
    _TP_error_eZ_equal->_MF_xfsg_triangle_equal
    _TP_error_ePP_equal->_MF_xfsg_triangle_equal
    _TP_error_ePM_equal->_MF_xfsg_triangle_equal
    _TP_error_ePG_equal->_MF_xfsg_triangle_equal
    _TP_error_eNP_equal->_MF_xfsg_triangle_equal
    _TP_error_eNM_equal->_MF_xfsg_triangle_equal
    _TP_error_eNG_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceZ_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePP_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePM_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_cePG_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNP_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNM_equal->_MF_xfsg_triangle_equal
    _TP_CambioError_ceNG_equal->_MF_xfsg_triangle_equal

Critical Paths under _InterruptHighPriority in BANK0

    None.

Critical Paths under _main in BANK1

    _Control_velocidad_difusoInferenceEngine->_RL_reglas_controlador

Critical Paths under _InterruptHighPriority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHighPriority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHighPriority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHighPriority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHighPriority in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHighPriority in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHighPriority in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  422626
                                            109 BANK0      2     2      0
_Control_velocidad_difusoInferenceEn
                 _EUSART_WriteString
                      _Hardware_Init
                           _Key_Read
                 _LCD_imprimir_Datos
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _atol
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _atol                                                15    11      4    1367
                                             12 COMRAM    15    11      4
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             27 COMRAM    14    10      4
                               _atol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_imprimir_Datos                                   0     0      0   36721
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   33295
                                             88 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32328
                                             80 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   31953
                                             90 COMRAM     4     4      0
                                             61 BANK0     19    13      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3973
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   24252
                                             88 COMRAM     2     2      0
                                             10 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2923
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1105
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     704
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             78 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1384
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     283
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     389
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1942
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Key_Read                                             4     4      0     242
                                              3 COMRAM     4     4      0
                   _Key_Enable_Filas
                  _Key_Scan_Columnas
 ---------------------------------------------------------------------------------
 (2) _Key_Scan_Columnas                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Key_Enable_Filas                                     3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Hardware_Init                                        0     0      0     656
                 _CCPR2_ModoPWM_Init
                 _EUSART_SerialBegin
                     _INTERRUPT_Init
                           _Key_Init
                           _Lcd_Init
                     _OSCILADOR_Init
                          _PORT_Init
              _TIMER0_Interrupt_Init
       _TIMER0_ModoTemporizador_Init
           _TIMER1_ModoContador_Init
                _TIMER2_ModoPWM_Init
 ---------------------------------------------------------------------------------
 (2) _TIMER2_ModoPWM_Init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER1_ModoContador_Init                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_ModoTemporizador_Init                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Interrupt_Init                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_SerialBegin                                   6     2      4     458
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _CCPR2_ModoPWM_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_WriteString                                   2     0      2     295
                                              1 COMRAM     2     0      2
                   _EUSART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _EUSART_WriteChar                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Control_velocidad_difusoInferenceEngine             14     4     10  332476
                                             84 COMRAM     4     4      0
                                             54 BANK0     10     0     10
              _RL_reglas_controlador
 ---------------------------------------------------------------------------------
 (2) _RL_reglas_controlador                              216   206     10  332136
                                             82 COMRAM     2     2      0
                                             44 BANK0     10     0     10
                                              0 BANK1    204   204      0
                    _OP_operador_And
                  _OP_operador_Defuz
                     _OP_operador_Or
          _TP_CambioError_ceNG_equal
          _TP_CambioError_ceNM_equal
          _TP_CambioError_ceNP_equal
          _TP_CambioError_cePG_equal
          _TP_CambioError_cePM_equal
          _TP_CambioError_cePP_equal
           _TP_CambioError_ceZ_equal
                 _TP_error_eNG_equal
                 _TP_error_eNM_equal
                 _TP_error_eNP_equal
                 _TP_error_ePG_equal
                 _TP_error_ePM_equal
                 _TP_error_ePP_equal
                  _TP_error_eZ_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_eZ_equal                                    4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_ePP_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_ePM_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_ePG_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_eNP_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_eNM_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_error_eNG_equal                                   4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_ceZ_equal                             4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_cePP_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_cePM_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_cePG_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_ceNP_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_ceNM_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (3) _TP_CambioError_ceNG_equal                            4     0      4   21284
                                             28 BANK0      4     0      4
             _MF_xfsg_triangle_equal
 ---------------------------------------------------------------------------------
 (4) _MF_xfsg_triangle_equal                              32     4     28   21186
                                             78 COMRAM     4     4      0
                                              0 BANK0     28     0     28
                            ___fldiv
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4409
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _OP_operador_Or                                       8     0      8    9086
                                             49 COMRAM     8     0      8
                    _OP_operador_And (ARG)
                             ___flge
 ---------------------------------------------------------------------------------
 (3) _OP_operador_Defuz                                   48    22     26    9706
                                             78 COMRAM     4     4      0
                                              0 BANK0     44    18     26
               _TP_salida_sNG_center *
               _TP_salida_sNM_center *
               _TP_salida_sNP_center *
               _TP_salida_sPG_center *
               _TP_salida_sPM_center *
               _TP_salida_sPP_center *
                _TP_salida_sZ_center *
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                              4 COMRAM    25    17      8
               _TP_salida_sNG_center (ARG) *
               _TP_salida_sNM_center (ARG) *
               _TP_salida_sNP_center (ARG) *
               _TP_salida_sPG_center (ARG) *
               _TP_salida_sPM_center (ARG) *
               _TP_salida_sPP_center (ARG) *
                _TP_salida_sZ_center (ARG) *
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2615
                                             53 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3022
                                             29 COMRAM    16     8      8
               _TP_salida_sNG_center (ARG) *
               _TP_salida_sNM_center (ARG) *
               _TP_salida_sNP_center (ARG) *
               _TP_salida_sPG_center (ARG) *
               _TP_salida_sPM_center (ARG) *
               _TP_salida_sPP_center (ARG) *
                _TP_salida_sZ_center (ARG) *
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sZ_center                                  4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sPP_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sPM_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sPG_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sNP_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sNM_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _TP_salida_sNG_center                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _OP_operador_And                                      8     0      8   10150
                                             41 COMRAM     8     0      8
                             ___flge
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2614
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHighPriority                               0     0      0       0
                       _TIMER1_Start
                        _TIMER1_Stop
 ---------------------------------------------------------------------------------
 (11) _TIMER1_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER1_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Control_velocidad_difusoInferenceEngine
     _RL_reglas_controlador
       _OP_operador_And
         ___flge
           ___flmul (ARG)
             _TP_salida_sNG_center (ARG) *
             _TP_salida_sNM_center (ARG) *
             _TP_salida_sNP_center (ARG) *
             _TP_salida_sPG_center (ARG) *
             _TP_salida_sPM_center (ARG) *
             _TP_salida_sPP_center (ARG) *
             _TP_salida_sZ_center (ARG) *
       _OP_operador_Defuz
         _TP_salida_sNG_center *
         _TP_salida_sNM_center *
         _TP_salida_sNP_center *
         _TP_salida_sPG_center *
         _TP_salida_sPM_center *
         _TP_salida_sPP_center *
         _TP_salida_sZ_center *
         ___fladd *
           _TP_salida_sNG_center (ARG) *
           _TP_salida_sNM_center (ARG) *
           _TP_salida_sNP_center (ARG) *
           _TP_salida_sPG_center (ARG) *
           _TP_salida_sPM_center (ARG) *
           _TP_salida_sPP_center (ARG) *
           _TP_salida_sZ_center (ARG) *
           ___flmul (ARG) *
         ___fldiv *
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
             ___xxtofl (ARG)
               _atol (ARG)
                 ___lmul
                 _isdigit
                 _isspace
         ___fleq *
         ___flmul *
       _OP_operador_Or
         _OP_operador_And (ARG)
         ___flge (ARG)
       _TP_CambioError_ceNG_equal
         _MF_xfsg_triangle_equal
           ___fldiv
           ___flge
           ___flsub
       _TP_CambioError_ceNM_equal
         _MF_xfsg_triangle_equal
       _TP_CambioError_ceNP_equal
         _MF_xfsg_triangle_equal
       _TP_CambioError_cePG_equal
         _MF_xfsg_triangle_equal
       _TP_CambioError_cePM_equal
         _MF_xfsg_triangle_equal
       _TP_CambioError_cePP_equal
         _MF_xfsg_triangle_equal
       _TP_CambioError_ceZ_equal
         _MF_xfsg_triangle_equal
       _TP_error_eNG_equal
         _MF_xfsg_triangle_equal
       _TP_error_eNM_equal
         _MF_xfsg_triangle_equal
       _TP_error_eNP_equal
         _MF_xfsg_triangle_equal
       _TP_error_ePG_equal
         _MF_xfsg_triangle_equal
       _TP_error_ePM_equal
         _MF_xfsg_triangle_equal
       _TP_error_ePP_equal
         _MF_xfsg_triangle_equal
       _TP_error_eZ_equal
         _MF_xfsg_triangle_equal
   _EUSART_WriteString
     _EUSART_WriteChar
   _Hardware_Init
     _CCPR2_ModoPWM_Init
     _EUSART_SerialBegin
       ___lldiv
     _INTERRUPT_Init
     _Key_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _OSCILADOR_Init
     _PORT_Init
     _TIMER0_Interrupt_Init
     _TIMER0_ModoTemporizador_Init
     _TIMER1_ModoContador_Init
     _TIMER2_ModoPWM_Init
   _Key_Read
     _Key_Enable_Filas
     _Key_Scan_Columnas
   _LCD_imprimir_Datos
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
   ___fladd
   ___flge
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _atol
   _sprintf

 _InterruptHighPriority (ROOT)
   _TIMER1_Start
   _TIMER1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      37        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CC      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllh      22      0       0      34        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhhhlh     10      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlhlh        C      0       0      27        0.0%
BITBIGSFRllllll      8      0       0      35        0.0%
BITBIGSFRlhhlh       7      0       0      26        0.0%
BITBIGSFRlhllh       5      0       0      28        0.0%
BITBIGSFRlllhh       4      0       0      32        0.0%
BITBIGSFRllhhl       3      0       0      30        0.0%
BITBIGSFRlllhl       3      0       0      33        0.0%
BITBIGSFRlhhhh       2      0       0      23        0.0%
BITBIGSFRlhhhll      1      0       0      25        0.0%
BITBIGSFRllhl        1      0       0      31        0.0%
BITBIGSFRlhlll       1      0       0      29        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     294      36        0.0%
DATA                 0      0     294       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Oct 23 00:16:42 2023

                                                 l5 6226                                        ___fldiv@aexp 004E  
                                      ___fldiv@bexp 004D                        __end_of_TP_salida_sNG_center 61EA  
                                      ___fldiv@sign 0046                                  _EUSART_SerialBegin 5AF4  
                                                l30 4E8C                                                  l31 4E78  
                                                l40 4ED8                                                  l18 6234  
                                                l34 4F1E                                                  l27 5C1A  
                                                l35 4EBC                                                  l51 3FB2  
                                                l44 4F08                                                  l36 4EA8  
                                                l60 4034                                                  l61 403C  
                                                l53 3FBA                                                  l62 4044  
                                                l54 3FC2                                                  l39 4EEC  
                                                l55 3FCA                                                  l72 4120  
                                                l65 40A6                                                  l74 4128  
                                                l58 402C                                                  l75 4130  
                                                l67 40AE                                                  l76 4138  
                                                l68 40B6                                                  l77 417C  
                                                l69 40BE                                                  _SP 01D0  
                               ___wmul@multiplicand 0003                        __end_of_TP_salida_sPG_center 6190  
                      __end_of_TP_salida_sNM_center 61D8                                                 l112 6154  
                                               l106 5B58                                                 l212 5D26  
                                               l205 4366                                                 l109 6142  
                                               l310 618E                                                 l118 6050  
                                               l304 61A0                                                 l216 5CBE  
                                               l232 54E8                                                 l136 612C  
                                               l209 5D16                                                 l241 52C8  
                                               l313 1604                                                 l226 3B7A  
                                               l250 5928                                                 l162 6218  
                                               l219 5CCE                                                 l235 5460  
                                               l139 613E                                                 l244 5350  
                                               l316 5E62                                                 l156 5C76  
                                               l172 4CC0                                                 l253 58A0  
                                               l229 5570                                                 l262 5680  
                                               l238 5240                                                 l247 53D8  
                                               l159 6128                                                 l175 5A22  
                                               l511 51B8                                                 l280 61D6  
                                               l256 5818                                                 l168 4CC0  
                                               l184 59A6                                                 l265 5708  
                                               l505 620A                                                 l274 61E8  
                                               l514 5FB0                                                 l178 6020  
                                               l442 2714                                                 l259 55F8  
                                               l292 61FA                                                 l268 5790  
                                               l508 617C                                                 l517 60A2  
                                               l445 2134                                                 l286 61C4  
                                               l551 511A                                                 l544 510A  
                                               l528 5A7C                                                 l529 5A8C  
                                               l298 61B2                                                 l490 623C  
                                               l484 60E8                                                 l493 6244  
                                               l814 48FC                                                 l487 60C6  
                                               l496 6108                                                 l782 49BA  
                                               l791 5FE8                                                 l776 5076  
                                               l962 4BEE                                                 l787 4A00  
                                               l955 4BCE                                                 l972 4D90  
                                               l965 4D70                                                 _PR2 000FBB  
                                               _RPM 00F1                            __end_of_EUSART_WriteChar 6156  
                      __end_of_TP_salida_sNP_center 61C6                                                 _pad 4F20  
                               ?_EUSART_SerialBegin 000E                        __end_of_TP_salida_sPM_center 61A2  
                                               tosl 000FFD                                                 wreg 000FE8  
                        _RL_reglas_controlador$2380 0164                          _RL_reglas_controlador$2381 0160  
                        _RL_reglas_controlador$2382 011C                          _RL_reglas_controlador$2383 0120  
                        _RL_reglas_controlador$2384 0124                          _RL_reglas_controlador$2377 0186  
                        _RL_reglas_controlador$2378 018A                          _RL_reglas_controlador$2379 018E  
                                        _TXSTA1bits 000FAC                                        ___flmul@aexp 0016  
                                      ___flmul@bexp 0017                        __end_of_TP_salida_sPP_center 61B4  
                                      ___flmul@sign 0011                                        ___flmul@temp 001C  
                                      ___flmul@prod 0018                                        ___fltol@exp1 000A  
                                              l1101 379A                                                l1110 37E0  
                                              l1112 3858                                                l1104 375E  
                                              l1113 3846                                                l1210 469C  
                                              l1131 323C                                                l1140 34AA  
                                              l1045 2EA6                                                l1141 3498  
                        __end_of_CCPR2_ModoPWM_Init 617E                                                l1213 46AC  
                                              l1062 2FC0                                                l1054 3176  
                                              l1046 2E94                                                l1071 3090  
                                              l1047 2E5A                                                l1135 35A0  
                                              l1072 307E                                                l1216 607C  
                                              l1224 5EA8                                                l1138 3432  
                                              l1402 5DCA                                                l1234 5D78  
                                              l1148 3562                                                l1412 4AFE  
                                              l1172 43BE                                                l1318 1DE0  
                                              l1087 5EEE                                                l1175 451A  
                                              l1272 4FA8                                                l1337 3DCA  
                                              l1274 4FCC                                                l1290 17DE  
                                              l1186 44B2                                                l1099 393A  
                                              l1435 47EE                                                l1347 3F8C  
                                              l1339 3DD2                                                l1179 4456  
                                              l1444 3D90                                                l1269 4F66  
                                              l1285 2068                                                l1438 47F6  
                                              l4102 612C                                                l4110 4DB6  
                                              l1447 3CD4                                                l1455 5AE2  
                                              l4200 2DFC                                                l4120 2CB8  
                                              l1464 5E1A                                                l4104 613A  
                                              l4112 4DC0                                                l5000 1D3E  
                                              l1288 1998                                                l4210 2E74  
                                              l4202 2E26                                                l4130 2CF4  
                                              l4122 2CC4                                                l1458 5AF2  
                                              l4114 4DDE                                                l4106 4D92  
                                              l1490 5F72                                                l5010 1E10  
                                              l5002 1DB6                                                l1379 2CB6  
                                              l4300 3106                                                l4220 2EB4  
                                              l4212 2E78                                                l4204 2E42  
                                              l4140 2D24                                                l4132 2D04  
                                              l4124 2CD2                                                l4116 4E14  
                                              l1476 4E5A                                                l4108 4DA4  
                                              l1484 5F32                                                l5020 1E36  
                                              l5012 1E14                                                l5004 1DD6  
                                              l5100 3F0A                                                l4310 314E  
                                              l4302 3116                                                l4230 2EF6  
                                              l4222 2EC4                                                l4214 2E86  
                                              l4206 2E52                                                l4150 2D4E  
                                              l4142 2D36                                                l4134 2D06  
                                              l4126 2CD4                                                l5030 1E6A  
                                              l5022 1E3C                                                l5014 1E1A  
                                              l5006 1DF2                                                l5102 3F28  
                                              l4312 3150                                                l4304 3136  
                                              l4240 2F24                                                l4232 2F04  
                                              l4216 2E88                                                l4208 2E68  
                                              l4152 2D5E                                                l4160 2D88  
                                              l4144 2D38                                                l4128 2CE4  
                                              l4136 2D0E                                                l4400 3712  
                                              l5120 46E2                                                l5112 46AE  
                                              l5032 1E70                                                l5016 1E22  
                                              l5008 1E00                                                l5024 1E42  
                                              l5040 1F08                                                l5104 3F42  
                                              l6000 516A                                                l5202 61A2  
                                              l5210 617E                                                l4314 3156  
                                              l4306 313A                                                l4250 2F90  
                                              l4242 2F2E                                                l4234 2F10  
                                              l4226 2ED8                                                l4218 2E92  
                                              l4170 2DC0                                                l4162 2D98  
                                              l4154 2D6E                                                l4146 2D3E  
                                              l4138 2D1E                                                l4410 375C  
                                              l4402 3722                                                l4330 607E  
                                              l5122 4716                                                l5114 46C2  
                                              l4322 5EF0                                                l5050 1F8A  
                                              l5042 1F26                                                l5034 1EC8  
                                              l5026 1E54                                                l5018 1E32  
                                              l5106 3F5C                                                l6010 51A2  
                                              l6002 5176                                                l4316 3164  
                                              l4308 3148                                                l4252 2FA0  
                                              l4236 2F14                                                l4228 2EE8  
                                              l4244 2F34                                                l4180 2DD4  
                                              l4172 2DC4                                                l4164 2DAA  
                                              l4156 2D7E                                                l4148 2D4C  
                                              l4420 37AA                                                l4412 3768  
                                              l4404 372A                                                l4340 35BC  
                                              l4500 3206                                                l4332 609A  
                                              l5124 471E                                                l4324 5EFC  
                                              l5060 1FD8                                                l5052 1F98  
                                              l5044 1F42                                                l5036 1EFC  
                                              l5028 1E66                                                l5108 3F6C  
                                              l5300 2B70                                                l5220 27AA  
                                              l6012 51AC                                                l6004 5180  
                                              l6020 453C                                                l5206 6190  
                                              l4318 3166                                                l4270 3022  
                                              l4262 2FFA                                                l4246 2F5A  
                                              l4254 2FB0                                                l4238 2F22  
                                              l4190 2DE8                                                l4182 2DD8  
                                              l4174 2DC8                                                l4166 2DB8  
                                              l4158 2D80                                                l4422 37C0  
                                              l4430 37F0                                                l4414 3786  
                                              l4406 373A                                                l4350 35F0  
                                              l4342 35BE                                                l4510 325C  
                                              l4502 3216                                                l5150 5C34  
                                              l5134 4790                                                l5126 4726  
                                              l5118 46C6                                                l4326 5F0E  
                                              l5070 2040                                                l5062 1FDE  
                                              l5054 1FB0                                                l5046 1F4A  
                                              l5038 1F04                                                l5310 2C22  
                                              l5302 2BA4                                                l5222 27AE  
                                              l5214 276A                                                l6006 518C  
                                              l6030 45CA                                                l6022 4556  
                                              l6014 451C                                                l4272 302A  
                                              l4264 3004                                                l4256 2FD6  
                                              l4248 2F8E                                                l4280 304E  
                                              l4192 2DEC                                                l4184 2DDC  
                                              l4176 2DCC                                                l4168 2DBC  
                                              l4432 37FE                                                l4424 37C6  
                                              l4416 3788                                                l4408 374E  
                                              l4360 3622                                                l4344 35CE  
                                              l4352 35F8                                                l4336 35A2  
                                              l4600 3590                                                l4520 329C  
                                              l4504 3226                                                l5400 3A46  
                                              l5160 5C5E                                                l5152 5C42  
                                              l5144 5C1E                                                l5136 47C0  
                                              l5128 475A                                                l4328 5F12  
                                              l5072 2048                                                l5064 1FFC  
                                              l5048 1F5A                                                l5080 3DA4  
                                              l5240 287A                                                l5232 27DA  
                                              l5224 27BA                                                l5216 278E  
                                              l6008 5196                                                l6040 4666  
                                              l6024 4588                                                l6016 4538  
                                              l6200 2274                                                l4290 30A0  
                                              l4282 3052                                                l4274 302E  
                                              l4266 3012                                                l4258 2FE6  
                                              l4194 2DF0                                                l4186 2DE0  
                                              l4178 2DD0                                                l4442 3868  
                                              l4450 38B0                                                l4434 3802  
                                              l4426 37D0                                                l4418 3798  
                                              l4370 3656                                                l4362 3624  
                                              l4354 3608                                                l4346 35DE  
                                              l4338 35AE                                                l4610 4FCE  
                                              l4530 32E6                                                l4522 32A8  
                                              l4514 3270                                                l4506 322C  
                                              l5402 3A94                                                l5170 41B0  
                                              l5162 5C60                                                l5154 5C48  
                                              l5146 5C2C                                                l5138 47D2  
                                              l5058 1FC2                                                l5066 201A  
                                              l5090 3E12                                                l5082 3DBE  
                                              l5306 2BD8                                                l5250 28C4  
                                              l5242 2888                                                l5226 27BC  
                                              l5234 280E                                                l5218 279C  
                                              l5322 2C8E                                                l6050 436A  
                                              l6026 4590                                                l6210 22C2  
                                              l6202 227A                                                l6130 206E  
                                              l4292 30AC                                                l4284 3060  
                                              l4276 303E                                                l4268 3014  
                                              l4196 2DF4                                                l4188 2DE4  
                                              l4460 391A                                                l4452 38CA  
                                              l4444 3874                                                l4436 3810  
                                              l4428 37DE                                                l4380 369C  
                                              l4364 3634                                                l4372 365E  
                                              l4356 360E                                                l4348 35EE  
                                              l4620 506E                                                l4612 4FFC  
                                              l4540 3338                                                l4532 32F2  
                                              l4524 32C0                                                l4516 327C  
                                              l4508 324C                                                l5412 3B46  
                                              l5404 3A9A                                                l4604 5EAA  
                                              l5180 42D6                                                l5172 41E2  
                                              l5420 5462                                                l5164 5C6E  
                                              l5156 5C4A                                                l5148 5C32  
                                              l5068 202A                                                l4700 4B00  
                                              l5092 3E88                                                l5084 3DFA  
                                              l5076 3D92                                                l5316 2C50  
                                              l5308 2C02                                                l5260 295C  
                                              l5252 28FC                                                l5244 2896  
                                              l5236 2820                                                l5228 27CE  
                                              l5500 5DC0                                                l6052 437A  
                                              l6036 4626                                                l6028 4598  
                                              l6300 2704                                                l6220 2310  
                                              l6212 22CE                                                l6204 227E  
                                              l6140 20AC                                                l6132 2072  
                                              l4630 493C                                                l5190 61C6  
                                              l4294 30BA                                                l4286 3076  
                                              l4278 3040                                                l4198 2DF8  
                                              l4462 3928                                                l4454 38E0  
                                              l4446 3882                                                l4438 383E  
                                              l4390 36C4                                                l4382 36A0  
                                              l4374 366E                                                l4366 3644  
                                              l4358 3614                                                l4622 5074  
                                              l4614 500C                                                l4550 33B6  
                                              l4542 3348                                                l4534 3302  
                                              l4526 32CC                                                l4518 3286  
                                              l5406 3AB8                                                l4606 5EBA  
                                              l5174 4214                                                l5182 42EA  
                                              l5166 5C74                                                l5158 5C58  
                                              l5510 5BC8                                                l4710 4B54  
                                              l4702 4B0C                                                l5094 3E8E  
                                              l5086 3E02                                                l5078 3DA2  
                                              l5318 2C7C                                                l5262 2996  
                                              l5254 2920                                                l5270 29FC  
                                              l5246 28B6                                                l5238 2844  
                                              l6070 4440                                                l6062 43F8  
                                              l6054 4388                                                l6038 4654  
                                              l6230 233E                                                l6222 232A  
                                              l6214 22E4                                                l6206 2282  
                                              l6150 210C                                                l6142 20C6  
                                              l6134 207C                                                ?_pad 0012  
                                              l4640 49A8                                                l4632 496A  
                                              l4296 30F4                                                l4464 392E  
                                              l4456 38FA                                                l4448 38AC  
                                              l4376 3684                                                l4368 3654  
                                              l4616 503A                                                l4560 3430  
                                              l4552 33EC                                                l4544 3364  
                                              l4536 330E                                                l4528 32D8  
                                              l4480 3194                                                l5408 3AEA  
                                              l5176 4246                                                l5168 417E  
                                              l5416 54EA                                                l5424 53DA  
                                              l5440 5352                                                l5432 5242  
                                              l5360 610E                                                l5504 621A  
                                              l5512 5BCE                                                l5520 5BE0  
                                              l5600 4C8C                                                l4800 5AAC  
                                              l4720 4BC8                                                l4712 4B66  
                                              l4704 4B2A                                                l5096 3E94  
                                              l5088 3E0C                                                l5272 2A0C  
                                              l5264 29B6                                                l5256 292A  
                                              l6080 44C0                                                l6072 444C  
                                              l6064 4400                                                l6056 43CE  
                                              l6240 237C                                                l6232 2348  
                                              l6224 232E                                                l6216 22EE  
                                              l6208 22B4                                                l6160 2158  
                                              l6152 2126                                                l6144 20D0  
                                              l6136 208A                                                l6128 206A  
                                              l4642 49F8                                                l4634 497A  
                                              l4626 48FE                                                l5186 61D8  
                                              l5194 61B4                                                l4298 30F6  
                                              l4466 3930                                                l4458 3916  
                                              l4394 36D8                                                l4378 3694  
                                              l4386 36B4                                                l4618 504A  
                                              l4570 3490                                                l4562 3442  
                                              l4554 33FA                                                l4546 3370  
                                              l4538 331E                                                l4490 31DA  
                                              l4482 31A4                                                l4474 3178  
                                              l5178 425A                                                l5506 6228  
                                              l5362 6114                                                l5610 59B0  
                                              l5514 5BD4                                                l5530 4E86  
                                              l5602 4C9E                                                l5370 5FF8  
                                              l4650 5FC8                                                l4810 3C16  
                                              l4802 3B7C                                                l4714 4B94  
                                              l4706 4B32                                                l4730 4D0A  
                                              l4722 4CC2                                                l5098 3EF8  
                                              l5290 2B0C                                                l5282 2AB6  
                                              l5274 2A28                                                l5258 2938  
                                              l6090 4508                                                l6082 44C2  
                                              l6074 4488                                                l6066 440C  
                                              l6058 43E4                                                l6250 2482  
                                              l6242 23F4                                                l6234 2358  
                                              l6218 2304                                                l6226 2338  
                                              l6170 21A6                                                l6162 2164  
                                              l6154 212A                                                l6146 20DC  
                                              l6138 2096                                                l6306 2714  
                                              l4644 49FE                                                l4636 4988  
                                              l4628 492C                                                l4396 36F2  
                                              l4388 36C4                                                l4580 34FE  
                                              l4564 3450                                                l4556 3418  
                                              l4548 338C                                                l4492 31E0  
                                              l4484 31B4                                                l4476 3184  
                                              l5444 58A2                                                l5452 5792  
                                              l5460 55FA                                                l5436 52CA  
                                              l5428 51BA                                                l5700 05F2  
                                              l5364 6116                                                l5620 59E2  
                                              l5612 59B6                                                l5516 5BDA  
                                              l5508 5BC0                                                l5540 4ECA  
                                              l5604 4CB0                                                l5380 6014  
                                              l5372 5FFA                                                l4740 5E68  
                                              l4652 5FD8                                                l4820 3D34  
                                              l4804 3B9C                                                l4716 4BB4  
                                              l4708 4B46                                                l4732 4D38  
                                              l4724 4CE0                                                l5292 2B14  
                                              l5276 2A86                                                l5284 2AE2  
                                              l5268 29C4                                                l6092 450A  
                                              l6084 44C6                                                l6076 4494  
                                              l6068 443E                                                l6260 253C  
                                              l6252 24B4                                                l6244 240A  
                                              l6236 2364                                                l6228 233C  
                                              l6180 21F4                                                l6172 21AE  
                                              l6164 217A                                                l6156 2136  
                                              l6148 2100                                                l4638 499A  
                                              l5198 61EA                                                l4398 3702  
                                              l4590 3566                                                l4574 34BA  
                                              l4582 3502                                                l4566 3454  
                                              l4558 3422                                                l4494 31E6  
                                              l4486 31C4                                                l4478 3192  
                                              l5390 5C78                                                l5710 06DC  
                                              l5702 05FC                                                l5366 6126  
                                              l5358 610C                                                l5630 5A0A  
                                              l5622 59F2                                                l5614 59C6  
                                              l5542 4EE6                                                l5534 4E9A  
                                              l5526 4E5C                                                l5606 4CB6  
                                              l5382 6016                                                l5374 6002  
                                              l4750 6052                                                l4742 5E7C  
                                              l4670 4862                                                l4662 4822  
                                              l4822 3D48                                                l4814 3C88  
                                              l4806 3BF4                                                l4830 5DCC  
                                              l4910 17F4                                                l4902 178E  
                                              l4718 4BB6                                                l4734 4D58  
                                              l4726 4CE8                                                l5286 2AF2  
                                              l6086 44EA                                                l6078 44A2  
                                              l6270 25FC                                                l6262 2594  
                                              l6254 24CA                                                l6246 243C  
                                              l6238 2374                                                l6190 221C  
                                              l6182 21F6                                                l6174 21BE  
                                              l6166 2184                                                l6158 214E  
                                              l4592 3576                                                l4584 351C  
                                              l4576 34C6                                                l4568 3462  
                                              l4496 31F4                                                l4488 31CA  
                                              l5392 5CAA                                                l5448 581A  
                                              l5464 5682                                                l5456 5572  
                                              l5800 132A                                                l5720 0822  
                                              l5712 0734                                                l5704 0604  
                                              l5480 50B2                                                l5472 5078  
                                              l5560 5AF8                                                l5632 5A10  
                                              l5624 59F8                                                l5616 59CC  
                                              l5608 59A8                                                l5552 4F1C  
                                              l5536 4EB6                                                l5528 4E6A  
                                              l5384 601E                                                l5376 6004  
                                              l5368 5FEC                                                l5640 5936  
                                              l4744 5E9E                                                l4648 5FB2  
                                              l4680 4892                                                l4672 4870  
                                              l4664 484C                                                l4656 47F8  
                                              l4824 3D70                                                l4816 3CC4  
                                              l4808 3C08                                                l4832 5DE0  
                                              l4840 5E00                                                l4760 4F52  
                                              l4920 18EA                                                l4912 1828  
                                              l4904 17A8                                                l4736 4D6A  
                                              l4728 4CFC                                                l5288 2B04  
                                              l5296 2B1C                                                l6088 44FA  
                                              l6280 2646                                                l6272 2618  
                                              l6264 25C6                                                l6256 24FC  
                                              l6248 244E                                                l6184 21F8  
                                              l6176 21D0                                                l6192 2224  
                                              l6168 219A                                                l5386 5CD0  
                                              l4594 3584                                                l4586 3530  
                                              l4578 34D4                                                l4498 31F6  
                                              l5394 393C                                                l5810 14E2  
                                              l5802 1382                                                l5730 09AA  
                                              l5722 0826                                                l5714 078C  
                                              l5706 0608                                                l5650 009E  
                                              l5490 50FA                                                l5482 50C0  
                                              l5474 5088                                                l5570 5B54  
                                              l5562 5AFA                                                l5634 5A16  
                                              l5626 59FE                                                l5618 59DC  
                                              l5546 4EFA                                                l5378 600C  
                                              l5642 5966                                                l4746 5EA2  
                                              l4738 5E64                                                l4690 48BC  
                                              l4682 489C                                                l4666 484E  
                                              l4658 480E                                                l4826 3D80  
                                              l4818 3CF8                                                l4834 5DEC  
                                              l4770 4FB8                                                l4762 4F5E  
                                              l4754 4F20                                                l4930 19A0  
                                              l4922 191E                                                l4914 1866  
                                              l4850 162E                                                l4842 1606  
                                              l5298 2B50                                                l6282 265E  
                                              l6274 2628                                                l6266 25DC  
                                              l6258 250E                                                l6194 2236  
                                              l6186 2208                                                l6178 21E2  
                                              l5388 5D02                                                l4596 3586  
                                              l4588 354A                                                l5396 395C  
                                              l5468 570A                                                l5820 15D4  
                                              l5812 153A                                                l5804 13DA  
                                              l5740 0A9C                                                l5732 0A02  
                                              l5724 08A2                                                l5716 07BE  
                                              l5708 0684                                                l5660 013E  
                                              l5652 00AE                                                l5572 6142  
                                              l5492 5104                                                l5484 50CA  
                                              l5476 509E                                                l5564 5AFC  
                                              l5556 5AF4                                                l5636 5A1C  
                                              l5628 5A04                                                l5548 4F16  
                                              l5900 3F98                                                l5580 4C14  
                                              l5644 596A                                                l4692 48CC  
                                              l4668 485E                                                l4780 4A94  
                                              l4772 4A02                                                l4836 5DF0  
                                              l4764 4F72                                                l4756 4F30  
                                              l4940 19D0                                                l4932 19B0  
                                              l4924 1926                                                l4916 1898  
                                              l4908 17EE                                                l4860 1684  
                                              l4852 1652                                                l4844 160C  
                                              l6284 2666                                                l6276 2638  
                                              l6268 25EC                                                l6196 223E  
                                              l6188 2218                                                l4598 358C  
                                              l5398 398A                                                l5814 156C  
                                              l5806 1432                                                l5750 0C78  
                                              l5742 0B18                                                l5734 0A34  
                                              l5726 08FA                                                l5718 07EC  
                                              l5670 01F2                                                l5662 0162  
                                              l5654 00D2                                                l5646 005C  
                                              l5574 6150                                                l5486 50E8  
                                              l5478 50A6                                                l5566 5B0A  
                                              l5558 5AF4                                                l5910 4012  
                                              l5590 4C4E                                                l5582 4C1A  
                                              l5638 592A                                                l4694 48DC  
                                              l4678 4888                                                l4790 4AF6  
                                              l4774 4A22                                                l4838 5DFC  
                                              l4766 4F86                                                l4758 4F44  
                                              l4942 19E2                                                l4950 1A22  
                                              l4934 19BC                                                l4918 18D6  
                                              l4870 16D4                                                l4862 1690  
                                              l4854 165C                                                l4846 161C  
                                              l5494 5D7A                                                l5830 5D66  
                                              l5822 5D28                                                l6294 268C  
                                              l6286 2676                                                l6278 2642  
                                              l6198 2242                                                l5816 159A  
                                              l5808 148A                                                l5760 0D6A  
                                              l5752 0CD0                                                l5744 0B70  
                                              l5736 0A62                                                l5728 0952  
                                              l5680 02A6                                                l5672 0216  
                                              l5664 0186                                                l5656 00F6  
                                              l5648 0096                                                l5488 50F8  
                                              l5568 5B50                                                l5840 60D4  
                                              l5920 4086                                                l5912 4018  
                                              l5592 4C58                                                l5584 4C24  
                                              l5576 4BF2                                                l4696 48EC  
                                              l4688 48B0                                                l4776 4A60  
                                              l4784 4AA0                                                l4768 4F8A  
                                              l4960 1B0A                                                l4952 1A2A  
                                              l4944 19F0                                                l4936 19C4  
                                              l4928 1966                                                l4880 1708  
                                              l4872 16D8                                                l4864 1698  
                                              l4856 1664                                                l4848 162A  
                                              l5496 5D86                                                l5824 5D3A  
                                              l6296 26EC                                                l5818 15D0  
                                              l5770 0F46                                                l5762 0DE6  
                                              l5754 0D02                                                l5746 0BC8  
                                              l5738 0A98                                                l5690 0482  
                                              l5682 0322                                                l5674 023A  
                                              l5666 01AA                                                l5658 011A  
                                              l5850 60DE                                                l5842 60D6  
                                              l5834 60C8                                                l5930 40C6  
                                              l5922 408C                                                l5906 3FD2  
                                              l5594 4C6A                                                l5586 4C36  
                                              l5578 4C02                                                l4786 4AB2  
                                              l4778 4A88                                                l4794 5F34  
                                              l4970 1BC8                                                l4962 1B3E  
                                              l4954 1A3A                                                l4946 1A08  
                                              l4938 19CC                                                l4890 1764  
                                              l4874 16DE                                                l4858 1674  
                                              l4866 169C                                                l5498 5DA4  
                                              l5826 5D42                                                l6298 26F8  
                                              l5780 105C                                                l5772 0F78  
                                              l5764 0E3E                                                l5756 0D30  
                                              l5748 0C20                                                l5692 04DA  
                                              l5684 037A                                                l5676 025E  
                                              l5668 01CE                                                l5852 60E0  
                                              l5844 60D8                                                l5836 60CE  
                                              l5860 60B2                                                l5932 4100  
                                              l5924 4092                                                l5908 400C  
                                              l5596 4C7C                                                l5588 4C48  
                                              l4796 5F44                                                l4980 1C64  
                                              l4972 1BDE                                                l4956 1A4E  
                                              l4964 1B44                                                l4948 1A1A  
                                              l4892 176A                                                l4876 16E6  
                                              l4868 16C2                                                l4884 1728  
                                              l6660 2B32                                                l5828 5D4A  
                                              l6652 2728                                                l5790 11C4  
                                              l5782 10B4                                                l5774 0FA6  
                                              l5766 0E96                                                l5758 0D66  
                                              l5694 0532                                                l5686 03D2  
                                              l5678 0282                                                l5854 60E2  
                                              l5846 60DA                                                l5838 60D2  
                                              l5862 60C4                                                l5870 60EE  
                                              l5942 4140                                                l5934 4106  
                                              l6670 4060                                                l5918 404C  
                                              l5598 4C82                                                l4798 5A8E  
                                              l4982 1CBA                                                l4990 1D0C  
                                              l4974 1C10                                                l4966 1B62  
                                              l4958 1AB2                                                l4894 1772  
                                              l4886 174E                                                l4878 16FE  
                                              l6662 2BEC                                                l6654 45B4  
                                              l5792 11FA                                                l5784 110C  
                                              l5776 0FDC                                                l5768 0EEE  
                                              l5696 058A                                                l5688 042A  
                                              l5848 60DC                                                l5864 6236  
                                              l5856 60A4                                                l5872 60FA  
                                              l5880 61FE                                                l5944 417A  
                                              l5936 410C                                                l6672 40DA  
                                              l4992 1D1C                                                l4984 1CC0  
                                              l4976 1C20                                                l4968 1B96  
                                              l4888 1760                                                l6664 2C6E  
                                              l6656 2800                                                l5794 11FE  
                                              l5786 1164                                                l5778 0FE0  
                                              l5698 05E2                                                l5970 6038  
                                              l5882 616A                                                l5866 623E  
                                              l5858 60AA                                                l5874 60FC  
                                              l6674 4154                                                l6666 4744  
                                              l4994 1D24                                                l4986 1CF4  
                                              l4978 1C30                                                l6658 2AD4  
                                              l5890 5A42                                                l5796 127A  
                                              l5788 1196                                                l5964 6022  
                                              l5884 617A                                                l5876 6106  
                                              l5868 60EA                                                l5980 5F7C  
                                              l6676 5BF4                                                l6668 3FE6  
                                              l4996 1D2A                                                l4988 1D08  
                                              l5972 620C                                                l5892 5A52  
                                              l5798 12D2                                                l5974 5E1C  
                                              l5966 6026                                                l5878 61FC  
                                              l5990 5F94                                                l5982 5F80  
                                              l4998 1D32                                                l5894 5A5C  
                                              l5886 5A24                                                l5976 5E4A  
                                              l5968 6034                                                l5992 5F98  
                                              l5984 5F84                                                l5896 3F8E  
                                              l5888 5A34                                                l5994 5F9C  
                                              l5986 5F88                                                l5978 5F74  
                                              l5898 3F92                                                l5988 5F90  
                                              l5996 511C                                                l5998 5160  
                                              STR_1 7F6E                                                STR_2 7FA4  
                                              STR_3 7F92                                                STR_4 7FB6  
                                              STR_5 7F5C                                                STR_6 7F01  
                                              STR_7 7FD6                                                STR_8 7EE7  
                                              STR_9 7F37                                                u3000 3012  
                                              u3001 300E                                                u3010 3022  
                                              u3011 301E                                                u3100 3106  
                                              u3020 303E                                                u3101 3102  
                                              u3021 303A                                                u3110 3116  
                                              u3030 304E                                                _LATB 000F8A  
                                              u3111 3112                                                u3031 304A  
                                              u3120 3136                                                u3040 3060  
                                              u3200 3634                                                u4000 3C16  
                                              _LATD 000F8C                                                u3121 3132  
                                              u3041 305C                                                u3201 3630  
                                              u4001 3C12                                                u3130 3148  
                                              u3050 3076                                                u3210 3644  
                                              u3131 3144                                                u3051 3072  
                                              u3211 3640                                                u3140 3164  
                                              u3060 308C                                                u3300 37FE  
                                              u3220 3684                                                u4020 3C84  
                                              u4100 1674                                                u3141 3160  
                                              u3061 3088                                                u3301 37FA  
                                              u3221 3680                                                u4021 3C80  
                                              u4101 1670                                                u3070 30A0  
                                              u3310 3810                                                u3230 36C4  
                                              u4030 3CA8                                                u3150 5F32  
                                              u4110 1684                                                u3071 309C  
                                              u3311 380C                                                u3231 36C0  
                                              u4015 3C2A                                                u3151 5F2E  
                                              u4111 1680                                                u3080 30BA  
                                              u3320 383E                                                u3240 373A  
                                              u3160 35BC                                                u3400 31A4  
                                              u4040 3CC4                                                u4016 3C34  
                                              u4200 1962                                                u4120 16C2  
                                              u5000 5A42                                                u3081 30B6  
                                              u3321 383A                                                u3241 3736  
                                              u3161 35B8                                                u3401 31A0  
                                              u4041 3CC0                                                u4017 3C44  
                                              u4201 195E                                                u4121 16BE  
                                              u5001 5A3E                                                u3090 30F4  
                                              u3330 3854                                                u3250 375C  
                                              u3170 35CE                                                u3410 31B4  
                                              u4050 3D18                                                u4210 1998  
                                              u4130 16D4                                                u5010 5A7C  
                                              u3091 30F0                                                u3331 3850  
                                              u3251 3758                                                u3171 35CA  
                                              u3411 31B0                                                u4035 3C9E  
                                              u4211 1994                                                u4131 16D0  
                                              u5011 5A78                                                u3340 3868  
                                              u3260 3786                                                u3180 35DE  
                                              u3500 3462                                                u3420 31F4  
                                              u5020 3FAE                                                u4060 3D34  
                                              u4300 1CBA                                                u4220 19B0  
                                              u4140 174E                                                u5100 4666  
                                              u3341 3864                                                u3261 3782  
                                              u3181 35DA                                                u3501 345E  
                                              u3421 31F0                                                u5021 3FAA  
                                              u4061 3D30                                                u4301 1CB6  
                                              u4221 19AC                                                u4141 174A  
                                              u5101 4662                                                u3350 3882  
                                              u3270 37AA                                                u3190 3622  
                                              u3510 3490                                                u3430 3206  
                                              u5030 4028                                                u4070 3D70  
                                              u2710 613A                                                u4310 1D08  
                                              u4230 19E2                                                u4150 1760  
                                              u5110 437A                                                u3351 387E  
                                              u3271 37A6                                                u3191 361E  
                                              u3511 348C                                                u3431 3202  
                                              u5031 4024                                                u4071 3D6C  
                                              u4055 3D0E                                                u2711 6136  
                                              u4311 1D04                                                u4231 19DE  
                                              u4151 175C                                                u5111 4376  
                                              u2800 2D4C                                                u3360 38CA  
                                              u3280 37C0                                                u3600 506E  
                                              u3520 34A6                                                u3440 3216  
                                              u5040 40A2                                                u4080 5E1A  
                                              u2720 4DA4                                                u4400 1FBE  
                                              u4320 1DB6                                                u4240 19F0  
                                              u4160 17DA                                                u5200 4508  
                                              u5120 4388                                                u2801 2D48  
                                              u3361 38C6                                                u3281 37BC  
                                              u3601 506A                                                u3521 34A2  
                                              u3441 3212                                                u5041 409E  
                                              u4081 5E16                                                u2721 4DA0  
                                              u4401 1FBA                                                u4321 1DB2  
                                              u4241 19EC                                                u4161 17D6  
                                              u5201 4504                                                u5121 4384  
                                              u3610 492C                                                u2810 2D5E  
                                              u3370 38FA                                                u3290 37DE  
                                              u3530 34BA                                                u3450 324C  
                                              u5050 411C                                                u2730 4DB6  
                                              u4410 1FFC                                                u4330 1DF2  
                                              u4250 1A1A                                                u4170 1866  
                                              u4090 162A                                                u5130 43E4  
                                              u5210 21BE                                                u3611 4928  
                                              u2811 2D5A                                                u3371 38F6  
                                              u3291 37DA                                                u3531 34B6  
                                              u3451 3248                                                u5051 4118  
                                              u2731 4DB2                                                u4411 1FF8  
                                              u4331 1DEE                                                u4251 1A16  
                                              u4171 1862                                                u4091 1626  
                                              u5131 43E0                                                u5211 21BA  
                                              u3620 496A                                                u2900 2EA6  
                                              u2820 2D6E                                                u3380 3928  
                                              u3540 34D4                                                u3460 325C  
                                              u5060 6050                                                u3700 4884  
                                              u2740 4DDE                                                u4420 201A  
                                              u4340 1E00                                                u4260 1B62  
                                              u4180 1898                                                u4500 3F6C  
                                              u5140 443A                                                u5300 24B4  
                                              u5220 21D0                                                u3621 4966  
                                              u2901 2EA2                                                u2821 2D6A  
                                              u3381 3924                                                u3541 34D0  
                                              u3461 3258                                                u5061 604C  
                                              u3701 4880                                                u2741 4DDA  
                                              u4421 2016                                                u4341 1DFC  
                                              u4261 1B5E                                                u4181 1894  
                                              u4501 3F68                                                u5141 4436  
                                              u5301 24B0                                                u5221 21CC  
                                              u3630 4988                                                u2910 2EB4  
                                              u2830 2DAA                                                u3550 351C  
                                              u3470 33D6                                                u3390 3192  
                                              u4510 46E2                                                u3710 48AC  
                                              u2750 4E14                                                u4430 202A  
                                              u4350 1E54                                                u4270 1BC8  
                                              u4190 18D6                                                u5150 4484  
                                              u5070 4556                                                u5310 24FC  
                                              u5230 2208                                                u3631 4984  
                                              u2911 2EB0                                                u2831 2DA6  
                                              u3551 3518                                                u3391 318E  
                                              u4511 46DE                                                u3711 48A8  
                                              u2751 4E10                                                u4431 2026  
                                              u4351 1E50                                                u4271 1BC4  
                                              u4191 18D2                                                u5151 4480  
                                              u5071 4552                                                u5311 24F8  
                                              u5231 2204                                                u3640 49A8  
                                              u2920 2EC4                                                u2840 2DB8  
                                              u2760 2CD2                                                u3560 354A  
                                              u3480 3430                                                u4600 41E2  
                                              u4520 4712                                                u3720 48CC  
                                              u4360 1F26                                                u4280 1C10  
                                              u3800 4D38                                                u4440 3DA2  
                                              u5160 44A2                                                u5080 4584  
                                              u5320 25C6                                                u5240 2236  
                                              u3641 49A4                                                u2921 2EC0  
                                              u2841 2DB4                                                u2761 2CCE  
                                              u3561 3546                                                u3481 342C  
                                              u4601 41DE                                                u4521 470E  
                                              u3721 48C8                                                u4361 1F22  
                                              u4281 1C0C                                                u3801 4D34  
                                              u4441 3D9E                                                u5161 449E  
                                              u5081 4580                                                u5321 25C2  
                                              u5241 2232                                                u3650 49F8  
                                              u2930 2EF6                                                u2850 2E26  
                                              u2770 2CE4                                                u3570 3584  
                                              u3490 3450                                                u4610 4214  
                                              u3810 5E7C                                                u4530 47C0  
                                              u3730 48DC                                                u4370 1F42  
                                              u4290 1C20                                                u4450 3DBE  
                                              u5170 44B2                                                u5090 4654  
                                              u5330 25EC                                                u5250 22B4  
                                              u3651 49F4                                                u2931 2EF2  
                                              u2851 2E22                                                u2771 2CE0  
                                              u3571 3580                                                u3491 344C  
                                              u3475 33CC                                                u4611 4210  
                                              u3811 5E78                                                u4531 47BC  
                                              u3731 48D8                                                u4371 1F3E  
                                              u4291 1C1C                                                u4451 3DBA  
                                              u5171 44AE                                                u5091 4650  
                                              u5331 25E8                                                u5251 22B0  
                                              u2940 2F04                                                u2860 2E3E  
                                              u2780 2CF4                                                u3580 4FFC  
                                              u4620 4246                                                u3820 5E9E  
                                              u4540 47D2                                                u3660 5FC8  
                                              u3900 4A60                                                u4380 1FAA  
                                              u4460 3F0A                                                u4700 29FC  
                                              u5180 44C0                                                u5340 2676  
                                              u5260 2358                                                u2941 2F00  
                                              u2861 2E38                                                u2781 2CF0  
                                              u3581 4FF8                                                u4621 4242  
                                              u3821 5E9A                                                u4541 47CE  
                                              u3661 5FC4                                                u3901 4A5C  
                                              u4381 1FA4                                                u3741 4B06  
                                              u4461 3F06                                                u4701 29F8  
                                              u5181 44BC                                                u5341 2672  
                                              u5261 2354                                                u2950 2F22  
                                              u2870 2E40                                                u2790 2D36  
                                              u3590 503A                                                u4550 5C2C  
                                              u3830 6076                                                u3670 480E  
                                              u3910 4A88                                                u4390 1FAC  
                                              u3750 4B2A                                                u4470 3F28  
                                              u4710 2A28                                                u4630 278E  
                                              u5190 44FA                                                u5350 2688  
                                              u5270 2374                                                u2951 2F1E  
                                              u2791 2D32                                                u3591 5036  
                                              u4551 5C28                                                u3831 6070  
                                              u3671 480A                                                u3911 4A84  
                                              u3751 4B26                                                u4471 3F24  
                                              u4711 2A24                                                u4631 278A  
                                              u5191 44F6                                                u5351 2684  
                                              u5271 2370                                                u5407 2118  
                                              u2960 2F5A                                                u2880 2E68  
                                              u4800 50E8                                                u4560 5C42  
                                              u3840 6078                                                u3680 4842  
                                              u3920 4AB2                                                u3760 4B54  
                                              u4480 3F42                                                u4720 2B6C  
                                              u4640 2820                                                u5280 23F4  
                                              u2961 2F56                                                u2881 2E64  
                                              u4801 50E4                                                u4561 5C3E  
                                              u3921 4AAE                                                u3761 4B50  
                                              u4481 3F3E                                                u4721 2B68  
                                              u4641 281C                                                u5281 23F0  
                                              u5417 231C                                                u4730 5D02  
                                              u2970 2FA0                                                u2890 2E86  
                                              u4570 5C58                                                u3690 4870  
                                              u3850 4F30                                                u3770 4B94  
                                              u4490 3F5C                                                u4650 2844  
                                              u4810 5DC0                                                u5290 243C  
                                              u4731 5CFE                                                u2971 2F9C  
                                              u2891 2E82                                                u4571 5C54  
                                              u5507 59D2                                                u3691 486C  
                                              u3851 4F2C                                                u3771 4B90  
                                              u4491 3F58                                                u4651 2840  
                                              u4811 5DBC                                                u5427 2652  
                                              u5291 2438                                                u2980 2FD6  
                                              u4740 5CAA                                                u4900 5B3E  
                                              u4580 5C6E                                                u4820 4E6A  
                                              u3940 4AEC                                                u3860 4F52  
                                              u3780 4CE0                                                u4660 2888  
                                              u2981 2FD2                                                u4741 5CA6  
                                              u4581 5C6A                                                u5517 59E8  
                                              u4821 4E66                                                u5437 6006  
                                              u3685 4838                                                u3941 4AE6  
                                              u3861 4F4E                                                u3781 4CDC  
                                              u4661 2884                                                u2990 2FE6  
                                              u4590 41B0                                                u4910 6150  
                                              u4830 4E86                                                u3950 4AEE  
                                              u3870 4FA8                                                u3790 4D0A  
                                              u4670 28FC                                                u2991 2FE2  
                                              u4591 41AC                                                u4911 614C  
                                              u5527 611C                                                u4831 4E82  
                                              u5447 6018                                                u3935 4AC4  
                                              u3871 4FA4                                                u3791 4D06  
                                              u4671 28F8                                                u4760 3AB8  
                                              u4840 4E9A                                                u4920 4C02  
                                              u3880 4FB8                                                u3960 5F72  
                                              u4680 2920                                                u4761 3AB4  
                                              u4905 5B34                                                u4841 4E96  
                                              u5457 4E70                                                u4921 4BFE  
                                              u3881 4FB4                                                u3961 5F6E  
                                              u4681 291C                                                u4770 3AEA  
                                              u4850 4EB6                                                u4930 4C36  
                                              u3890 4A42                                                u3970 5AAC  
                                              u4690 295C                                                u4771 3AE6  
                                              u4851 4EB2                                                u5467 4EA0  
                                              u4931 4C32                                                u3971 5AA8  
                                              u4691 2958                                                u5387 20B8  
                                              u4780 509E                                                u4860 4ECA  
                                              u4940 4C6A                                                u3980 3BC4  
                                              u4781 509A                                                u5477 4ED0  
                                              u4861 4EC6                                                u4941 4C66  
                                              u5397 20E8                                                u4758 39FA  
                                              u4790 50C0                                                u4870 4EE6  
                                              u4950 4C9E                                                u3990 3BF4  
                                              u4759 3A0E                                                u4791 50BC  
                                              u5487 4F00                                                u4871 4EE2  
                                              u4951 4C9A                                                u3895 4A38  
                                              u3991 3BF0                                                u4880 4EFA  
                                              u4960 5962                                                u5497 59BC  
                                              u4881 4EF6                                                u3985 3BBA  
                                              u4890 4F16                                                u4970 5996  
                                              u4891 4F12                                                u4980 59A6  
                                              u4981 59A2                                                u4991 15DE  
                                              u4967 5958                                                u4977 598C  
                                              _TMR0 000FD6                                                _TMR1 000FCE  
                                              _TMR2 000FBC                                   ?_Lcd_Write_String 0005  
                                              _dbuf 0200                                                _labs 5A8E  
                                              _atoi 46AE                                                _atol 451C  
                                              _main 206A                                                _prec 00ED  
                                              pad@i 0019                                                pad@p 0016  
                                              fsr0h 000FEA                                                fsr1h 000FE2  
                                              indf0 000FEF                                                fsr2h 000FDA  
                                              fsr0l 000FE9                                                indf2 000FDF  
                                              fsr1l 000FE1                                                pad@w 001B  
                                              fsr2l 000FD9                                                btemp 005F  
                                              _utoa 3D92                                         Key_Read@key 0006  
                                     ___fpclassifyf 4A02                         __end_of_TP_salida_sZ_center 61FC  
                              ??_EUSART_SerialBegin 0012                                                prodh 000FF4  
                                              prodl 000FF3                                                start 0058  
                                ??_Lcd_Write_String 0007                                     ___fldiv@new_exp 0047  
                                   __end_of_Lcd_Cmd 612A                                        ___param_bank 000000  
                  __end_of_TIMER1_ModoContador_Init 610A                                               ??_pad 0018  
                        ??_TP_CambioError_ceZ_equal 0053                                       ___fltol@sign1 0009  
                                             ?_labs 0001                                               ?_atoi 0007  
                                             ?_atol 000D                                     __end_of___fladd 3178  
                                             ?_main 0001                                     __end_of___fldiv 393C  
                                   __end_of___flneg 5FEA                                               STR_10 7EFB  
                                             _CCPR2 000F90                                               STR_11 7FC7  
                                             STR_20 7FF7                                               STR_12 7F0F  
                                             STR_13 7FF1                                               STR_14 7FE1  
                                             STR_23 7FFB                                               STR_15 7FEA  
                                             STR_16 7F23                                               STR_17 7ED3  
                                             STR_18 7F80                                               STR_19 7F4A  
                                   __end_of___flmul 35A2                                     __end_of___flsub 5EF0  
                                   __end_of___fltol 48FE                                     __end_of___lldiv 511C  
                                             ?_utoa 001D                                     __end_of___lodiv 4BF0  
                                 ?_Key_Enable_Filas 0001                                     __end_of___lomod 4D92  
                                             i2l502 6248                                               i2l481 0054  
                                             i2l499 624C                                        vfpfcnvrt@fmt 009F  
                                             _PORTB 000F81                                               _TRISB 000F93  
                                             _TRISD 000F95                 RL_reglas_controlador@_Salida_degree 0100  
                                ??_Key_Enable_Filas 0001                                         _strsetpoint 028C  
                               ___lmul@multiplicand 0005                         ??_TP_CambioError_ceNG_equal 0053  
                                             _flags 00F3                         ??_TP_CambioError_cePG_equal 0053  
                                             _error 00E3                                               _fputc 4D92  
                                             _fputs 5EF0                                     __end_of_isdigit 607E  
                                             _tecla 00F5                         ??_TP_CambioError_ceNM_equal 0053  
                                             labs@a 0001                                               atoi@n 000E  
                                             pad@fp 0012                                               atoi@s 0007  
                                             atol@n 0018                                               _width 00EB  
                                             atol@s 000D                                               _putch 612A  
                       ??_TP_CambioError_ceNP_equal 0053                                     __end_of_isspace 5EAA  
                       ??_TP_CambioError_cePM_equal 0053                                               pclath 000FFA  
                                             tablat 000FF5                         ??_TP_CambioError_cePP_equal 0053  
                        TP_CambioError_ceNG_equal@x 007C                                               plusw0 000FEB  
                                             plusw2 000FDB                                               ttemp5 0060  
                                             ttemp6 0063                                               ttemp7 0067  
                                             utoa@d 001F                                               utoa@i 003B  
                                             utoa@n 0033                                               utoa@p 002F  
                                             utoa@w 0031                                               status 000FD8  
                                             wtemp8 0060                                     __end_of_sprintf 5D7A  
                                    ?___fpclassifyf 0001                                    ___lodiv@dividend 0001  
                                      _Cambio_error 00D7                         EUSART_WriteString@ptrString 0002  
                                  __end_of_Lcd_Init 5A24                                    __end_of_Lcd_Port 5C78  
                        TP_CambioError_cePG_equal@x 007C                                     __initialization 5B5A  
                                      __end_of_labs 5AF4                                        __end_of_atoi 47F8  
                                      __end_of_atol 46AE                                        __end_of_main 276A  
                                      __end_of_utoa 3F8E                                    __end_of_Key_Init 6236  
                                  __end_of_Key_Read 417E                          TP_CambioError_ceNM_equal@x 007C  
                                  ??_OP_operador_Or 003A                                   _OP_operador_Defuz 393C  
                                            ??_labs 0005                                              ??_atoi 0009  
                                            ??_atol 0011                                              ??_main 00CD  
                        TP_CambioError_ceNP_equal@x 007C        Control_velocidad_difusoInferenceEngine@error 0096  
                                            ??_utoa 0027                                     OP_operador_Or@a 0032  
                                   OP_operador_Or@b 0036                                       __activetblptr 000002  
                                      ?_TIMER1_Stop 0001                          _MF_xfsg_triangle_equal$496 004F  
                                ?_OP_operador_Defuz 0060                          TP_CambioError_cePM_equal@x 007C  
                                  ___lodiv@quotient 0011                                    ??_OSCILADOR_Init 0001  
                         TP_CambioError_ceZ_equal@x 007C                          TP_CambioError_cePP_equal@x 007C  
                               ??_OP_operador_Defuz 004F                                              ?_fputc 0002  
                                            ?_fputs 000B                                              _CCPR2L 000F90  
                                            ?_putch 0001                                              _ANSELB 000F5C  
                                            _ANSELD 000F5E                                _TP_salida_sNG_center 61D8  
                                _EUSART_WriteString 6022                                              i2l6046 6246  
                                            i2l6048 624A                                              i2l6320 0034  
                                            i2l6330 0052                                              i2l6322 0038  
                                            i2l6314 000A                                              i2l6324 0040  
                                            i2l6316 0018                                              i2l6326 0046  
                                            i2l6318 0026                                              i2l6328 004E  
                                            _RCREG1 000FAE                             ??_TIMER0_Interrupt_Init 0001  
                                            _RCSTA1 000FAB                                           ??_Lcd_Cmd 0002  
                                     vfpfcnvrt@done 00A3                                              _SPBRG1 000FAF  
                              _TP_salida_sPG_center 617E                                              _TXREG1 000FAD  
                                  __end_of___xxtofl 451C                                              _TXSTA1 000FAC  
                              _TP_salida_sNM_center 61C6                                 ?_EUSART_WriteString 0002  
                              _TP_salida_sNP_center 61B4                           _TP_CambioError_ceNG_equal 58A2  
                              _TP_salida_sPM_center 6190                                        vfprintf@cfmt 00B6  
                         _TP_CambioError_cePG_equal 570A                                              ___flge 48FE  
                                            ___fleq 4FCE                                              ___lmul 5A24  
                         _TP_CambioError_ceNM_equal 581A                                _TP_salida_sPP_center 61A2  
                                         ??___fladd 0026                                              ___wmul 607E  
                                         ??___fldiv 003E                                           ??___flneg 0005  
                                         ??___flmul 000D                                           ??___flsub 0036  
                                         ??___fltol 0005                           __end_of_OP_operador_Defuz 3B7C  
                                         ??___lldiv 0009                           _TP_CambioError_ceNP_equal 5792  
                                         ??___lodiv 0011                                           ??___lomod 0011  
                                            _efgtoa 1606                           _TP_CambioError_cePM_equal 5682  
                                 __end_of_PORT_Init 60EA                                              _indice 00F4  
                                            _floorf 3B7C                           _TP_CambioError_cePP_equal 55FA  
                                            _memcpy 5DCC                                              _error_ 00DF  
                                            clear_0 5B92                                              clear_1 5B9E  
                                            clear_2 5BAA                                              _salida 00F9  
                                            isa$std 000001                                              _tiempo 00EF  
                                            _strRPM 0278                                              pad@buf 0014  
                          _TIMER1_ModoContador_Init 60EA                                              _strcpy 5F34  
                                            _strpwm 0264                                              fputc@c 0002  
                                            fputs@c 000F                                              fputs@i 0010  
                                            fputs@s 000B                                           ??_isdigit 0003  
                              ??_EUSART_WriteString 0004                                     ___fpclassifyf@e 0009  
                                   ___fpclassifyf@u 000B                                     ___fpclassifyf@x 0001  
                                      __mediumconst 7ED2                                           ??_isspace 0003  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                                              putch@c 0001  
                     __end_of_InterruptHighPriority 0058                                    __end_of_vfprintf 5DCC  
                                            utoa@fp 001D                                  OP_operador_Defuz@i 008A  
                                         ??_sprintf 005F                               ?_TP_salida_sNG_center 0001  
                                   Lcd_Set_Cursor@a 0005                                     Lcd_Set_Cursor@b 0004  
                                   Lcd_Set_Cursor@y 0007                                     Lcd_Set_Cursor@z 0006  
                  RL_reglas_controlador@CambioError 0090                                          ___flge@ff1 001E  
                                        ___flge@ff2 0022                                     ??___fpclassifyf 0005  
                                      ___xxtofl@arg 0026                                        ___xxtofl@exp 0025  
                                      ___xxtofl@val 001C                                          ___fleq@ff1 0001  
                                        ___fleq@ff2 0005                               ?_TP_salida_sPG_center 0001  
                                        __accesstop 0060                             __end_of__initialization 5BB0  
                                        ___flneg@f1 0001                               ?_TP_salida_sNM_center 0001  
                                 __end_of_Lcd_Clear 621A                                       ___rparam_used 000001  
                                        ___fltol@f1 0001                               ?_TP_salida_sNP_center 0001  
                             __end_of_Hardware_Init 5FB2                               ?_TP_salida_sPM_center 0001  
                                    __pcstackCOMRAM 0001                               ?_TP_salida_sPP_center 0001  
                                      __pidataBANK0 624E                                        __pidataBANK1 6156  
                                     __end_of_fputc 4E5C                                       __end_of_fputs 5F34  
                              Key_Enable_Filas@fila 0003                                       __end_of_putch 6140  
                                    _Lcd_Set_Cursor 4BF0                                   ??_OP_operador_And 0032  
     Control_velocidad_difusoInferenceEngine@Salida 0055                                   ?_EUSART_WriteChar 0001  
                        __end_of_TP_error_eNG_equal 5572                          __end_of_TP_error_ePG_equal 53DA  
                                         ?_Lcd_Init 0001                                  ??_EUSART_WriteChar 0001  
                                         ?_Lcd_Port 0001                          __end_of_TP_error_eNM_equal 54EA  
                                           ??_fputc 0006                                             ??_fputs 000F  
                        __end_of_TP_error_eNP_equal 5462                                      _INTERRUPT_Init 623E  
                                  OP_operador_And@a 002A                          __end_of_TP_error_ePM_equal 5352  
                                  OP_operador_And@b 002E                                             ??_putch 0001  
                        __end_of_TP_error_ePP_equal 52CA                                          __pbssBANK0 00CF  
                                        __pbssBANK1 01CC                                          __pbssBANK2 0200  
                                     ?_TIMER1_Start 0001                                           ?_Key_Init 0001  
                                         ?_Key_Read 0001                         __end_of_TIMER2_ModoPWM_Init 620C  
                        __end_of_LCD_imprimir_Datos 51BA                                  _TP_salida_sZ_equal 000000  
                               EUSART_SerialBegin@n 0012                            ??_MF_xfsg_triangle_equal 004F  
                                _CCPR2_ModoPWM_Init 616A                                             ?___flge 001E  
                                           ?___fleq 0001                                             ?___lmul 0001  
                                           ?___wmul 0001                               _RL_reglas_controlador 005C  
                                        _flagTimer0 00F7                                             ?_efgtoa 006A  
                            fp__TP_salida_sZ_center 0000                                             ?_floorf 004F  
                                           ?_memcpy 0001                                      ___lmul@product 0009  
                            __end_of_Lcd_Set_Cursor 4CC2                                 ?_CCPR2_ModoPWM_Init 0001  
                                           ?_strcpy 0001                                           ?___xxtofl 001C  
                            __end_of_INTERRUPT_Init 6246                                             _SPBRGH1 000FB0  
                                        ??_Lcd_Init 0004                              ??_TP_salida_sNG_center 0005  
                                        ??_Lcd_Port 0001                                    ___lomod@dividend 0001  
                                    ??_TIMER1_Start 0001                              ??_TP_salida_sPG_center 0005  
                                        ??_Key_Init 0001                                          ??_Key_Read 0004  
                            ??_TP_salida_sNM_center 0005                                ??_CCPR2_ModoPWM_Init 0001  
                                    _Lcd_Write_Char 5FEA                                             _Lcd_Cmd 610A  
                            ??_TP_salida_sNP_center 0005                              ??_TP_salida_sPM_center 0005  
                                           __Hparam 0000                              ??_TP_salida_sPP_center 0005  
                                           __Lparam 0000                                             ___fladd 2CB8  
                                           ___fldiv 35A2                                             ___flneg 5FB2  
                                           ___flmul 3178                                             ___flsub 5EAA  
                                           ___fltol 47F8                                             ___lldiv 5078  
                                           ___lodiv 4B00                                             ___lomod 4CC2  
                                         ?_vfprintf 00B0                                             __pcinit 5B5A  
                                           __ramtop 0800                                     ?_Lcd_Set_Cursor 0004  
                                           __ptext0 206A                                             __ptext1 451C  
                                           __ptext2 5A24                                             __ptext3 4368  
                                           __ptext4 620C                                             __ptext5 511C  
                                           __ptext6 5D28                                             __ptext7 5D7A  
                                           __ptext8 276A                                             __ptext9 3D92  
                                         _T0CONbits 000FD5                                             _columna 00FD  
                                         _T1CONbits 000FCD                          RL_reglas_controlador@error 008C  
                       RL_reglas_controlador@Salida 0094                                           _T2CONbits 000FBA  
                                           _isdigit 6052                                          ??___xxtofl 0020  
                                           _salida_ 00DB                                             _isspace 5E64  
                                           efgtoa@c 0070                                             efgtoa@d 007C  
                                           efgtoa@e 0080                                             efgtoa@f 006C  
                                           efgtoa@g 0093                                             efgtoa@h 0088  
                                           efgtoa@i 0090                                             efgtoa@l 008C  
                                           efgtoa@m 007E                                             efgtoa@n 0097  
                                           efgtoa@p 0073                                             efgtoa@t 0075  
                                           efgtoa@u 0099                                             efgtoa@w 0082  
                                   ?_INTERRUPT_Init 0001                                             atoi@neg 000C  
                                           atol@neg 0016                                             _sprintf 5D28  
                            __end_of_Lcd_Write_Char 6022                                end_of_initialization 5BB0  
                         ?_TP_CambioError_ceZ_equal 007C                                             floorf@e 0064  
                                           floorf@m 0060                                             floorf@u 0066  
                                           floorf@x 004F                                             memcpy@d 0007  
                                           memcpy@n 0005                                             memcpy@s 0009  
                                           fputc@fp 0004                                       __Lmediumconst 7ED2  
                                           fputs@fp 000D                       __end_of_TIMER0_Interrupt_Init 623E  
                                   ___lldiv@divisor 0005                                     ___lldiv@counter 000D  
                        ??_TIMER1_ModoContador_Init 0001                              ?_RL_reglas_controlador 008C  
                                 __end_of_vfpfcnvrt 2CB8                                          efgtoa@mode 007A  
                                        efgtoa@sign 0092                                             postdec1 000FE5  
                                           postdec2 000FDD                                             postinc0 000FEE  
                                           postinc1 000FE6                                             postinc2 000FDE  
                                  vfpfcnvrt@convarg 00A5                                           Lcd_Port@a 0001  
                                        ??_vfprintf 005F                           EUSART_SerialBegin@baudios 000E  
                               OP_operador_Defuz@mf 0060                                             strcpy@d 0007  
                                           strcpy@s 0005  Control_velocidad_difusoInferenceEngine@CambioError 009A  
                                         _PORT_Init 60C8                                         ___fladd@grs 002D  
                                     ___xxtofl@sign 0024                                           _TRISAbits 000F92  
                                         _TRISCbits 000F94                                           _TRISDbits 000F95  
                                       ___fldiv@grs 0049                                         ___fldiv@rem 0042  
                                   ?_Lcd_Write_Char 0001                                   Lcd_Write_String@a 0005  
                                 Lcd_Write_String@i 0009                                         ___flmul@grs 0012  
                                       _CCP2CONbits 000F97                                           _Lcd_Clear 620C  
                                   _OP_operador_And 5CD0                                      __end_of___flge 4A02  
                                    __end_of___fleq 5078                                      __end_of___lmul 5A8E  
                                       vfpfcnvrt@ap 00A1                                         vfpfcnvrt@cp 00AE  
                                       vfpfcnvrt@fp 009D                                      __end_of___wmul 60A4  
                              __end_of_TIMER1_Start 624E                                    _Lcd_Write_String 592A  
                                    __end_of_efgtoa 206A                                      __end_of_floorf 3D92  
                                    __end_of_memcpy 5E1C                                          floorf@F526 01CC  
                                        ?_PORT_Init 0001                            RL_reglas_controlador@_rl 0182  
                                    __end_of_strcpy 5F74                              _MF_xfsg_triangle_equal 417E  
                               start_initialization 5B5A                                     ___lodiv@divisor 0009  
                                   ___lodiv@counter 0019                                         __end_of_pad 4FCE  
                                         _Keypad4x4 01E4                               _InterruptHighPriority 0008  
                           fp__TP_salida_sNG_center 0000                                    _Key_Enable_Filas 5BBE  
                             __end_of___fpclassifyf 4B00                             fp__TP_salida_sPG_center 0000  
                                _TP_error_eNG_equal 54EA                                 _TP_salida_sNG_equal 000000  
                           fp__TP_salida_sNM_center 0000                                  _TP_error_ePG_equal 5352  
                               _TP_salida_sPG_equal 000000                                  _TP_error_eNM_equal 5462  
                               _TP_salida_sNM_equal 000000                      RL_reglas_controlador@_Salida_i 01CA  
                                _TP_error_eNP_equal 53DA                                 _TP_salida_sNP_equal 000000  
                           fp__TP_salida_sNP_center 0000                                  _TP_error_ePM_equal 52CA  
                                       vfprintf@fmt 00B2                                 _TP_salida_sPM_equal 000000  
              RL_reglas_controlador@_CambioError_eq 01AE                             fp__TP_salida_sPM_center 0000  
                                        ?_Lcd_Clear 0001                                            ??___flge 0026  
                                          ??___fleq 0009                                  _TP_error_ePP_equal 5242  
                                          ??___lmul 0009                                 _TP_salida_sPP_equal 000000  
                                          ??___wmul 0005                                 ?_TP_error_eNG_equal 007C  
                                          ??_efgtoa 0059                             fp__TP_salida_sPP_center 0000  
                                _LCD_imprimir_Datos 511C                                 ?_TP_error_ePG_equal 007C  
                                       __pdataBANK0 00FD                                         __pdataBANK1 01E4  
                                          ??_floorf 0053                                 ?_TP_error_eNM_equal 007C  
                                          ??_memcpy 0007                                     Lcd_Write_Char@a 0004  
                                   Lcd_Write_Char@y 0003                                 ?_TP_error_eNP_equal 007C  
                               ?_TP_error_ePM_equal 007C                                 ?_TP_error_ePP_equal 007C  
                                          ??_strcpy 0005                                           ___fladd@a 0022  
                                         ___fladd@b 001E                                           ___fldiv@a 003A  
                                         ___fldiv@b 0036                                 ?_LCD_imprimir_Datos 0001  
                                         ___flmul@a 0009                                           ___flmul@b 0005  
                                         ___flsub@a 0032                                           ___flsub@b 002E  
                                     __pcstackBANK0 0060                                       __pcstackBANK1 0100  
                              ??_TP_error_eNG_equal 0053                                ??_TP_error_ePG_equal 0053  
                               _TP_salida_sZ_center 61EA                                ??_TP_error_eNM_equal 0053  
                               TP_error_eNG_equal@x 007C                                ??_TP_error_eNP_equal 0053  
                              ??_TP_error_ePM_equal 0053                                            ?_Lcd_Cmd 0001  
                              ??_TP_error_ePP_equal 0053                             __end_of_OP_operador_And 5D28  
                              ??_LCD_imprimir_Datos 005F                          MF_xfsg_triangle_equal@step 006C  
                    RL_reglas_controlador@_error_eq 0192                                         _efgtoa$1928 0077  
                               TP_error_ePG_equal@x 007C                                    ??_Lcd_Set_Cursor 0005  
                                         __pintcode 0008                                       __pmediumconst 7ED2  
                               TP_error_eNM_equal@x 007C                                            ?___fladd 001E  
                                          ?___fldiv 0036                                            ?___flneg 0001  
                                          ?___flmul 0005                                            ?___flsub 002E  
                                          ?___fltol 0001                                            ?___lldiv 0001  
                                          ?___lodiv 0001                                ?_TP_salida_sZ_center 0001  
                                          ?___lomod 0001                                 TP_error_eNP_equal@x 007C  
                  __end_of_TP_CambioError_ceZ_equal 55FA                                    ??_INTERRUPT_Init 0001  
                                     ??_TIMER1_Stop 0001                                 TP_error_ePM_equal@x 007C  
                                       ??_PORT_Init 0001                                     ___lomod@divisor 0009  
                                   ___lomod@counter 0011                                            _BAUDCON1 000FB8  
                                         _constante 01F4                                            ?_isdigit 0001  
                                          ?_isspace 0001                                 TP_error_ePP_equal@x 007C  
                            ?_InterruptHighPriority 0001                                            ?_sprintf 00B8  
                                          _APPState 00F8                          __end_of_EUSART_SerialBegin 5B5A  
                                    ___wmul@product 0005                                            _LATDbits 000F8C  
                           ??_RL_reglas_controlador 0053                                            _PIE1bits 000F9D  
                 RL_reglas_controlador@_Salida_conc 0128                                            Lcd_Cmd@a 0003  
                                     _Hardware_Init 5F74                                            _PIR1bits 000F9E  
                                          i2u536_40 0018                                            i2u536_41 0014  
                                          i2u537_40 0026                                            i2u537_41 0022  
                                       ??_Lcd_Clear 0004                                            _RCONbits 000FD0  
                             ??_TP_salida_sZ_center 0005                __end_of_TIMER0_ModoTemporizador_Init 60C8  
                      _TIMER0_ModoTemporizador_Init 60A4                                           _vfpfcnvrt 276A  
                              Key_Read@value_column 0007                                   ___wmul@multiplier 0001  
                                          _WPUBbits 000F85                                   _Key_Scan_Columnas 4E5C  
                                  ??_Lcd_Write_Char 0002                                        _isspace$1790 0005  
                                ?_Key_Scan_Columnas 0001                                      _OP_operador_Or 5C78  
                                          _Lcd_Init 59A8                                            _Lcd_Port 5C1C  
                                        vfpfcnvrt@c 00AD                                           _strtiempo 0250  
                               __end_of_TIMER1_Stop 624A                                   ___lmul@multiplier 0001  
                                       _INTCON2bits 000FF1                                           copy_data0 5B6E  
                                          _Key_Init 6228                                            _Key_Read 3F8E  
                          __end_of_Lcd_Write_String 59A8                                        _TIMER1_Start 624A  
                               ??_Key_Scan_Columnas 0001                                    ?_OP_operador_And 002A  
                                    _OSCILADOR_Init 621A                                    _EUSART_WriteChar 6140  
                                    ?_Hardware_Init 0001                                            __Hrparam 0000  
                             _TIMER0_Interrupt_Init 6236                                           memcpy@tmp 000B  
                                        vfprintf@ap 00B4                                            __Lrparam 0000  
                                        vfprintf@fp 00B0                             MF_xfsg_triangle_equal@a 0070  
                           MF_xfsg_triangle_equal@b 0074                             MF_xfsg_triangle_equal@c 0078  
                           MF_xfsg_triangle_equal@x 0060                                          ?_vfpfcnvrt 009D  
                     ?_TIMER0_ModoTemporizador_Init 0001                             ?_MF_xfsg_triangle_equal 0060  
                          __end_of_Key_Enable_Filas 5C1C                           __end_of_Key_Scan_Columnas 4F20  
                                        _ANSELAbits 000F5B                                          _ANSELCbits 000F5D  
                                ___fpclassifyf@F465 00CF                                   _TP_error_eZ_equal 51BA  
                                        sprintf@fmt 00BA                              __end_of_OP_operador_Or 5CD0  
                         MF_xfsg_triangle_equal@max 0068                           MF_xfsg_triangle_equal@min 0064  
                                          ___xxtofl 4368                                  ?_TP_error_eZ_equal 007C  
                          _TP_CambioError_ceZ_equal 5572                           ?_TIMER1_ModoContador_Init 0001  
                        ?_TP_CambioError_ceNG_equal 007C                                            __ptext10 4CC2  
                                          __ptext11 4B00                                            __ptext20 3B7C  
                                          __ptext12 1606                                            __ptext21 4A02  
                                          __ptext13 5F34                                            __ptext30 4BF0  
                                          __ptext22 47F8                                            __ptext14 4F20  
                                          __ptext31 3F8E                                            __ptext23 5FB2  
                                          __ptext15 5EF0                                            __ptext40 621A  
                                          __ptext32 4E5C                                            __ptext24 46AE  
                                          __ptext16 4D92                                            __ptext41 59A8  
                                          __ptext33 5BBE                                            __ptext25 5E64  
                                          __ptext17 612A                                            __ptext50 6140  
                                          __ptext42 610A                                            __ptext34 5F74  
                                          __ptext26 6052                                            __ptext18 5DCC  
                                          __ptext51 5E1C                                            __ptext43 5C1C  
                                          __ptext35 61FC                                            __ptext27 607E  
                                          __ptext19 5A8E                                            __ptext60 5572  
                                          __ptext52 005C                                            __ptext44 6228  
                                          __ptext36 60EA                                            __ptext28 592A  
                        ?_TP_CambioError_cePG_equal 007C                                            __ptext61 55FA  
                                          __ptext53 51BA                                            __ptext45 623E  
                                          __ptext37 60A4                                            __ptext29 5FEA  
                                          __ptext70 393C                                            __ptext62 5682  
                                          __ptext54 5242                                            __ptext46 5AF4  
                                          __ptext38 6236                                            __ptext71 3178  
                                          __ptext63 570A                                            __ptext55 52CA  
                                          __ptext47 5078                                            __ptext39 60C8  
                                          __ptext80 61D8                                            __ptext72 4FCE  
                                          __ptext64 5792                                            __ptext56 5352  
                                          __ptext48 616A                                            __ptext81 61EA  
                                          __ptext73 35A2                                            __ptext65 581A  
                                          __ptext57 53DA                                            __ptext49 6022  
                                          __ptext82 5CD0                                            __ptext74 2CB8  
                                          __ptext66 58A2                                            __ptext58 5462  
                                          __ptext83 48FE                                            __ptext75 617E  
                                          __ptext67 417E                                            __ptext59 54EA  
                                          __ptext76 6190                                            __ptext68 5EAA  
                                          __ptext85 6246                                            __ptext77 61A2  
                                          __ptext69 5C78                                            __ptext86 624A  
                                          __ptext78 61B4                                            __ptext87 0000  
                                          __ptext79 61C6                              OP_operador_Defuz@denom 0086  
                        ?_TP_CambioError_ceNM_equal 007C                          ?_TP_CambioError_ceNP_equal 007C  
                        ?_TP_CambioError_cePM_equal 007C                                            _contador 00F6  
                        ?_TP_CambioError_cePP_equal 007C                                          strcpy@dest 0001  
                               ??_TP_error_eZ_equal 0053                              __end_of_OSCILADOR_Init 6228  
                      RL_reglas_controlador@_Salida 0168                                            efgtoa@fp 006A  
                                          efgtoa@ne 0071                                            efgtoa@pp 0079  
                                          efgtoa@ou 0084                                            isa$xinst 000000  
                                          _setpoint 00E7                                            int$flags 005F  
                                          _vfprintf 5D7A                      __end_of_MF_xfsg_triangle_equal 4368  
                         __end_of_TP_error_eZ_equal 5242                          __end_of_EUSART_WriteString 6052  
                              EUSART_WriteChar@data 0001                                         _TIMER1_Stop 6246  
                                        _INTCONbits 000FF2                                     ?_OP_operador_Or 0032  
                                          memcpy@d1 0001                                            memcpy@s1 0003  
                               _TIMER2_ModoPWM_Init 61FC                                            isdigit@c 0001  
                 __end_of_TP_CambioError_ceNG_equal 592A     __end_of_Control_velocidad_difusoInferenceEngine 5E64  
         ??_Control_velocidad_difusoInferenceEngine 0055            ?_Control_velocidad_difusoInferenceEngine 0096  
           _Control_velocidad_difusoInferenceEngine 5E1C                   __end_of_TP_CambioError_cePG_equal 5792  
                                Lcd_Write_Char@temp 0002                   __end_of_TP_CambioError_ceNM_equal 58A2  
                                          intlevel2 0000                                           sprintf@ap 00C0  
                 __end_of_TP_CambioError_ceNP_equal 581A                   __end_of_TP_CambioError_cePM_equal 570A  
                                   ?_OSCILADOR_Init 0001                   __end_of_TP_CambioError_cePP_equal 5682  
                                          isspace@c 0001                                    ___lldiv@dividend 0001  
                                   ??_Hardware_Init 0014                                           strcpy@src 0003  
                                        _RCSTA1bits 000FAB                              ?_TIMER0_Interrupt_Init 0001  
                                        _OSCCONbits 000FD3                                ?_TIMER2_ModoPWM_Init 0001  
                                TP_error_eZ_equal@x 007C                                         efgtoa@nmode 007B  
                                       ??_vfpfcnvrt 005B                                  Lcd_Set_Cursor@temp 0008  
                                          sprintf@f 00C2                                            sprintf@s 00B8  
                              OP_operador_Defuz@max 007E                                    ___lldiv@quotient 0009  
                              OP_operador_Defuz@min 007A                                OP_operador_Defuz@num 0082  
                           ??_InterruptHighPriority 0001                      ??_TIMER0_ModoTemporizador_Init 0001  
  Control_velocidad_difusoInferenceEngine@_d_Salida 009E                                       ___fladd@signs 002A  
                                      ___fladd@aexp 002B                                        ___fladd@bexp 002C  
                             ??_TIMER2_ModoPWM_Init 0001                       __end_of_RL_reglas_controlador 1606  
                                    _salida_sistema 00D3  
